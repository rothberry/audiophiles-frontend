{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Nav.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header, Label, Sticky, Search } from \"semantic-ui-react\";\nimport { logoutUser, findDisplayUser } from \"../actions\";\n\nclass Nav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogout = e => {\n      localStorage.clear();\n      this.props.logoutUser();\n      this.props.history.push(\"/login\");\n    };\n\n    this.goToCurrentUserProfile = user_id => {\n      this.props.history.push(\"/profile/\".concat(user_id));\n      this.props.findDisplayUser(this.props.allUsers, this.props.history);\n    };\n  }\n\n  render() {\n    // TODO Make the NAVBAR conditionally render based on 'isCurrentUser' and 'isLoggedIn'\n    return (// <Sticky>\n      React.createElement(\"div\", {\n        className: \"nav-bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(Button, {\n        as: Link,\n        to: \"/feed\",\n        content: \"Feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        onClick: user_id => this.goToCurrentUserProfile(this.props.user.id),\n        content: \"Prof\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        to: \"/newsong\",\n        content: \"Upload Song\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        to: \"/editaccount\",\n        content: \"Edit Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        onClick: this.handleLogout,\n        content: \"Logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Search, {\n        style: {\n          margin: \"0 20px\"\n        },\n        onSearchChange: _.debounce((event, {\n          value\n        }) => handleChange(event, value), 500),\n        showNoResults: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), \"        \", React.createElement(Button, {\n        as: Link,\n        to: \"/login\",\n        content: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })) // </Sticky>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  findDisplayUser\n})(withRouter(Nav));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Nav.js"],"names":["React","Component","Link","withRouter","connect","Button","Grid","Header","Label","Sticky","Search","logoutUser","findDisplayUser","Nav","handleLogout","e","localStorage","clear","props","history","push","goToCurrentUserProfile","user_id","allUsers","render","user","id","margin","_","debounce","event","value","handleChange","mapStateToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8CC,MAA9C,QAA4D,mBAA5D;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,YAA5C;;AAEA,MAAMC,GAAN,SAAkBZ,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAC1Ba,YAD0B,GACXC,CAAC,IAAI;AAClBC,MAAAA,YAAY,CAACC,KAAb;AACA,WAAKC,KAAL,CAAWP,UAAX;AACA,WAAKO,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,KALyB;;AAAA,SAO1BC,sBAP0B,GAODC,OAAO,IAAI;AAClC,WAAKJ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,oBAAoCE,OAApC;AACA,WAAKJ,KAAL,CAAWN,eAAX,CAA2B,KAAKM,KAAL,CAAWK,QAAtC,EAAgD,KAAKL,KAAL,CAAWC,OAA3D;AACD,KAVyB;AAAA;;AAY1BK,EAAAA,MAAM,GAAG;AACP;AACA,WACE;AACA;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAEtB,IAAZ;AAAkB,QAAA,EAAE,EAAC,OAArB;AAA6B,QAAA,OAAO,EAAC,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,MAAD;AACE,QAAA,EAAE,EAAEA,IADN;AAEE,QAAA,OAAO,EAAEoB,OAAO,IAAI,KAAKD,sBAAL,CAA4B,KAAKH,KAAL,CAAWO,IAAX,CAAgBC,EAA5C,CAFtB;AAGE,QAAA,OAAO,EAAC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAQE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAExB,IAAZ;AAAkB,QAAA,EAAE,EAAC,UAArB;AAAgC,QAAA,OAAO,EAAC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EASE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAEA,IAAZ;AAAkB,QAAA,EAAE,EAAC,cAArB;AAAoC,QAAA,OAAO,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAUE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAEA,IAAZ;AAAkB,QAAA,OAAO,EAAE,KAAKY,YAAhC;AAA8C,QAAA,OAAO,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,EAWE,oBAAC,MAAD;AACM,QAAA,KAAK,EAAE;AAAEa,UAAAA,MAAM,EAAE;AAAV,SADb;AAEM,QAAA,cAAc,EAAEC,CAAC,CAACC,QAAF,CACd,CAACC,KAAD,EAAQ;AAAEC,UAAAA;AAAF,SAAR,KAAsBC,YAAY,CAACF,KAAD,EAAQC,KAAR,CADpB,EAEd,GAFc,CAFtB;AAMM,QAAA,aAAa,EAAE,KANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,cAmBE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAE7B,IAAZ;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,OAAO,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CAFF,CAwBE;;AAxBF;AA0BD;;AAxCyB;;AA2C5B,MAAM+B,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACT,IADP;AAELF,IAAAA,QAAQ,EAAEW,KAAK,CAACX;AAFX,GAAP;AAID,CALD;;AAOA,eAAenB,OAAO,CACpB6B,eADoB,EAEpB;AAAEtB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAFoB,CAAP,CAGbT,UAAU,CAACU,GAAD,CAHG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Button, Grid, Header, Label, Sticky, Search } from \"semantic-ui-react\"\nimport { logoutUser, findDisplayUser } from \"../actions\"\n\nclass Nav extends Component {\n  handleLogout = e => {\n    localStorage.clear()\n    this.props.logoutUser()\n    this.props.history.push(\"/login\")\n  }\n\n  goToCurrentUserProfile = user_id => {\n    this.props.history.push(`/profile/${user_id}`)\n    this.props.findDisplayUser(this.props.allUsers, this.props.history)\n  }\n\n  render() {\n    // TODO Make the NAVBAR conditionally render based on 'isCurrentUser' and 'isLoggedIn'\n    return (\n      // <Sticky>\n      <div className=\"nav-bar-container\">\n        <Button as={Link} to=\"/feed\" content=\"Feed\" />\n        {/* {this.props.user.isLoggedIn ? ( */}\n        <Button\n          as={Link}\n          onClick={user_id => this.goToCurrentUserProfile(this.props.user.id)}\n          content=\"Prof\"\n        />\n        <Button as={Link} to=\"/newsong\" content=\"Upload Song\" />\n        <Button as={Link} to='/editaccount' content=\"Edit Profile\" />\n        <Button as={Link} onClick={this.handleLogout} content=\"Logout\" />\n        <Search\n              style={{ margin: \"0 20px\" }}\n              onSearchChange={_.debounce(\n                (event, { value }) => handleChange(event, value),\n                500\n              )}\n              showNoResults={false}\n            />        {/* ) : ( */}\n        <Button as={Link} to=\"/login\" content=\"Login\" />\n        {/* )} */}\n      </div>\n      // </Sticky>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, findDisplayUser }\n)(withRouter(Nav))\n"]},"metadata":{},"sourceType":"module"}