{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\";\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from \"react-router-dom\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n\n    this.handleLoginSubmit = () => {\n      const fetchLoginUrl = 'http://localhost:3000/login';\n      const reqObj = {\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": \"Bearer \".concat(localStorage.token)\n        },\n        body: JSON.stringify(this.state)\n      };\n      fetch();\n    };\n\n    this.handleLoginChange = e => {\n      const targetValue = e.target.value;\n      const targetName = e.target.name;\n      this.setState({\n        [targetName]: targetValue\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleLoginSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Login\"), React.createElement(Form.Input, {\n      onChange: this.handleLoginChange,\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"Username\",\n      type: \"text\",\n      name: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleLoginChange,\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Login\"))), React.createElement(Message, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/createaccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Create Account\")))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(LoginForm));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/LoginForm.js"],"names":["React","Component","Button","Form","Grid","Header","Message","Segment","connect","Link","withRouter","LoginForm","state","username","password","handleLoginSubmit","fetchLoginUrl","reqObj","method","headers","localStorage","token","body","JSON","stringify","fetch","handleLoginChange","e","targetValue","target","value","targetName","name","setState","render","console","log","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment\n} from \"semantic-ui-react\"\nimport { connect } from 'react-redux'\nimport { Link, withRouter } from \"react-router-dom\"\n\nclass LoginForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  }\n\n  handleLoginSubmit = () => {\n    const fetchLoginUrl = 'http://localhost:3000/login'\n    const reqObj = {\n      method: 'POST',\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.token}`\n      },\n      body: JSON.stringify(this.state)\n    }\n    fetch()\n\n  }\n\n  handleLoginChange = e => {\n    const targetValue = e.target.value\n    const targetName = e.target.name\n    this.setState({ [targetName]: targetValue })\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <div className=\"login-form\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Grid.Column>\n            <Form size=\"large\" onSubmit={this.handleLoginSubmit}>\n              <Segment stacked>\n                <Header as=\"h1\">\n                    Login\n                </Header>\n                <Form.Input\n                  onChange={this.handleLoginChange}\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"Username\"\n                  type=\"text\"\n                  name=\"username\"\n                />\n                <Form.Input\n                  onChange={this.handleLoginChange}\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  name=\"password\"\n                />\n                <Button\n                  type=\"submit\"\n                  primary\n                  fluid\n                  size=\"large\"\n                >\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              <Link to=\"/createaccount\">Create Account</Link>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(withRouter(LoginForm))"]},"metadata":{},"sourceType":"module"}