{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfile.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid } from \"semantic-ui-react\";\nimport SongFeedComponent from \"./SongFeedComponent\";\nimport { findDisplayUser, followUser, currentUser } from \"../actions\";\n\nclass UserProfile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isCurrentUser: false,\n      relationship: {}\n    };\n\n    this.handleFollowUser = (followed, follower_id) => {\n      console.log(\"followed: \", followed.id);\n      console.log(\"follower: \", follower_id); // TODO Sends fetch to Followings Model with\n\n      this.props.followUser(followed, follower_id);\n    };\n\n    this.findRelationship = async () => {\n      await this.props.currentUser();\n      await this.props.findDisplayUser(this.props.allUsers, this.props.history);\n      const relationship = this.props.displayUser.passive_relationships.find(rel => {\n        return rel.follower_id === this.props.user.id;\n      });\n      const isCurrentUser = this.props.displayUser.id === this.props.user.id;\n      console.log(\"rel: \", relationship, isCurrentUser);\n      this.setState({\n        isCurrentUser,\n        relationship\n      });\n    };\n\n    this.handleUnfollowUser = () => {// TODO Send DELETE fetch to backend\n      // TODO Need the relationshipID\n    };\n\n    this.goToEditProfile = () => {\n      this.props.history.push(\"/editaccount\");\n    };\n  }\n\n  componentDidMount() {\n    this.findRelationship();\n  } // handleFollowUser = (followed_id, follower_id) => {\n\n\n  render() {\n    console.log(this.state);\n    const _this$state = this.state,\n          isCurrentUser = _this$state.isCurrentUser,\n          relationship = _this$state.relationship;\n    const _this$props$displayUs = this.props.displayUser,\n          username = _this$props$displayUs.username,\n          name = _this$props$displayUs.name,\n          location = _this$props$displayUs.location,\n          bio = _this$props$displayUs.bio,\n          id = _this$props$displayUs.id;\n    const filteredDisplayUserSongs = this.props.allSongs.filter(displaySong => {\n      return displaySong.song.user_id === id;\n    });\n    const mappedDisplayUserSongFeed = filteredDisplayUserSongs.map(displaySong => {\n      return React.createElement(SongFeedComponent, {\n        songData: displaySong,\n        userClickDisabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    }); // TODO Move isCurrentUser to Store\n    // console.log(\"current user? \", isCurrentUser)\n    // console.log(\"following? \", isFollowing)\n\n    return true ? React.createElement(\"div\", {\n      className: \"user-profile-\".concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, mappedDisplayUserSongFeed), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Username: \", username), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Name: \", name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"location: \", location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Bio: \", bio), isCurrentUser ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.goToEditProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Edit Profile\"), React.createElement(Button, {\n      onClick: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Delete Profile\")) : React.createElement(Button, {\n      onClick: (followed, follower_id) => this.handleFollowUser(this.props.displayUser, this.props.user.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Follow Me!\")))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"No User Profile\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displayUser: state.displayUser,\n    allSongs: state.allSongs,\n    allUsers: state.allUsers,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser\n})(withRouter(UserProfile));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfile.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","SongFeedComponent","findDisplayUser","followUser","currentUser","UserProfile","state","isCurrentUser","relationship","handleFollowUser","followed","follower_id","console","log","id","props","findRelationship","allUsers","history","displayUser","passive_relationships","find","rel","user","setState","handleUnfollowUser","goToEditProfile","push","componentDidMount","render","username","name","location","bio","filteredDisplayUserSongs","allSongs","filter","displaySong","song","user_id","mappedDisplayUserSongFeed","map","mapStateToProps","followeds","followers"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Button, Grid } from \"semantic-ui-react\"\nimport SongFeedComponent from \"./SongFeedComponent\"\nimport { findDisplayUser, followUser, currentUser } from \"../actions\"\n\nclass UserProfile extends Component {\n  state = {\n    isCurrentUser: false,\n    relationship: {}\n  }\n\n  componentDidMount() {\n    this.findRelationship()\n  }\n\n  // handleFollowUser = (followed_id, follower_id) => {\n  handleFollowUser = (followed, follower_id) => {\n    console.log(\"followed: \", followed.id)\n    console.log(\"follower: \", follower_id)\n    // TODO Sends fetch to Followings Model with\n    this.props.followUser(followed, follower_id)\n  }\n\n  findRelationship = async () => {\n    await this.props.currentUser()\n    await this.props.findDisplayUser(this.props.allUsers, this.props.history)\n    const relationship = this.props.displayUser.passive_relationships.find(rel => {\n      return rel.follower_id === this.props.user.id\n    })\n    const isCurrentUser = this.props.displayUser.id === this.props.user.id\n    console.log(\"rel: \", relationship, isCurrentUser)\n    this.setState({isCurrentUser, relationship})\n  }\n\n  handleUnfollowUser = () => {\n    // TODO Send DELETE fetch to backend\n    // TODO Need the relationshipID\n  }\n\n  goToEditProfile = () => {\n    this.props.history.push(\"/editaccount\")\n  }\n\n  render() {\n    console.log(this.state)\n    const {isCurrentUser, relationship} = this.state\n    const { username, name, location, bio, id } = this.props.displayUser\n    const filteredDisplayUserSongs = this.props.allSongs.filter(displaySong => {\n      return displaySong.song.user_id === id\n    })\n    const mappedDisplayUserSongFeed = filteredDisplayUserSongs.map(\n      displaySong => {\n        return (\n          <SongFeedComponent songData={displaySong} userClickDisabled={true} />\n        )\n      }\n    )\n    // TODO Move isCurrentUser to Store\n    // console.log(\"current user? \", isCurrentUser)\n    // console.log(\"following? \", isFollowing)\n    return true ? (\n      <div className={`user-profile-${id}`}>\n        <Grid columns={2}>\n          <Grid.Column>{mappedDisplayUserSongFeed}</Grid.Column>\n          <Grid.Column>\n            <h1>Username: {username}</h1>\n            <h1>Name: {name}</h1>\n            <h1>location: {location}</h1>\n            <p>Bio: {bio}</p>\n            {isCurrentUser ? (\n              <div>\n                <Button onClick={this.goToEditProfile}>Edit Profile</Button>\n                <Button onClick={null}>Delete Profile</Button>\n              </div>\n            ) : (\n              <Button\n                onClick={(followed, follower_id) =>\n                  this.handleFollowUser(\n                    this.props.displayUser,\n                    this.props.user.id\n                  )\n                }\n              >\n                Follow Me!\n              </Button>\n            )}\n          </Grid.Column>\n        </Grid>\n      </div>\n    ) : (\n      <div>No User Profile</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displayUser: state.displayUser,\n    allSongs: state.allSongs,\n    allUsers: state.allUsers,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\nexport default connect(\n  mapStateToProps,\n  { findDisplayUser, followUser, currentUser }\n)(withRouter(UserProfile))\n"]},"metadata":{},"sourceType":"module"}