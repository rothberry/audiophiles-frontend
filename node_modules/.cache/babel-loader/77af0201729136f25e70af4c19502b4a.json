{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongCommentShow.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { Segment, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { findDisplayComments } from \"../actions\";\nimport _ from 'lodash';\n\nclass SongCommentShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.showTime = ts => {\n      const date = ts.getDate();\n      const month = ts.getMonth();\n      const year = ts.getYear();\n      const hours = ts.getHours();\n      const minutes = \"0\" + ts.getMinutes();\n      const monthDateYear = month + 1 + \"/\" + date + \"/\" + (year - 100);\n      const hoursMinutes = hours + ':' + minutes.substr(-2);\n      const formattedTime = monthDateYear + ',' + hoursMinutes;\n      return formattedTime;\n    };\n\n    this.mappedComments = () => {\n      console.log('sup im here');\n      return this.props.displayComments.map(comment => {\n        let ts = new Date(comment.created_at);\n        return React.createElement(Segment, {\n          piled: true,\n          raised: true,\n          size: \"tiny\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Button, {\n          icon: \"delete\",\n          size: \"mini\",\n          onClick: null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), this.showTime(ts), \": \", comment.content);\n      });\n    };\n  }\n\n  componentDidMount() {// console.log('asdgjashdghkasgdhgsa', this.props);\n  }\n\n  render() {\n    let counter = 0;\n\n    if (this.props.allComments.length > 0 && counter === 0) {\n      this.props.findDisplayComments(this.props.allComments, this.props.displaySong);\n      counter++;\n    }\n\n    return React.createElement(Segment.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, _.reverse(this.mappedComments()));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allComments: state.allComments,\n    displaySong: state.displaySong,\n    displayComments: state.displayComments\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayComments\n})(withRouter(SongCommentShow));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongCommentShow.js"],"names":["React","Component","Segment","Button","connect","Link","withRouter","findDisplayComments","_","SongCommentShow","showTime","ts","date","getDate","month","getMonth","year","getYear","hours","getHours","minutes","getMinutes","monthDateYear","hoursMinutes","substr","formattedTime","mappedComments","console","log","props","displayComments","map","comment","Date","created_at","content","componentDidMount","render","counter","allComments","length","displaySong","reverse","mapStateToProps","state","user"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,mBAAT,QAAoC,YAApC;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,eAAN,SAA8BR,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAMtCS,QANsC,GAM1BC,EAAD,IAAQ;AACjB,YAAMC,IAAI,GAAGD,EAAE,CAACE,OAAH,EAAb;AACA,YAAMC,KAAK,GAAGH,EAAE,CAACI,QAAH,EAAd;AACA,YAAMC,IAAI,GAAGL,EAAE,CAACM,OAAH,EAAb;AACA,YAAMC,KAAK,GAAGP,EAAE,CAACQ,QAAH,EAAd;AACA,YAAMC,OAAO,GAAG,MAAMT,EAAE,CAACU,UAAH,EAAtB;AACA,YAAMC,aAAa,GAAKR,KAAK,GAAC,CAAP,GAAY,GAAZ,GAAkBF,IAAlB,GAAyB,GAAzB,IAAgCI,IAAI,GAAC,GAArC,CAAvB;AACA,YAAMO,YAAY,GAAGL,KAAK,GAAG,GAAR,GAAcE,OAAO,CAACI,MAAR,CAAe,CAAC,CAAhB,CAAnC;AACA,YAAMC,aAAa,GAAGH,aAAa,GAAG,GAAhB,GAAsBC,YAA5C;AACA,aAAOE,aAAP;AACD,KAhBqC;;AAAA,SAkBtCC,cAlBsC,GAkBrB,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAO,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,GAA3B,CAA+BC,OAAO,IAAI;AAC/C,YAAIrB,EAAE,GAAG,IAAIsB,IAAJ,CAASD,OAAO,CAACE,UAAjB,CAAT;AACA,eACE,oBAAC,OAAD;AAAS,UAAA,KAAK,MAAd;AAAe,UAAA,MAAM,MAArB;AAAsB,UAAA,IAAI,EAAC,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,IAAI,EAAC,MAA3B;AAAkC,UAAA,OAAO,EAAE,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEG,KAAKxB,QAAL,CAAcC,EAAd,CAFH,QAEwBqB,OAAO,CAACG,OAFhC,CADF;AAMD,OARM,CAAP;AASD,KA7BqC;AAAA;;AAEtCC,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AA2BDC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAO,GAAG,CAAd;;AACA,QAAI,KAAKT,KAAL,CAAWU,WAAX,CAAuBC,MAAvB,GAAgC,CAAhC,IAAqCF,OAAO,KAAK,CAArD,EAAwD;AACtD,WAAKT,KAAL,CAAWtB,mBAAX,CAA+B,KAAKsB,KAAL,CAAWU,WAA1C,EAAuD,KAAKV,KAAL,CAAWY,WAAlE;AACAH,MAAAA,OAAO;AACR;;AACD,WACE,oBAAC,OAAD,CAAS,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG9B,CAAC,CAACkC,OAAF,CAAU,KAAKhB,cAAL,EAAV,CAFH,CADF;AAMD;;AA3CqC;;AA8CxC,MAAMiB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAELN,IAAAA,WAAW,EAAEK,KAAK,CAACL,WAFd;AAGLE,IAAAA,WAAW,EAAEG,KAAK,CAACH,WAHd;AAILX,IAAAA,eAAe,EAAEc,KAAK,CAACd;AAJlB,GAAP;AAMD,CAPD;;AASA,eAAe1B,OAAO,CACpBuC,eADoB,EAEpB;AAAEpC,EAAAA;AAAF,CAFoB,CAAP,CAGbD,UAAU,CAACG,eAAD,CAHG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { Segment, Button } from \"semantic-ui-react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { findDisplayComments } from \"../actions\"\nimport _ from 'lodash'\n\nclass SongCommentShow extends Component {\n\n  componentDidMount() {\n    // console.log('asdgjashdghkasgdhgsa', this.props);\n  }\n  \n  showTime = (ts) => {\n    const date = ts.getDate()\n    const month = ts.getMonth()\n    const year = ts.getYear()\n    const hours = ts.getHours()\n    const minutes = \"0\" + ts.getMinutes()\n    const monthDateYear  = (month+1) + \"/\" + date + \"/\" + (year-100);\n    const hoursMinutes = hours + ':' + minutes.substr(-2)\n    const formattedTime = monthDateYear + ',' + hoursMinutes\n    return formattedTime\n  }\n  \n  mappedComments = () => {\n    console.log('sup im here')\n    return this.props.displayComments.map(comment => {\n      let ts = new Date(comment.created_at)\n      return(\n        <Segment piled raised size='tiny'>\n          <Button icon='delete' size='mini' onClick={null} />\n          {this.showTime(ts)}: {comment.content}\n        </Segment>\n      )\n    })\n  } \n\n  render() {\n    let counter = 0\n    if (this.props.allComments.length > 0 && counter === 0 ){\n      this.props.findDisplayComments(this.props.allComments, this.props.displaySong)      \n      counter++ \n    }\n    return (\n      <Segment.Group>\n        {/* {this.props.displayComments.length > 0 ? _.reverse(this.mappedComments()) : \"loading...\"}   */}\n        {_.reverse(this.mappedComments())}  \n      </Segment.Group>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allComments: state.allComments,\n    displaySong: state.displaySong,\n    displayComments: state.displayComments\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { findDisplayComments }\n)(withRouter(SongCommentShow))\n"]},"metadata":{},"sourceType":"module"}