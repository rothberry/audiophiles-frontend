{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongShowPage.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport Waveform from \"./Waveform\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport { findDisplaySong } from \"../actions\";\n\nclass SongShowPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goToUserProfile = (event, user_id) => {\n      this.props.history.push(\"/profile/\".concat(user_id));\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"cdm\"); // this.props.findDisplaySong(this.props.allSongs, this.props.history)\n  } // findSong = displaySongID => {\n  //   if (this.props.allSongs.length > 0) {\n  //     return this.props.allSongs.find(u => {\n  //       return u.song.id === displaySongID\n  //     })\n  //   }\n  // }\n\n\n  render() {\n    // TODO need current song\n    this.props.findDisplaySong(this.props.allSongs, this.props.history);\n    console.log(\"in soong page: \", this.props.displaySong);\n    const _this$props$displaySo = this.props.displaySong,\n          song = _this$props$displaySo.song,\n          song_link = _this$props$displaySo.song_link;\n    const isLoaded = !!this.props.displaySong.song;\n    const mappedTags = isLoaded ? song.tags.map(tag => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" #\", tag.name, \" \")) : null; // const mappedTags = null\n\n    return isLoaded ? React.createElement(\"div\", {\n      className: \"song-show-\".concat(song.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Header, {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"large\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, song.title))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: (event, id) => this.goToUserProfile(event, song.user.id),\n      style: {\n        fontStyle: \"italic\",\n        cursor: \"pointer\",\n        fontSize: \"large\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, song.user.username)), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, mappedTags))), React.createElement(Waveform, {\n      song: song,\n      song_link: song_link,\n      waveHeight: 125,\n      responsive: true,\n      splitChannels: true,\n      mediaControls: true,\n      maxCanvasWidth: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"loading......\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displaySong: state.displaySong,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplaySong\n})(withRouter(SongShowPage));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongShowPage.js"],"names":["React","Component","Waveform","withRouter","connect","Button","Grid","Header","findDisplaySong","SongShowPage","goToUserProfile","event","user_id","props","history","push","componentDidMount","console","log","render","allSongs","displaySong","song","song_link","isLoaded","mappedTags","tags","map","tag","name","id","fontWeight","fontSize","title","user","fontStyle","cursor","username","mapStateToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAEA,MAAMC,YAAN,SAA2BR,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAcnCS,eAdmC,GAcjB,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACpC,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,oBAAoCH,OAApC;AACD,KAhBkC;AAAA;;AACnCI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADkB,CAElB;AACD,GAJkC,CAMnC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMAC,EAAAA,MAAM,GAAG;AACP;AACA,SAAKN,KAAL,CAAWL,eAAX,CAA2B,KAAKK,KAAL,CAAWO,QAAtC,EAAgD,KAAKP,KAAL,CAAWC,OAA3D;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKL,KAAL,CAAWQ,WAA1C;AAHO,kCAIqB,KAAKR,KAAL,CAAWQ,WAJhC;AAAA,UAICC,IAJD,yBAICA,IAJD;AAAA,UAIOC,SAJP,yBAIOA,SAJP;AAKP,UAAMC,QAAQ,GAAG,CAAC,CAAC,KAAKX,KAAL,CAAWQ,WAAX,CAAuBC,IAA1C;AACA,UAAMG,UAAU,GAAGD,QAAQ,GACvBF,IAAI,CAACI,IAAL,CAAUC,GAAV,CAAcC,GAAG,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAASA,GAAG,CAACC,IAAb,MAArB,CADuB,GAEvB,IAFJ,CANO,CASP;;AACA,WAAOL,QAAQ,GACb;AAAK,MAAA,SAAS,sBAAeF,IAAI,CAACQ,EAApB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE,MAAd;AAAsBC,QAAAA,QAAQ,EAAE;AAAhC,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGV,IAAI,CAACW,KAFR,CADF,CADF,CADF,EASE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,OAAO,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,CAACtB,KAAD,EAAQmB,EAAR,KAAe,KAAKpB,eAAL,CAAqBC,KAArB,EAA4BW,IAAI,CAACY,IAAL,CAAUJ,EAAtC,CAD1B;AAEE,MAAA,KAAK,EAAE;AACLK,QAAAA,SAAS,EAAE,QADN;AAELC,QAAAA,MAAM,EAAE,SAFH;AAGLJ,QAAAA,QAAQ,EAAE;AAHL,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGV,IAAI,CAACY,IAAL,CAAUG,QARb,CADF,CADF,EAaE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuCV,UAAvC,CADF,CAbF,CATF,EA0BE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAEH,IADR;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,UAAU,EAAE,GAHd;AAIE,MAAA,UAAU,EAAE,IAJd;AAKE,MAAA,aAAa,EAAE,IALjB;AAME,MAAA,aAAa,EAAE,IANjB;AAOE,MAAA,cAAc,EAAE,GAPlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,CADa,GAsCb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAtCF;AAwCD;;AApEkC;;AAuErC,MAAMe,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACL,IADP;AAELb,IAAAA,WAAW,EAAEkB,KAAK,CAAClB,WAFd;AAGLD,IAAAA,QAAQ,EAAEmB,KAAK,CAACnB;AAHX,GAAP;AAKD,CAND;;AAQA,eAAehB,OAAO,CACpBkC,eADoB,EAEpB;AAAE9B,EAAAA;AAAF,CAFoB,CAAP,CAGbL,UAAU,CAACM,YAAD,CAHG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport Waveform from \"./Waveform\"\nimport { withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Button, Grid, Header } from \"semantic-ui-react\"\nimport { findDisplaySong } from \"../actions\"\n\nclass SongShowPage extends Component {\n  componentDidMount() {\n    console.log(\"cdm\")\n    // this.props.findDisplaySong(this.props.allSongs, this.props.history)\n  }\n\n  // findSong = displaySongID => {\n  //   if (this.props.allSongs.length > 0) {\n  //     return this.props.allSongs.find(u => {\n  //       return u.song.id === displaySongID\n  //     })\n  //   }\n  // }\n\n  goToUserProfile = (event, user_id) => {\n    this.props.history.push(`/profile/${user_id}`)\n  }\n\n  render() {\n    // TODO need current song\n    this.props.findDisplaySong(this.props.allSongs, this.props.history)\n    console.log(\"in soong page: \", this.props.displaySong)\n    const { song, song_link } = this.props.displaySong\n    const isLoaded = !!this.props.displaySong.song\n    const mappedTags = isLoaded\n      ? song.tags.map(tag => <span> #{tag.name} </span>)\n      : null\n    // const mappedTags = null\n    return isLoaded ? (\n      <div className={`song-show-${song.id}`}>\n        <Grid.Row>\n          <Grid.Column>\n            <Header \n              style={{ fontWeight: \"bold\", fontSize: \"large\" }}>\n              {song.title}\n            </Header>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column floated=\"left\">\n            <span\n              onClick={(event, id) => this.goToUserProfile(event, song.user.id)}\n              style={{\n                fontStyle: \"italic\",\n                cursor: \"pointer\",\n                fontSize: \"large\"\n              }}\n            >\n              {song.user.username}\n            </span>\n          </Grid.Column>\n          <Grid.Column>\n            <span style={{ fontStyle: \"italic\" }}>{mappedTags}</span>\n          </Grid.Column>\n        </Grid.Row>\n        <Waveform\n          song={song}\n          song_link={song_link}\n          waveHeight={125}\n          responsive={true}\n          splitChannels={true}\n          mediaControls={true}\n          maxCanvasWidth={500}\n        />\n      </div>\n    ) : (\n      <div>loading......</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displaySong: state.displaySong,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { findDisplaySong }\n)(withRouter(SongShowPage))\n"]},"metadata":{},"sourceType":"module"}