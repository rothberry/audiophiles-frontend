{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/App.js\";\n\n/*eslint-disable */\nimport React from \"react\";\nimport \"../App.css\";\nimport LoginForm from \"./LoginForm\";\nimport NewUserForm from \"./NewUserForm\";\nimport UserProfileContainer from \"./UserProfileContainer\";\nimport FeedContainer from \"./FeedContainer\";\nimport NewSongForm from \"./NewSongForm\";\nimport SongShowPage from \"./SongShowPage\";\nimport EditUserForm from \"./EditUserForm\";\nimport Nav from \"./Nav\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport { currentUser, logoutUser, fetchAllUsers, fetchAllSongs, fetchAllComments, fetchAllTags, createFollowersArray, createFollowedsArray } from \"../actions\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.asyncFetches = async () => {\n      await this.props.currentUser();\n      await this.props.fetchAllUsers();\n      await this.props.fetchAllSongs();\n      await this.props.fetchAllComments();\n      await this.props.fetchAllTags(); // const { allUsers, user } = this.props\n      // this.props.createFollowersArray(allUsers, user)\n      // this.props.createFollowedsArray(allUsers, user)\n    };\n  }\n\n  componentDidMount() {\n    this.asyncFetches();\n  }\n\n  render() {\n    const isLoggedIn = this.props.user.isLoggedIn;\n    console.log(!!isLoggedIn); // ? Need the 'isCurrentUser' 'isLoggedIn' to correct the paths\n\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      component: FeedContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, !!isLoggedIn ? React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : React.createElement(LoginForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/createaccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, !!isLoggedIn ? React.createElement(Redirect, {\n      push: true,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }) : React.createElement(NewUserForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/profile/:id\",\n      component: UserProfileContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/songs/:id\",\n      component: SongShowPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newsong\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, !!isLoggedIn ? React.createElement(NewSongForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }) : React.createElement(Redirect, {\n      push: true,\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  currentUser,\n  logoutUser,\n  fetchAllUsers,\n  fetchAllSongs,\n  fetchAllComments,\n  fetchAllTags,\n  createFollowersArray,\n  createFollowedsArray\n})(withRouter(App));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/App.js"],"names":["React","LoginForm","NewUserForm","UserProfileContainer","FeedContainer","NewSongForm","SongShowPage","EditUserForm","Nav","connect","Router","Route","withRouter","Switch","Redirect","currentUser","logoutUser","fetchAllUsers","fetchAllSongs","fetchAllComments","fetchAllTags","createFollowersArray","createFollowedsArray","App","Component","asyncFetches","props","componentDidMount","render","isLoggedIn","user","console","log","mapStateToProps","state","allUsers"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React from \"react\"\nimport \"../App.css\"\nimport LoginForm from \"./LoginForm\"\nimport NewUserForm from \"./NewUserForm\"\nimport UserProfileContainer from \"./UserProfileContainer\"\nimport FeedContainer from \"./FeedContainer\"\nimport NewSongForm from \"./NewSongForm\"\nimport SongShowPage from \"./SongShowPage\"\nimport EditUserForm from \"./EditUserForm\"\nimport Nav from \"./Nav\"\nimport { connect } from \"react-redux\"\nimport { Router, Route, withRouter, Switch, Redirect } from \"react-router-dom\"\nimport {\n  currentUser,\n  logoutUser,\n  fetchAllUsers,\n  fetchAllSongs,\n  fetchAllComments,\n  fetchAllTags,\n  createFollowersArray,\n  createFollowedsArray\n} from \"../actions\"\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.asyncFetches()\n  }\n\n  asyncFetches = async () => {\n    await this.props.currentUser()\n    await this.props.fetchAllUsers()\n    await this.props.fetchAllSongs()\n    await this.props.fetchAllComments()\n    await this.props.fetchAllTags()\n    // const { allUsers, user } = this.props\n    // this.props.createFollowersArray(allUsers, user)\n    // this.props.createFollowedsArray(allUsers, user)\n  }\n\n  render() {\n    const { isLoggedIn } = this.props.user\n    console.log(!!isLoggedIn)\n    // ? Need the 'isCurrentUser' 'isLoggedIn' to correct the paths\n    return (\n      <div className=\"app-container\">\n        {/* <Switch> */}\n        <Nav />\n        <br /> <br />\n        <Route path=\"/\" component={FeedContainer} />\n        <Route path=\"/login\">\n          {/* <LoginForm /> */}\n          {!!isLoggedIn ? <Redirect push to=\"/\" /> : <LoginForm />}\n        </Route>\n        <Route path=\"/createaccount\">\n          {!!isLoggedIn ? <Redirect push to=\"/\" /> : <NewUserForm />}\n        </Route>\n        <Route path=\"/profile/:id\" component={UserProfileContainer} />\n        <Route path=\"/songs/:id\" component={SongShowPage} />\n        <Route path=\"/newsong\">\n          {!!isLoggedIn ? <NewSongForm /> : <Redirect push to=\"/login\" />}\n        </Route>\n        {/* <Route path=\"/editaccount\" render={() => <EditUserForm />} /> */}\n        {/* </Switch> */}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    currentUser,\n    logoutUser,\n    fetchAllUsers,\n    fetchAllSongs,\n    fetchAllComments,\n    fetchAllTags,\n    createFollowersArray,\n    createFollowedsArray\n  }\n)(withRouter(App))\n"]},"metadata":{},"sourceType":"module"}