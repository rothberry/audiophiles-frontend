{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongShowPage.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport Waveform from \"./Waveform\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\n\nclass SongShowPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.findSong = displaySongID => {\n      if (this.props.allSongs.length > 0) {\n        return this.props.allSongs.find(u => {\n          return u.song.id === displaySongID;\n        });\n      }\n    };\n\n    this.goToUserProfile = (event, user_id) => {\n      this.props.history.push(\"/profile/\".concat(user_id));\n    };\n  }\n\n  render() {\n    // TODO need current song\n    const displaySongID = Number(this.props.history.location.pathname.slice(7));\n    const displaySong = this.findSong(displaySongID);\n    const song = displaySong.song,\n          song_link = displaySong.song_link;\n    const mappedTags = song.tags ? song.tags.map(tag => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" #\", tag.name, \" \")) : null;\n    return React.createElement(\"div\", {\n      className: \"song-show-\".concat(song.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"large\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, song.title))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: (event, id) => this.goToUserProfile(event, song.user.id),\n      style: {\n        fontStyle: \"italic\",\n        cursor: \"pointer\",\n        fontSize: \"large\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, song.user.username), React.createElement(\"span\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, mappedTags))), React.createElement(Waveform, {\n      song: song,\n      song_link: song_link,\n      waveHeight: 125,\n      responsive: true,\n      splitChannels: true,\n      mediaControls: true,\n      maxCanvasWidth: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, null // { currentSong }\n)(withRouter(SongShowPage));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongShowPage.js"],"names":["React","Component","Waveform","withRouter","connect","Button","Grid","Header","SongShowPage","findSong","displaySongID","props","allSongs","length","find","u","song","id","goToUserProfile","event","user_id","history","push","render","Number","location","pathname","slice","displaySong","song_link","mappedTags","tags","map","tag","name","fontWeight","fontSize","title","user","fontStyle","cursor","username","mapStateToProps","state"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport Waveform from \"./Waveform\"\nimport { withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Button, Grid, Header } from \"semantic-ui-react\"\n\nclass SongShowPage extends Component {\n  findSong = displaySongID => {\n    if (this.props.allSongs.length > 0) {\n      return this.props.allSongs.find(u => {\n        return u.song.id === displaySongID\n      })\n    }\n  }\n\n  goToUserProfile = (event, user_id) => {\n    this.props.history.push(`/profile/${user_id}`)\n  }\n\n  render() {\n    // TODO need current song\n    const displaySongID = Number(this.props.history.location.pathname.slice(7))\n    const displaySong = this.findSong(displaySongID)\n    const { song, song_link } = displaySong\n    const mappedTags = song.tags ? song.tags.map(tag => <span> #{tag.name} </span>) : null\n    return (\n      <div className={`song-show-${song.id}`}>\n        <Grid.Row columns={4}>\n          <Grid.Column>\n            <span style={{ fontWeight: \"bold\", fontSize: \"large\" }}>\n              {song.title}\n            </span>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column floated=\"left\">\n            <span\n              onClick={(event, id) => this.goToUserProfile(event, song.user.id)}\n              style={{\n                fontStyle: \"italic\",\n                cursor: \"pointer\",\n                fontSize: \"large\"\n              }}\n            >\n              {song.user.username}\n            </span>\n            <span style={{ fontStyle: \"italic\" }} >\n              {mappedTags}\n            </span>\n          </Grid.Column>\n        </Grid.Row>\n        <Waveform\n          song={song}\n          song_link={song_link}\n          waveHeight={125}\n          responsive={true}\n          splitChannels={true}\n          mediaControls={true}\n          maxCanvasWidth={500}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n  // { currentSong }\n)(withRouter(SongShowPage))\n"]},"metadata":{},"sourceType":"module"}