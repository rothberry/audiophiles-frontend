{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Grid, Header, Segment } from \"semantic-ui-react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { postNewSong } from \"../actions\";\nimport ActiveStorageComponent from \"./ActiveStorageComponent\";\n\nclass NewSongForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      // user_id: \"\",\n      song_link: \"\",\n      allTags: []\n    };\n\n    this.handleNewSongSubmit = e => {\n      e.preventDefault(); // const { title, genre, description, song_link } = this.state\n      // this.setState({user_id: this.props.currentUser.id})\n\n      const user_id = this.props.user.id;\n      console.log(user_id);\n      this.props.postNewSong(this.state, user_id, this.props.history);\n    };\n\n    this.handleNewSongChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onFilesAdded = e => {\n      const targetSongLink = e.target.files[0];\n      this.setState({\n        song_link: targetSongLink\n      });\n    };\n\n    this.goBackToProfile = () => {\n      this.props.history(\"/profile/\".concat(this.props.user.id));\n    };\n  }\n\n  componentDidMount() {\n    const fetchTagUrl = 'http://localhost:3000/tags';\n    fetch(fetchTagUrl).then(res => res.json()).then(data => {\n      this.setState({\n        allTags: data\n      });\n    });\n  }\n\n  render() {\n    // console.log(this.props)\n    const tagOptions = this.state.allTags ? this.state.allTags.map(tag => tag.name) : null;\n    return React.createElement(\"div\", {\n      className: \"new-song-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleNewSongSubmit,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"New Song\"), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Genre\",\n      type: \"text\",\n      name: \"genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Form.Select, {\n      onChange: this.handleNewSongChange,\n      search: true,\n      options: tagOptions,\n      placeholder: \"Tag\",\n      type: \"text\",\n      name: \"tag\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\" // ref={this.audioInput}\n      ,\n      onChange: this.onFilesAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Submit New Song\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postNewSong\n})(withRouter(NewSongForm));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js"],"names":["React","Component","connect","Button","Form","Grid","Header","Segment","Link","withRouter","postNewSong","ActiveStorageComponent","NewSongForm","state","title","genre","description","song_link","allTags","handleNewSongSubmit","e","preventDefault","user_id","props","user","id","console","log","history","handleNewSongChange","setState","target","name","value","onFilesAdded","targetSongLink","files","goBackToProfile","componentDidMount","fetchTagUrl","fetch","then","res","json","data","render","tagOptions","map","tag","mapStateToProps"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button, Form, Grid, Header, Segment } from \"semantic-ui-react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { postNewSong } from \"../actions\"\nimport ActiveStorageComponent from \"./ActiveStorageComponent\"\n\nclass NewSongForm extends Component {\n  state = {\n    title: \"\",\n    genre: \"\",\n    description: \"\",\n    // user_id: \"\",\n    song_link: \"\",\n    allTags: []\n  }\n\n  componentDidMount() {\n    const fetchTagUrl = 'http://localhost:3000/tags'\n    fetch(fetchTagUrl)\n    .then(res => res.json())\n    .then(data => {\n      this.setState({allTags: data})\n    })\n  }\n\n  handleNewSongSubmit = e => {\n    e.preventDefault()\n    // const { title, genre, description, song_link } = this.state\n    // this.setState({user_id: this.props.currentUser.id})\n    const user_id = this.props.user.id\n    console.log(user_id)\n    this.props.postNewSong(this.state, user_id, this.props.history)\n  }\n\n  handleNewSongChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onFilesAdded = e => {\n    const targetSongLink = e.target.files[0]\n    this.setState({ song_link: targetSongLink })\n  }\n\n  goBackToProfile = () => {\n    this.props.history(`/profile/${this.props.user.id}`)\n  }\n\n  render() {\n    // console.log(this.props)\n    const tagOptions = this.state.allTags ? this.state.allTags.map(tag => tag.name) : null\n    return (\n      <div className=\"new-song-form\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Grid.Column>\n            <Form\n              size=\"large\"\n              onSubmit={this.handleNewSongSubmit}\n              encType=\"multipart/form-data\"\n            >\n              <Segment stacked>\n                <Header as=\"h1\">New Song</Header>\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Title\"\n                  type=\"text\"\n                  name=\"title\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Genre\"\n                  type=\"text\"\n                  name=\"genre\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Description\"\n                  type=\"text\"\n                  name=\"description\"\n                />\n                <Form.Select\n                  onChange={this.handleNewSongChange}\n                  search\n                  options={tagOptions}\n                  placeholder=\"Tag\"\n                  type=\"text\"\n                  name=\"tag\"\n                />\n                <input\n                  type=\"file\"\n                  // ref={this.audioInput}\n                  onChange={this.onFilesAdded}\n                />\n                {/* <ActiveStorageComponent /> */}\n                <Button type=\"submit\" primary fluid size=\"large\">\n                  Submit New Song\n                </Button>\n                {/* <Button as={Link} onClick={this.goBackToProfile}>Go Back</Button> */}\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { postNewSong }\n)(withRouter(NewSongForm))\n"]},"metadata":{},"sourceType":"module"}