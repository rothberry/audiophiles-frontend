{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfile.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid } from \"semantic-ui-react\";\nimport SongFeedComponent from \"./SongFeedComponent\";\nimport { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser } from \"../actions\";\n\nclass UserProfile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFollowUser = (followed, follower_id) => {\n      console.log(\"followed: \", followed.id);\n      console.log(\"follower: \", follower_id); // TODO Sends fetch to Followings Model with\n\n      this.props.followUser(followed, follower_id);\n    };\n\n    this.asyncUserProfileProps = async () => {\n      await this.props.currentUser();\n      await this.props.findDisplayUser(this.props.allUsers, this.props.history);\n      const relationship = this.props.displayUser.passive_relationships.find(rel => {\n        return rel.follower_id === this.props.user.id;\n      });\n      this.props.setCurrentUser(this.props.displayUser, this.props.user);\n      this.props.currentRelationship(relationship);\n    };\n\n    this.handleUnfollowUser = () => {// TODO Send DELETE fetch to backend\n      // TODO Need the relationshipID\n    };\n\n    this.goToEditProfile = () => {\n      this.props.history.push(\"/editaccount\");\n    };\n  }\n\n  componentDidMount() {\n    this.asyncUserProfileProps();\n  } // handleFollowUser = (followed_id, follower_id) => {\n\n\n  render() {\n    console.log(this.state);\n    const isCurrentUser = this.state.isCurrentUser;\n    const _this$props$displayUs = this.props.displayUser,\n          username = _this$props$displayUs.username,\n          name = _this$props$displayUs.name,\n          location = _this$props$displayUs.location,\n          bio = _this$props$displayUs.bio,\n          id = _this$props$displayUs.id;\n    const filteredDisplayUserSongs = this.props.allSongs.filter(displaySong => {\n      return displaySong.song.user_id === id;\n    });\n    const mappedDisplayUserSongFeed = filteredDisplayUserSongs.map(displaySong => {\n      return React.createElement(SongFeedComponent, {\n        songData: displaySong,\n        userClickDisabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }); // TODO Move isCurrentUser to Store\n    // console.log(\"current user? \", isCurrentUser)\n    // console.log(\"following? \", isFollowing)\n\n    return true ? React.createElement(\"div\", {\n      className: \"user-profile-\".concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, mappedDisplayUserSongFeed), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Username: \", username), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Name: \", name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"location: \", location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Bio: \", bio), isCurrentUser ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.goToEditProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Edit Profile\"), React.createElement(Button, {\n      onClick: null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Delete Profile\")) : React.createElement(Button, {\n      onClick: (followed, follower_id) => this.handleFollowUser(this.props.displayUser, this.props.user.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Follow Me!\")))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"No User Profile\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displayUser: state.displayUser,\n    allSongs: state.allSongs,\n    allUsers: state.allUsers,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser\n})(withRouter(UserProfile));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfile.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","SongFeedComponent","findDisplayUser","followUser","currentUser","currentRelationship","setCurrentUser","UserProfile","handleFollowUser","followed","follower_id","console","log","id","props","asyncUserProfileProps","allUsers","history","relationship","displayUser","passive_relationships","find","rel","user","handleUnfollowUser","goToEditProfile","push","componentDidMount","render","state","isCurrentUser","username","name","location","bio","filteredDisplayUserSongs","allSongs","filter","displaySong","song","user_id","mappedDisplayUserSongFeed","map","mapStateToProps","followeds","followers"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Button, Grid } from \"semantic-ui-react\"\nimport SongFeedComponent from \"./SongFeedComponent\"\nimport {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser\n} from \"../actions\"\n\nclass UserProfile extends Component {\n\n  componentDidMount() {\n    this.asyncUserProfileProps()\n  }\n\n  // handleFollowUser = (followed_id, follower_id) => {\n  handleFollowUser = (followed, follower_id) => {\n    console.log(\"followed: \", followed.id)\n    console.log(\"follower: \", follower_id)\n    // TODO Sends fetch to Followings Model with\n    this.props.followUser(followed, follower_id)\n  }\n\n  asyncUserProfileProps = async () => {\n    await this.props.currentUser()\n    await this.props.findDisplayUser(this.props.allUsers, this.props.history)\n    const relationship = this.props.displayUser.passive_relationships.find(\n      rel => {\n        return rel.follower_id === this.props.user.id\n      }\n    )\n    this.props.setCurrentUser(this.props.displayUser, this.props.user)\n    this.props.currentRelationship(relationship)\n  }\n\n  handleUnfollowUser = () => {\n    // TODO Send DELETE fetch to backend\n    // TODO Need the relationshipID\n  }\n\n  goToEditProfile = () => {\n    this.props.history.push(\"/editaccount\")\n  }\n\n  render() {\n    console.log(this.state)\n    const { isCurrentUser } = this.state\n    const { username, name, location, bio, id } = this.props.displayUser\n    const filteredDisplayUserSongs = this.props.allSongs.filter(displaySong => {\n      return displaySong.song.user_id === id\n    })\n    const mappedDisplayUserSongFeed = filteredDisplayUserSongs.map(\n      displaySong => {\n        return (\n          <SongFeedComponent songData={displaySong} userClickDisabled={true} />\n        )\n      }\n    )\n    // TODO Move isCurrentUser to Store\n    // console.log(\"current user? \", isCurrentUser)\n    // console.log(\"following? \", isFollowing)\n    return true ? (\n      <div className={`user-profile-${id}`}>\n        <Grid columns={2}>\n          <Grid.Column>{mappedDisplayUserSongFeed}</Grid.Column>\n          <Grid.Column>\n            <h1>Username: {username}</h1>\n            <h1>Name: {name}</h1>\n            <h1>location: {location}</h1>\n            <p>Bio: {bio}</p>\n            {isCurrentUser ? (\n              <div>\n                <Button onClick={this.goToEditProfile}>Edit Profile</Button>\n                <Button onClick={null}>Delete Profile</Button>\n              </div>\n            ) : (\n              <Button\n                onClick={(followed, follower_id) =>\n                  this.handleFollowUser(\n                    this.props.displayUser,\n                    this.props.user.id\n                  )\n                }\n              >\n                Follow Me!\n              </Button>\n            )}\n          </Grid.Column>\n        </Grid>\n      </div>\n    ) : (\n      <div>No User Profile</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displayUser: state.displayUser,\n    allSongs: state.allSongs,\n    allUsers: state.allUsers,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\nexport default connect(\n  mapStateToProps,\n  { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser }\n)(withRouter(UserProfile))\n"]},"metadata":{},"sourceType":"module"}