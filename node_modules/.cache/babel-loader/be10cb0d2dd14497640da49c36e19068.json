{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongCommentShow.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { Segment, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { findDisplayComments, fetchAllComments } from \"../actions\";\nimport _ from \"lodash\";\n\nclass SongCommentShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.commentGrabber = async () => {\n      await this.props.fetchAllComments();\n      this.props.findDisplayComments(this.props.allComments, this.props.displaySong);\n    };\n\n    this.showTime = ts => {\n      const date = ts.getDate();\n      const month = ts.getMonth();\n      const year = ts.getYear();\n      const hours = ts.getHours();\n      const minutes = \"0\" + ts.getMinutes();\n      const monthDateYear = month + 1 + \"/\" + date + \"/\" + (year - 100);\n      const hoursMinutes = hours + \":\" + minutes.substr(-2);\n      const formattedTime = monthDateYear + \",\" + hoursMinutes;\n      return formattedTime;\n    };\n\n    this.mappedComments = () => {\n      console.log(\"sup im here\");\n      return this.props.displayComments.map(comment => {\n        let ts = new Date(comment.created_at);\n        return React.createElement(Segment, {\n          piled: true,\n          raised: true,\n          size: \"tiny\",\n          color: \"#0C0536\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(Button, {\n          icon: \"delete\",\n          size: \"mini\",\n          onClick: null,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            fontWeight: \"bold\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, comment.user.username, \": \"), comment.content, \" \", React.createElement(\"span\", {\n          style: {\n            fontStyle: \"italic\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, this.showTime(ts)));\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.commentGrabber();\n  }\n\n  render() {\n    // console.log(this.props.allComments)\n    return React.createElement(Segment.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.allComments.length > 0 ? _.reverse(this.mappedComments()) : \"loading...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allComments: state.allComments,\n    displaySong: state.displaySong,\n    displayComments: state.displayComments\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayComments,\n  fetchAllComments\n})(withRouter(SongCommentShow));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongCommentShow.js"],"names":["React","Component","Segment","Button","connect","Link","withRouter","findDisplayComments","fetchAllComments","_","SongCommentShow","commentGrabber","props","allComments","displaySong","showTime","ts","date","getDate","month","getMonth","year","getYear","hours","getHours","minutes","getMinutes","monthDateYear","hoursMinutes","substr","formattedTime","mappedComments","console","log","displayComments","map","comment","Date","created_at","fontWeight","user","username","content","fontStyle","componentDidMount","render","length","reverse","mapStateToProps","state"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { Segment, Button } from \"semantic-ui-react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { findDisplayComments, fetchAllComments } from \"../actions\"\nimport _ from \"lodash\"\n\nclass SongCommentShow extends Component {\n  componentDidMount() {\n    this.commentGrabber()\n  }\n\n  commentGrabber = async () => {\n    await this.props.fetchAllComments()\n    this.props.findDisplayComments(\n      this.props.allComments,\n      this.props.displaySong\n    )\n  }\n\n  showTime = ts => {\n    const date = ts.getDate()\n    const month = ts.getMonth()\n    const year = ts.getYear()\n    const hours = ts.getHours()\n    const minutes = \"0\" + ts.getMinutes()\n    const monthDateYear = month + 1 + \"/\" + date + \"/\" + (year - 100)\n    const hoursMinutes = hours + \":\" + minutes.substr(-2)\n    const formattedTime = monthDateYear + \",\" + hoursMinutes\n    return formattedTime\n  }\n\n  mappedComments = () => {\n    console.log(\"sup im here\")\n    return this.props.displayComments.map(comment => {\n      let ts = new Date(comment.created_at)\n      return (\n        <Segment piled raised size=\"tiny\" color='#0C0536'>\n          <Button icon=\"delete\" size=\"mini\" onClick={null} />\n          <span style={{ fontWeight: \"bold\" }}>{comment.user.username}: </span>\n          {comment.content}{\" \"}\n          <span style={{ fontStyle: \"italic\" }}>{this.showTime(ts)}</span>\n        </Segment>\n      )\n    })\n  }\n\n  render() {\n    // console.log(this.props.allComments)\n    return (\n      <Segment.Group>\n        {this.props.allComments.length > 0\n          ? _.reverse(this.mappedComments())\n          : \"loading...\"}\n      </Segment.Group>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allComments: state.allComments,\n    displaySong: state.displaySong,\n    displayComments: state.displayComments\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { findDisplayComments, fetchAllComments }\n)(withRouter(SongCommentShow))\n"]},"metadata":{},"sourceType":"module"}