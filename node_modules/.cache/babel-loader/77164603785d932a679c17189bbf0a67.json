{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Waveform from './Waveform'; // import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      audio: ''\n    };\n\n    this.fetchAudio = song_id => {\n      const fetchURL = 'http://localhost:3000/songs';\n      fetch(\"\".concat(fetchURL, \"/\").concat(song_id)).then(res => res.json()).then(audio => {\n        this.setState({\n          audio: audio.song_audio\n        });\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchAudio(45);\n  }\n\n  render() {\n    // const {} = this.props\n    console.log('feed state: ', this.state);\n    let songComp;\n\n    if (this.props.allSongs[9]) {\n      songComp = this.props.allSongs[9];\n      console.log('song playing: ', songComp.song_link);\n    }\n\n    const mario = require('../mario.mp3');\n\n    return React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"da Feed\", React.createElement(\"audio\", {\n      controls: \"controls\",\n      src: songComp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      controls: \"controls\",\n      src: mario,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, null)(withRouter(FeedContainer));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js"],"names":["React","Component","connect","withRouter","Waveform","FeedContainer","state","audio","fetchAudio","song_id","fetchURL","fetch","then","res","json","setState","song_audio","catch","err","console","log","componentDidMount","render","songComp","props","allSongs","song_link","mario","require","mapStateToProps","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCK,KADoC,GAC5B;AACNC,MAAAA,KAAK,EAAE;AADD,KAD4B;;AAAA,SAQpCC,UARoC,GAQtBC,OAAD,IAAa;AACxB,YAAMC,QAAQ,GAAG,6BAAjB;AACAC,MAAAA,KAAK,WAAID,QAAJ,cAAgBD,OAAhB,EAAL,CACCG,IADD,CACMC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADX,EAECF,IAFD,CAEML,KAAK,IAAI;AACb,aAAKQ,QAAL,CAAc;AAACR,UAAAA,KAAK,EAAEA,KAAK,CAACS;AAAd,SAAd;AACD,OAJD,EAKCC,KALD,CAKOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALd;AAMD,KAhBmC;AAAA;;AAIpCG,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,UAAL,CAAgB,EAAhB;AACD;;AAYDc,EAAAA,MAAM,GAAG;AACP;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAKd,KAAjC;AACA,QAAIiB,QAAJ;;AACA,QAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAJ,EAA4B;AAC1BF,MAAAA,QAAQ,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAX;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BG,QAAQ,CAACG,SAAvC;AACD;;AACD,UAAMC,KAAK,GAAGC,OAAO,CAAC,cAAD,CAArB;;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAO,MAAA,QAAQ,EAAC,UAAhB;AAA2B,MAAA,GAAG,EAAEL,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAO,MAAA,QAAQ,EAAC,UAAhB;AAA2B,MAAA,GAAG,EAAEI,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAWD;;AAvCmC;;AA0CtC,MAAME,eAAe,GAAGvB,KAAK,IAAI;AAC/B,SAAO;AACLwB,IAAAA,IAAI,EAAExB,KAAK,CAACwB,IADP;AAEL;AACAL,IAAAA,QAAQ,EAAEnB,KAAK,CAACmB;AAHX,GAAP;AAKD,CAND;;AAQA,eAAevB,OAAO,CACpB2B,eADoB,EAEpB,IAFoB,CAAP,CAGb1B,UAAU,CAACE,aAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { withRouter } from 'react-router-dom'\nimport Waveform from './Waveform';\n// import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  state = {\n    audio: ''\n  }\n  componentDidMount() {\n    this.fetchAudio(45)\n  }\n\n  fetchAudio = (song_id) => {\n    const fetchURL = 'http://localhost:3000/songs'\n    fetch(`${fetchURL}/${song_id}`)\n    .then(res=>res.json())\n    .then(audio => {\n      this.setState({audio: audio.song_audio})\n    })\n    .catch(err => console.log(err))\n  }\n\n  render() { \n    // const {} = this.props\n    console.log('feed state: ', this.state)\n    let songComp\n    if (this.props.allSongs[9]) {\n      songComp = this.props.allSongs[9]\n      console.log('song playing: ', songComp.song_link)\n    }\n    const mario = require('../mario.mp3')\n\n    return ( \n      <div className='feed-container'>\n        da Feed\n        {/* Map song components */}\n        <audio controls='controls' src={songComp} />\n        <audio controls='controls' src={mario} />\n        {/* <Waveform\n          src={songComp}\n        /> */}\n      </div>\n     );\n  }\n}\n \nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(withRouter(FeedContainer))"]},"metadata":{},"sourceType":"module"}