{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongCommentShow.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { Segment, Button } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { findDisplayComments, fetchAllComments, deleteCommentFromBackend, goToUserProfile } from \"../actions\";\nimport _ from \"lodash\";\n\nclass SongCommentShow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.commentGrabber = () => {\n      this.props.findDisplayComments(this.props.allComments, this.props.displaySong);\n    };\n\n    this.showTime = ts => {\n      const date = ts.getDate();\n      const month = ts.getMonth();\n      const year = ts.getYear();\n      const hours = ts.getHours();\n      const minutes = \"0\" + ts.getMinutes();\n      const monthDateYear = month + 1 + \"/\" + date + \"/\" + (year - 100);\n      const hoursMinutes = hours + \":\" + minutes.substr(-2);\n      const formattedTime = monthDateYear + \",\" + hoursMinutes;\n      return formattedTime;\n    };\n\n    this.mappedComments = () => {\n      const commentStyle = {\n        backgroundColor: \"#0C0536\",\n        color: \"#C0BDCA\"\n      };\n      return this.props.displayComments.map(comment => {\n        let ts = new Date(comment.created_at);\n        const isCurrentUser = this.props.user.id === comment.user.id;\n        return React.createElement(Segment, {\n          as: \"ol\",\n          size: \"tiny\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, isCurrentUser ? React.createElement(Button, {\n          icon: \"delete\",\n          size: \"mini\",\n          onClick: comment_id => this.props.deleteCommentFromBackend(comment.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }) : React.createElement(Button, {\n          icon: \"user\",\n          size: \"mini\",\n          onClick: (user_id, history) => this.props.goToUserProfile(comment.user.id, this.props.history),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(\"span\", {\n          style: {\n            fontStyle: \"italic\",\n            cursor: \"pointer\",\n            padding: \"0 10%\"\n          },\n          onClick: (user_id, history) => this.props.goToUserProfile(comment.user.id, this.props.history),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, comment.user.username, \":\", \" \"), React.createElement(\"span\", {\n          style: {\n            fontWeight: 'bold',\n            padding: '0 30%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, comment.content, \" \"), React.createElement(\"span\", {\n          style: {\n            fontStyle: \"italic\",\n            padding: '0 5%'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, this.showTime(ts)));\n      });\n    };\n  }\n\n  componentDidMount() {\n    // TODO This works, but it sucks\n    this.commentGrabber();\n  } // commentGrabber = async () => {\n\n\n  render() {\n    const commentStyleBox = {\n      overflow: \"auto\",\n      maxHeight: \"30vh\",\n      margin: \"0% 1%\"\n    }; // console.log(this.props.allComments)\n\n    return React.createElement(Segment.Group, {\n      raised: true,\n      style: commentStyleBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.props.allComments.length > 0 ? _.reverse(this.mappedComments()) : \"loading...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allComments: state.allComments,\n    displaySong: state.displaySong,\n    displayComments: state.displayComments\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayComments,\n  fetchAllComments,\n  deleteCommentFromBackend,\n  goToUserProfile\n})(withRouter(SongCommentShow));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongCommentShow.js"],"names":["React","Component","Segment","Button","connect","Link","withRouter","findDisplayComments","fetchAllComments","deleteCommentFromBackend","goToUserProfile","_","SongCommentShow","commentGrabber","props","allComments","displaySong","showTime","ts","date","getDate","month","getMonth","year","getYear","hours","getHours","minutes","getMinutes","monthDateYear","hoursMinutes","substr","formattedTime","mappedComments","commentStyle","backgroundColor","color","displayComments","map","comment","Date","created_at","isCurrentUser","user","id","comment_id","user_id","history","fontStyle","cursor","padding","username","fontWeight","content","componentDidMount","render","commentStyleBox","overflow","maxHeight","margin","length","reverse","mapStateToProps","state"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { Segment, Button } from \"semantic-ui-react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport {\n  findDisplayComments,\n  fetchAllComments,\n  deleteCommentFromBackend,\n  goToUserProfile\n} from \"../actions\"\nimport _ from \"lodash\"\n\nclass SongCommentShow extends Component {\n  componentDidMount() {\n    // TODO This works, but it sucks\n    this.commentGrabber()\n  }\n\n  // commentGrabber = async () => {\n  commentGrabber = () => {\n    this.props.findDisplayComments(\n      this.props.allComments,\n      this.props.displaySong\n    )\n  }\n\n  showTime = ts => {\n    const date = ts.getDate()\n    const month = ts.getMonth()\n    const year = ts.getYear()\n    const hours = ts.getHours()\n    const minutes = \"0\" + ts.getMinutes()\n    const monthDateYear = month + 1 + \"/\" + date + \"/\" + (year - 100)\n    const hoursMinutes = hours + \":\" + minutes.substr(-2)\n    const formattedTime = monthDateYear + \",\" + hoursMinutes\n    return formattedTime\n  }\n\n  mappedComments = () => {\n    const commentStyle = { backgroundColor: \"#0C0536\", color: \"#C0BDCA\" }\n    return this.props.displayComments.map(comment => {\n      let ts = new Date(comment.created_at)\n      const isCurrentUser = this.props.user.id === comment.user.id\n      return (\n        <Segment as=\"ol\" size=\"tiny\">\n          {isCurrentUser ? (\n            <Button\n              icon=\"delete\"\n              size=\"mini\"\n              onClick={comment_id =>\n                this.props.deleteCommentFromBackend(comment.id)\n              }\n            />\n          ) : (\n            <Button\n              icon=\"user\"\n              size=\"mini\"\n              onClick={(user_id, history) =>\n                this.props.goToUserProfile(comment.user.id, this.props.history)\n              }\n            />\n          )}\n          <span\n            style={{ fontStyle: \"italic\", cursor: \"pointer\", padding: \"0 10%\" }}\n            onClick={(user_id, history) =>\n              this.props.goToUserProfile(comment.user.id, this.props.history)\n            }\n          >\n            {comment.user.username}:{\" \"}\n          </span>\n          <span style={{fontWeight: 'bold', padding: '0 30%'}}>{comment.content} </span>\n          <span style={{ fontStyle: \"italic\", padding: '0 5%' }}>{this.showTime(ts)}</span>\n        </Segment>\n      )\n    })\n  }\n\n  render() {\n    const commentStyleBox = {\n      overflow: \"auto\",\n      maxHeight: \"30vh\",\n      margin: \"0% 1%\"\n    }\n    // console.log(this.props.allComments)\n    return (\n      <Segment.Group raised style={commentStyleBox}>\n        {this.props.allComments.length > 0\n          ? _.reverse(this.mappedComments())\n          : \"loading...\"}\n      </Segment.Group>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allComments: state.allComments,\n    displaySong: state.displaySong,\n    displayComments: state.displayComments\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    findDisplayComments,\n    fetchAllComments,\n    deleteCommentFromBackend,\n    goToUserProfile\n  }\n)(withRouter(SongCommentShow))\n"]},"metadata":{},"sourceType":"module"}