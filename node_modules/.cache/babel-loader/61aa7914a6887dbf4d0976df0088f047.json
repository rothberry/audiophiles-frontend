{"ast":null,"code":"import _defineProperty from \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//! All Reducers here\nimport { combineReducers } from \"redux\";\nexport default combineReducers({\n  // * current user w/ relationships related to user\n  user: user,\n  followeds: followeds,\n  followers: followers,\n  // * gathers as much data on mount\n  allUsers: allUsers,\n  allSongs: allSongs,\n  allComments: allComments,\n  // * Sets displayed user/song/comments for show pages\n  displayUser: displayUser,\n  displaySong: displaySong,\n  displayComments: displayComments,\n  allTags: allTags,\n  currentRelationship: currentRelationship\n}); // ! Need to reset store on LOGOUT\n\nfunction user(state = {}, action) {\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return {\n        user: action.user,\n        isLoggedIn: true\n      };\n\n    case \"LOGOUT_USER\":\n      return {\n        user: {}\n      };\n\n    case \"UPDATE_USER\":\n      return _objectSpread({\n        user: action.user\n      }, state);\n\n    case \"IS_CURRENT_USER\":\n      return _objectSpread({}, state, {\n        isCurrentUser: action.isCurrentUser\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction allUsers(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_USERS\":\n      return [...action.allUsers];\n\n    case 'ADD_NEW_USER':\n      return [...state, action.newUser];\n\n    default:\n      return state;\n  }\n}\n\nfunction allSongs(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_SONGS\":\n      return [...action.allSongs];\n\n    case \"ADD_SONG_TO_FEED\":\n      return [...state, action.newSong];\n\n    case 'REMOVE_SONG_FROM_FEED':\n      const newSongArray = state.filter(so => so.id !== action.song_id);\n      debugger;\n      return newSongArray;\n\n    default:\n      return state;\n  }\n}\n\nfunction followeds(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_FOLLOWEDS\":\n      return [...action.followeds];\n\n    default:\n      return state;\n  }\n}\n\nfunction followers(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_FOLLOWERS\":\n      return [...action.followers];\n\n    default:\n      return state;\n  }\n}\n\nfunction displayUser(state = {}, action) {\n  switch (action.type) {\n    case \"SET_DISPLAY_USER\":\n      return action.displayUser;\n    // ! Will remove displayUser on logout or next page?\n\n    default:\n      return state;\n  }\n}\n\nfunction displaySong(state = {}, action) {\n  switch (action.type) {\n    case \"SET_DISPLAY_SONG\":\n      return action.displaySong;\n    // ! Will remove displaySong on logout or next page?\n\n    default:\n      return state;\n  }\n}\n\nfunction allComments(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_COMMENTS\":\n      return [...action.allComments];\n\n    case \"ADD_NEW_COMMENT\":\n      return [...state, action.comment];\n\n    case \"DELETE_COMMENT\":\n      const newDisplayComments = state.filter(comment => comment.id !== action.comment_id);\n      return newDisplayComments;\n\n    default:\n      return state;\n  }\n}\n\nfunction displayComments(state = [], action) {\n  switch (action.type) {\n    case \"SET_DISPLAY_COMMENTS\":\n      return action.displayComments;\n\n    case \"ADD_NEW_COMMENT\":\n      return [...state, action.comment];\n\n    case \"DELETE_COMMENT\":\n      const newDisplayComments = state.filter(comment => comment.id !== action.comment_id);\n      return newDisplayComments;\n\n    default:\n      return state;\n  }\n}\n\nfunction allTags(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_TAGS\":\n      return [...action.allTags];\n    // TODO Add new tags when created\n\n    default:\n      return state;\n  }\n}\n\nfunction currentRelationship(state = {}, action) {\n  switch (action.type) {\n    case \"CURRENT_RELATIONSHIP\":\n      return _objectSpread({}, action.relationship);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/reducers/index.js"],"names":["combineReducers","user","followeds","followers","allUsers","allSongs","allComments","displayUser","displaySong","displayComments","allTags","currentRelationship","state","action","type","isLoggedIn","isCurrentUser","newUser","newSong","newSongArray","filter","so","id","song_id","comment","newDisplayComments","comment_id","relationship"],"mappings":"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","sourcesContent":["//! All Reducers here\nimport { combineReducers } from \"redux\"\n\nexport default combineReducers({\n  // * current user w/ relationships related to user\n  user: user,\n  followeds: followeds,\n  followers: followers,\n  // * gathers as much data on mount\n  allUsers: allUsers,\n  allSongs: allSongs,\n  allComments: allComments,\n  // * Sets displayed user/song/comments for show pages\n  displayUser: displayUser,\n  displaySong: displaySong,\n  displayComments: displayComments,\n  allTags: allTags,\n  currentRelationship: currentRelationship\n})\n\n// ! Need to reset store on LOGOUT\nfunction user(state = {}, action) {\n  switch (action.type) {\n    case \"LOGIN_USER\":\n      return {\n        user: action.user,\n        isLoggedIn: true\n      }\n    case \"LOGOUT_USER\":\n      return {\n        user: {}\n      }\n    case \"UPDATE_USER\":\n      return {\n        user: action.user,\n        ...state\n      }\n    case \"IS_CURRENT_USER\":\n      return {\n        ...state,\n        isCurrentUser: action.isCurrentUser\n      }\n    default:\n      return state\n  }\n}\n\nfunction allUsers(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_USERS\":\n      return [...action.allUsers]\n    case 'ADD_NEW_USER':\n      return [...state, action.newUser]\n    default:\n      return state\n  }\n}\n\nfunction allSongs(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_SONGS\":\n      return [...action.allSongs]\n    case \"ADD_SONG_TO_FEED\":\n      return [...state, action.newSong]\n    case 'REMOVE_SONG_FROM_FEED':\n      const newSongArray = state.filter(so => so.id !== action.song_id)\n      debugger\n      return newSongArray\n    default:\n      return state\n  }\n}\n\nfunction followeds(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_FOLLOWEDS\":\n      return [...action.followeds]\n    default:\n      return state\n  }\n}\n\nfunction followers(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_FOLLOWERS\":\n      return [...action.followers]\n    default:\n      return state\n  }\n}\n\nfunction displayUser(state = {}, action) {\n  switch (action.type) {\n    case \"SET_DISPLAY_USER\":\n      return action.displayUser\n    // ! Will remove displayUser on logout or next page?\n    default:\n      return state\n  }\n}\n\nfunction displaySong(state = {}, action) {\n  switch (action.type) {\n    case \"SET_DISPLAY_SONG\":\n      return action.displaySong\n    // ! Will remove displaySong on logout or next page?\n    default:\n      return state\n  }\n}\n\nfunction allComments(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_COMMENTS\":\n      return [...action.allComments]\n    case \"ADD_NEW_COMMENT\":\n      return [...state, action.comment]\n    case \"DELETE_COMMENT\":\n      const newDisplayComments = state.filter(\n        comment => comment.id !== action.comment_id\n      )\n      return newDisplayComments\n    default:\n      return state\n  }\n}\n\nfunction displayComments(state = [], action) {\n  switch (action.type) {\n    case \"SET_DISPLAY_COMMENTS\":\n      return action.displayComments\n    case \"ADD_NEW_COMMENT\":\n      return [...state, action.comment]\n    case \"DELETE_COMMENT\":\n      const newDisplayComments = state.filter(\n        comment => comment.id !== action.comment_id\n      )\n      return newDisplayComments\n    default:\n      return state\n  }\n}\n\nfunction allTags(state = [], action) {\n  switch (action.type) {\n    case \"SET_ALL_TAGS\":\n      return [...action.allTags]\n    // TODO Add new tags when created\n    default:\n      return state\n  }\n}\n\nfunction currentRelationship(state = {}, action) {\n  switch (action.type) {\n    case \"CURRENT_RELATIONSHIP\":\n      return {...action.relationship}\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}