{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfileSide.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\nimport { Button, Grid, Modal, Image, Icon, Label, Segment, Sticky, Header } from \"semantic-ui-react\";\nimport { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser, deleteUser } from \"../actions\";\n\nclass UserProfileSide extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFollowUser = (followed, follower_id) => {\n      // console.log(\"followed: \", followed.id)\n      // console.log(\"follower: \", follower_id)\n      this.props.followUser(followed, follower_id);\n    };\n\n    this.handleUnfollowUser = () => {// TODO Send DELETE fetch to backend\n      // TODO Need the relationshipID\n    };\n  }\n\n  render() {\n    const isCurrentUser = this.props.user.isCurrentUser;\n    const _this$props$displayUs = this.props.displayUser,\n          username = _this$props$displayUs.username,\n          name = _this$props$displayUs.name,\n          location = _this$props$displayUs.location,\n          bio = _this$props$displayUs.bio,\n          id = _this$props$displayUs.id,\n          img_url = _this$props$displayUs.img_url,\n          facebook_url = _this$props$displayUs.facebook_url,\n          twitter_url = _this$props$displayUs.twitter_url,\n          soundcloud_url = _this$props$displayUs.soundcloud_url;\n    const isFace = !facebook_url;\n    const isTwit = !twitter_url;\n    const isSound = !soundcloud_url;\n    const isImg = !!img_url;\n    console.log(img_url);\n    let isFollowing;\n\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id;\n      });\n    }\n\n    const mapFollowers = this.props.followers.map(fol => {\n      return React.createElement(Label, {\n        widths: \"equals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: (allUsers, history) => this.props.findDisplayUser(this.props.allUsers, this.props.history),\n        to: \"/profile/\".concat(fol.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, fol.username));\n    });\n    const buttonStyle = {\n      width: \"50%\",\n      width: '1000%'\n    };\n    const imgStyle = {\n      height: 300,\n      width: 300\n    }; // console.log('displayuser: ', this.displayUser)\n    // console.log(this.props)\n    // TODO Need correct img urls cause i can't edit shit..\n\n    return React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"feed-profile-side\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, isImg ? React.createElement(Image, {\n      src: img_url,\n      circular: true,\n      alt: \"\",\n      centered: true,\n      style: imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) : null, React.createElement(Header, {\n      as: \"h1\",\n      icon: \"user secret\",\n      content: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h2\",\n      icon: \"user\",\n      content: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h3\",\n      icon: \"location arrow\",\n      content: location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h4\",\n      icon: \"book\",\n      content: bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      centered: true,\n      circular: true,\n      style: buttonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"facebook\",\n      as: \"a\",\n      href: facebook_url,\n      disabled: isFace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), \" Facebook\"), React.createElement(Button, {\n      color: \"twitter\",\n      as: \"a\",\n      href: twitter_url,\n      disabled: isTwit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), \" Twitter\"), React.createElement(Button, {\n      color: \"orange\",\n      as: \"a\",\n      href: soundcloud_url,\n      disabled: isSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"soundcloud\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), \" Soundcloud\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), isCurrentUser ? React.createElement(Button, {\n      onClick: (user_id, history) => this.props.deleteUser(this.props.user.id, this.props.history),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Delete Account\") : null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n})(withRouter(UserProfileSide));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfileSide.js"],"names":["React","Component","connect","Link","withRouter","Redirect","Button","Grid","Modal","Image","Icon","Label","Segment","Sticky","Header","findDisplayUser","followUser","currentUser","currentRelationship","setCurrentUser","deleteUser","UserProfileSide","handleFollowUser","followed","follower_id","props","handleUnfollowUser","render","isCurrentUser","user","displayUser","username","name","location","bio","id","img_url","facebook_url","twitter_url","soundcloud_url","isFace","isTwit","isSound","isImg","console","log","isFollowing","followers","find","mapFollowers","map","fol","allUsers","history","buttonStyle","width","imgStyle","height","user_id","mapStateToProps","state","followeds"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter, Redirect } from \"react-router-dom\"\nimport {\n  Button,\n  Grid,\n  Modal,\n  Image,\n  Icon,\n  Label,\n  Segment,\n  Sticky,\n  Header\n} from \"semantic-ui-react\"\nimport {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n} from \"../actions\"\n\nclass UserProfileSide extends Component {\n  // handleFollowUser = (followed_id, follower_id) => {\n  handleFollowUser = (followed, follower_id) => {\n    // console.log(\"followed: \", followed.id)\n    // console.log(\"follower: \", follower_id)\n    this.props.followUser(followed, follower_id)\n  }\n\n  handleUnfollowUser = () => {\n    // TODO Send DELETE fetch to backend\n    // TODO Need the relationshipID\n  }\n\n  render() {\n    const { isCurrentUser } = this.props.user\n    const {\n      username,\n      name,\n      location,\n      bio,\n      id,\n      img_url,\n      facebook_url,\n      twitter_url,\n      soundcloud_url\n    } = this.props.displayUser\n    const isFace = !facebook_url\n    const isTwit = !twitter_url\n    const isSound = !soundcloud_url\n    const isImg = !!img_url\n    console.log(img_url)\n    let isFollowing\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id\n      })\n    }\n\n    const mapFollowers = this.props.followers.map(fol => {\n      return (\n        <Label widths=\"equals\">\n          <Link\n            onClick={(allUsers, history) =>\n              this.props.findDisplayUser(\n                this.props.allUsers,\n                this.props.history\n              )\n            }\n            to={`/profile/${fol.id}`}\n          >\n            {fol.username}\n          </Link>\n        </Label>\n      )\n    })\n    const buttonStyle = { width: \"50%\", width: '1000%' }\n    const imgStyle = {height: 300, width: 300}\n    // console.log('displayuser: ', this.displayUser)\n    // console.log(this.props)\n    // TODO Need correct img urls cause i can't edit shit..\n    return (\n      <Grid.Column >\n      {/* <Grid.Column > */}\n        {/* <Sticky> */}\n        <Segment className=\"feed-profile-side\">\n          {isImg ? <Image src={img_url} circular alt=\"\" centered style={imgStyle} /> : null}\n          <Header as=\"h1\" icon=\"user secret\" content={username} />\n          <Header as=\"h2\" icon=\"user\" content={name} />\n          <Header as=\"h3\" icon=\"location arrow\" content={location} />\n          <Header as=\"h4\" icon=\"book\" content={bio} />\n          <Button.Group centered circular style={buttonStyle}>\n            <Button\n              color=\"facebook\"\n              as=\"a\"\n              href={facebook_url}\n              disabled={isFace}\n            >\n              <Icon name=\"facebook\" /> Facebook\n            </Button>\n            <Button color=\"twitter\" as=\"a\" href={twitter_url} disabled={isTwit}>\n              <Icon name=\"twitter\" /> Twitter\n            </Button>\n            <Button\n              color=\"orange\"\n              as=\"a\"\n              href={soundcloud_url}\n              disabled={isSound}\n            >\n              <Icon name=\"soundcloud\" /> Soundcloud\n            </Button>\n          </Button.Group>\n        </Segment>\n        {/* </Sticky> */}\n        <br />\n        {/* <Segment widths=\"equal\">\n          <h4>Followers: </h4>\n          {mapFollowers.length > 0 ? (\n            <ul>{mapFollowers}</ul>\n          ) : (\n            <p>No Followers Yet!</p>\n          )}\n        </Segment> */}\n        {isCurrentUser ? (\n          <Button\n            onClick={(user_id, history) =>\n              this.props.deleteUser(this.props.user.id, this.props.history)\n            }\n          >\n            Delete Account\n          </Button>\n        ) : null}\n\n        {/* {!!isFollowing || isCurrentUser ? null : (\n          <Button\n            onClick={(followed, follower_id) =>\n              this.handleFollowUser(this.props.displayUser, this.props.user.id)\n            }\n          >\n            Follow Me!\n          </Button>\n        )} */}\n      </Grid.Column>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    findDisplayUser,\n    followUser,\n    currentUser,\n    currentRelationship,\n    setCurrentUser,\n    deleteUser\n  }\n)(withRouter(UserProfileSide))\n"]},"metadata":{},"sourceType":"module"}