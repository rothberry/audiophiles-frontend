{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Waveform.js\";\n\n/*eslint-disable */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Icon, Label } from \"semantic-ui-react\";\n\nclass Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTogglePlay = () => {\n      if (this.state.isPlaying) {\n        this.wavesurfer.pause();\n        this.setState({\n          isPlaying: !this.state.isPlaying\n        });\n      } else {\n        this.wavesurfer.play();\n        this.setState({\n          isPlaying: !this.state.isPlaying\n        });\n      }\n    };\n\n    this.handleStop = () => {\n      this.setState(prevState => {\n        this.wavesurfer.stop();\n        return {\n          isPlaying: false,\n          pos: 0\n        };\n      });\n    };\n\n    this.handleFavorite = e => {\n      console.log(e.target);\n    };\n\n    this.state = {\n      isPlaying: false,\n      pos: 0\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          waveHeight = _this$props.waveHeight,\n          responsive = _this$props.responsive,\n          splitChannels = _this$props.splitChannels,\n          mediaControls = _this$props.mediaControls,\n          maxCanvasWidth = _this$props.maxCanvasWidth;\n    this.$el = ReactDOM.findDOMNode(this);\n    this.$waveform = this.$el.querySelector(\".wave\");\n\n    if (this.$waveform) {\n      this.wavesurfer = WaveSurfer.create({\n        container: this.$waveform,\n        mediaType: \"audio\",\n        waveColor: \"red\",\n        progressColor: \"blue\",\n        partialRender: true,\n        // barWidth: 1,\n        height: waveHeight,\n        maxCanvasWidth: maxCanvasWidth,\n        splitChannels: splitChannels,\n        mediaControls: mediaControls,\n        responsive: responsive\n      }); // this.$waveform.style.backgroundColor = \"black\"\n\n      this.wavesurfer.load(this.props.song_link);\n    } else {\n      console.log('waveform loading...');\n    }\n  }\n\n  render() {\n    // return this.props.src ? (\n    const buttonStyle = {\n      width: '20%'\n    };\n    return React.createElement(\"div\", {\n      className: \"waveform\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), !this.state.isPlaying ? React.createElement(Button, {\n      name: \"play-pause\",\n      style: buttonStyle,\n      onClick: this.handleTogglePlay,\n      icon: \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }) : React.createElement(Button, {\n      name: \"play-pause\",\n      style: buttonStyle,\n      onClick: this.handleTogglePlay,\n      icon: \"pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Button, {\n      name: \"stop\",\n      onClick: this.handleStop,\n      icon: \"stop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: \"div\",\n      toggle: true,\n      labelPosition: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: true,\n      onClick: this.handleFavorite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Label, {\n      basic: true,\n      pointing: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"100\"))); // : ( \n    //   <div className='waveform'>da feeed is loadin..................</div>\n    // )\n  }\n\n}\n\nexport default connect(null, null)(withRouter(Waveform)); // Waveform.defaultProps = {\n//   src: \"\"\n// }","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Waveform.js"],"names":["React","ReactDOM","WaveSurfer","connect","withRouter","Button","Icon","Label","Waveform","Component","constructor","props","handleTogglePlay","state","isPlaying","wavesurfer","pause","setState","play","handleStop","prevState","stop","pos","handleFavorite","e","console","log","target","componentDidMount","waveHeight","responsive","splitChannels","mediaControls","maxCanvasWidth","$el","findDOMNode","$waveform","querySelector","create","container","mediaType","waveColor","progressColor","partialRender","height","load","song_link","render","buttonStyle","width"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport WaveSurfer from \"wavesurfer.js\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport { Button, Icon, Label } from \"semantic-ui-react\"\n\nclass Waveform extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isPlaying: false,\n      pos: 0\n    }\n  }\n  componentDidMount() {\n    const { waveHeight, responsive, splitChannels, mediaControls, maxCanvasWidth } = this.props\n    this.$el = ReactDOM.findDOMNode(this)\n    this.$waveform = this.$el.querySelector(\".wave\")\n    if (this.$waveform) {\n      this.wavesurfer = WaveSurfer.create({\n        container: this.$waveform,\n        mediaType: \"audio\",\n        waveColor: \"red\",\n        progressColor: \"blue\",\n        partialRender: true,\n        // barWidth: 1,\n        height: waveHeight,\n        maxCanvasWidth: maxCanvasWidth,\n        splitChannels: splitChannels,\n        mediaControls: mediaControls,\n        responsive: responsive\n      })\n      // this.$waveform.style.backgroundColor = \"black\"\n      this.wavesurfer.load(this.props.song_link)\n    } else {\n      console.log('waveform loading...')\n    }\n  }\n\n  handleTogglePlay = () => {\n    if (this.state.isPlaying) {\n      this.wavesurfer.pause()\n      this.setState({ isPlaying: !this.state.isPlaying })\n    } else {\n      this.wavesurfer.play()\n      this.setState({ isPlaying: !this.state.isPlaying })\n    }\n  }\n\n  handleStop = () => {\n    this.setState(prevState => {\n      this.wavesurfer.stop()\n      return { isPlaying: false, pos: 0 }\n    })\n  }\n\n  handleFavorite = (e) => {\n    console.log(e.target)\n  }\n\n  render() {\n    // return this.props.src ? (\n      const buttonStyle = {width: '20%'}\n    return (\n      <div className=\"waveform\">\n        <div className=\"wave\"></div>\n        {!this.state.isPlaying ? \n        <Button name=\"play-pause\" style={buttonStyle} onClick={this.handleTogglePlay} icon='play' /> :\n        <Button name=\"play-pause\" style={buttonStyle} onClick={this.handleTogglePlay} icon='pause' />\n        }\n        <Button name=\"stop\" onClick={this.handleStop} icon='stop' />\n        {/* <Button name=\"stop\" onClick={this.handleFavorite} icon='heart'> */}\n        <Button as='div' toggle labelPosition='right' >\n          <Button icon onClick={this.handleFavorite} >\n            <Icon name='heart' />\n          </Button>\n          <Label basic pointing='left'>\n            100\n          </Label>\n        </Button>\n\n        {/* </Button> */}\n      </div>\n    ) \n    // : ( \n    //   <div className='waveform'>da feeed is loadin..................</div>\n    // )\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(withRouter(Waveform))\n\n// Waveform.defaultProps = {\n//   src: \"\"\n// }\n"]},"metadata":{},"sourceType":"module"}