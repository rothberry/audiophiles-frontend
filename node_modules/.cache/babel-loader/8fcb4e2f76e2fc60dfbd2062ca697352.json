{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\";\n\nclass NewSongForm extends Component {\n  constructor(props) {\n    super();\n\n    this.handleNewSongSubmit = e => {\n      e.preventDefault(); // const {title, genre, description, song_link} = this.state\n      // console.log(this.audioInput.current.files[0])\n      // const newAudio = this.audioInput.current.files[0]\n      // debugger\n\n      this.setState({\n        song_link: e[0]\n      });\n      let songData = new FormData();\n      songData.append('song_link', this.state.song_link);\n      songData.append('title', this.state.title);\n      songData.append('genre', this.state.genre);\n      songData.append('description', this.state.description);\n      songData.append('user_id', this.props.currentUser.id); // const songData = {...this.state, song_link: newAudio, user_id: this.props.currentUser.id}\n\n      const fetchSongsUrl = \"http://localhost:3000/songs\";\n      const reqObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        // body: JSON.stringify(songData)\n        body: songData\n      };\n      fetch(fetchSongsUrl, reqObj).then(res => res.json()).then(console.log);\n    };\n\n    this.handleNewSongChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onFilesAdded = e => {\n      const targetSongLink = e.target.files[0];\n      this.setState({\n        song_link: targetSongLink\n      });\n    };\n\n    this.audioInput = React.createRef();\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      user_id: '',\n      song_link: ''\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"new-song-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleNewSongSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"New Song\"), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Genre\",\n      type: \"text\",\n      name: \"genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.audioInput,\n      onChange: this.onFilesAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Submit New Song\"))))));\n  }\n\n}\n\nexport default connect(null, null)(NewSongForm);","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js"],"names":["React","Component","connect","Button","Form","Grid","Header","Message","Segment","NewSongForm","constructor","props","handleNewSongSubmit","e","preventDefault","setState","song_link","songData","FormData","append","state","title","genre","description","currentUser","id","fetchSongsUrl","reqObj","method","headers","body","fetch","then","res","json","console","log","handleNewSongChange","target","name","value","onFilesAdded","targetSongLink","files","audioInput","createRef","user_id","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\"\n\nclass NewSongForm extends Component {\n  constructor(props) {\n    super()\n    this.audioInput = React.createRef()\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      user_id: '',\n      song_link: ''\n    }\n  }\n  \n  handleNewSongSubmit = e => {\n    e.preventDefault()\n    // const {title, genre, description, song_link} = this.state\n    // console.log(this.audioInput.current.files[0])\n    // const newAudio = this.audioInput.current.files[0]\n    // debugger\n    \n    this.setState({song_link: e[0]})\n    let songData = new FormData()\n    songData.append('song_link', this.state.song_link)\n    songData.append('title', this.state.title)\n    songData.append('genre', this.state.genre)\n    songData.append('description', this.state.description)\n    songData.append('user_id', this.props.currentUser.id)\n    // const songData = {...this.state, song_link: newAudio, user_id: this.props.currentUser.id}\n    const fetchSongsUrl = \"http://localhost:3000/songs\"\n    const reqObj = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      // body: JSON.stringify(songData)\n      body: songData\n    }\n    fetch(fetchSongsUrl, reqObj)\n    .then(res => res.json())\n    .then(console.log)\n  }\n\n  handleNewSongChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onFilesAdded = e => {\n    const targetSongLink = e.target.files[0]\n    this.setState({song_link: targetSongLink})\n  }\n\n  render() {\n    console.log(this.state)\n    console.log(this.props)\n    return (\n      <div className=\"new-song-form\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Grid.Column>\n            <Form size=\"large\" onSubmit={this.handleNewSongSubmit}>\n              <Segment stacked>\n                <Header as=\"h1\">New Song</Header>\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Title\"\n                  type=\"text\"\n                  name=\"title\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Genre\"\n                  type=\"text\"\n                  name=\"genre\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Description\"\n                  type=\"text\"\n                  name=\"description\"\n                />\n                <input type='file' ref={this.audioInput} onChange={this.onFilesAdded}/>\n\n                <Button type=\"submit\" primary fluid size=\"large\">\n                  Submit New Song\n                </Button>\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(NewSongForm)\n"]},"metadata":{},"sourceType":"module"}