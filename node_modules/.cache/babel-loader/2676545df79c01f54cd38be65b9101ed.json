{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport Waveform from \"./Waveform\";\n\nclass SongFeedComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    // ! Need current song with data\n    const songData = this.props.songData; // console.log(this.props)\n\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"song-comp-\".concat(songData.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, songData.song.title), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, songData.song.user.username), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, songData.song.genre), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, songData.song.description), React.createElement(Waveform, {\n      song_link: songData.song_link,\n      waveHeight: 100,\n      responsive: true,\n      splitChannels: false,\n      mediaControls: false,\n      maxCanvasWidth: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user // allUsers: state.allUsers,\n    // allSongs: state.allSongs\n\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(SongFeedComponent));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","Header","Waveform","SongFeedComponent","state","render","songData","props","id","song","title","user","username","genre","description","song_link","mapStateToProps"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCS,KADwC,GAChC,EADgC;AAAA;;AAGxCC,EAAAA,MAAM,GAAG;AACP;AADO,UAECC,QAFD,GAEc,KAAKC,KAFnB,CAECD,QAFD,EAGP;;AACA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,sBAAeA,QAAQ,CAACE,EAAxB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBF,QAAQ,CAACG,IAAT,CAAcC,KAAlC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,QAAQ,CAACG,IAAT,CAAcE,IAAd,CAAmBC,QAAxB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,QAAQ,CAACG,IAAT,CAAcI,KAAnB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,QAAQ,CAACG,IAAT,CAAcK,WAAnB,CAJF,EAKE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAER,QAAQ,CAACS,SADtB;AAEE,MAAA,UAAU,EAAE,GAFd;AAGE,MAAA,UAAU,EAAE,IAHd;AAIE,MAAA,aAAa,EAAE,KAJjB;AAKE,MAAA,aAAa,EAAE,KALjB;AAME,MAAA,cAAc,EAAE,EANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF;AAkBD;;AAzBuC;;AA4B1C,MAAMC,eAAe,GAAGZ,KAAK,IAAI;AAC/B,SAAO;AACLO,IAAAA,IAAI,EAAEP,KAAK,CAACO,IADP,CAEL;AACA;;AAHK,GAAP;AAKD,CAND;;AAQA,eAAef,OAAO,CACpBoB,eADoB,EAEpB;AACA,IAHoB,CAAP,CAIblB,UAAU,CAACK,iBAAD,CAJG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Button, Grid, Header } from \"semantic-ui-react\"\n\nimport Waveform from \"./Waveform\"\n\nclass SongFeedComponent extends Component {\n  state = {}\n\n  render() {\n    // ! Need current song with data\n    const { songData } = this.props\n    // console.log(this.props)\n    return (\n      <Grid>\n        <div className={`song-comp-${songData.id}`}>\n          <Link to='profile'>{songData.song.title}</Link>\n          <h1>{songData.song.user.username}</h1>\n          <h2>{songData.song.genre}</h2>\n          <h3>{songData.song.description}</h3>\n          <Waveform\n            song_link={songData.song_link}\n            waveHeight={100}\n            responsive={true}\n            splitChannels={false}\n            mediaControls={false}\n            maxCanvasWidth={10}\n          />\n        </div>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n    // allUsers: state.allUsers,\n    // allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(SongFeedComponent))\n"]},"metadata":{},"sourceType":"module"}