{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router-dom';\nimport Waveform from './Waveform'; // import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  // state = {\n  //   audio: ''\n  // }\n  // componentDidMount() {\n  //   this.fetchAudio(45)\n  // }\n  // fetchAudio = (song_id) => {\n  //   const fetchURL = 'http://localhost:3000/songs'\n  //   fetch(`${fetchURL}/${song_id}`)\n  //   .then(res=>res.json())\n  //   .then(audio => {\n  //     console.log('fetch: ', audio)\n  //     // debugger\n  //     this.setState({audio: audio.song_link})\n  //   })\n  //   .catch(err => console.log(err))\n  // }\n  render() {\n    const allSongs = this.props.allSongs;\n    console.log('allsongs: ', allSongs); // const mario = require('../mario.mp3') //? For testing\n\n    const mappedFeed = allSongs.map(songData => {\n      console.log(songData);\n      return React.createElement(\"div\", {\n        className: \"waveform-\".concat(songData.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"audio\", {\n        src: songData.song_link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }));\n    });\n    return allSongs.length > 0 ? React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"da Feed\", mappedFeed) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(FeedContainer));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js"],"names":["React","Component","connect","withRouter","Waveform","FeedContainer","render","allSongs","props","console","log","mappedFeed","map","songData","id","song_link","length","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAK,EAAAA,MAAM,GAAG;AAAA,UACAC,QADA,GACY,KAAKC,KADjB,CACAD,QADA;AAEPE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B,EAFO,CAGP;;AACA,UAAMI,UAAU,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,QAAQ,IAAI;AAC1CJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,aACE;AAAK,QAAA,SAAS,qBAAcA,QAAQ,CAACC,EAAvB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAO,QAAA,GAAG,EAAED,QAAQ,CAACE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KARkB,CAAnB;AAUA,WAAOR,QAAQ,CAACS,MAAT,GAAkB,CAAlB,GACL;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGL,UAFH,CADK,GAOJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPH;AASD;;AA3CmC;;AA8CtC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAEL;AACAZ,IAAAA,QAAQ,EAAEW,KAAK,CAACX;AAHX,GAAP;AAKD,CAND;;AAQA,eAAeL,OAAO,CACpBe,eADoB,EAEpB;AACA,IAHoB,CAAP,CAIbd,UAAU,CAACE,aAAD,CAJG,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport { withRouter } from 'react-router-dom'\nimport Waveform from './Waveform';\n// import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  // state = {\n  //   audio: ''\n  // }\n  // componentDidMount() {\n  //   this.fetchAudio(45)\n  // }\n\n  // fetchAudio = (song_id) => {\n  //   const fetchURL = 'http://localhost:3000/songs'\n  //   fetch(`${fetchURL}/${song_id}`)\n  //   .then(res=>res.json())\n  //   .then(audio => {\n  //     console.log('fetch: ', audio)\n  //     // debugger\n  //     this.setState({audio: audio.song_link})\n  //   })\n  //   .catch(err => console.log(err))\n  // }\n\n  render() { \n    const {allSongs} = this.props\n    console.log('allsongs: ', allSongs)\n    // const mario = require('../mario.mp3') //? For testing\n    const mappedFeed = allSongs.map(songData => {\n      console.log(songData)\n      return (\n        <div className={`waveform-${songData.id}`}>\n          {/* <Waveform songData={songData} /> */}\n          <audio src={songData.song_link} />\n          </div>\n        )\n    })\n\n    return allSongs.length > 0 ? ( \n      <div className='feed-container'>\n        da Feed\n        {mappedFeed}\n        {/* <audio controls='controls' src={mario} /> */}\n      </div>\n     ) : (\n       <div>loading...</div>\n     )\n  }\n}\n \nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(FeedContainer))"]},"metadata":{},"sourceType":"module"}