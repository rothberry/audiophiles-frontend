{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Waveform from \"./Waveform\";\nimport SongFeedComponent from \"./SongFeedComponent\"; // import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  render() {\n    const allSongs = this.props.allSongs; // console.log(\"allsongs: \", allSongs)\n    // const mario = require('../mario.mp3') //? For testing\n    // const filteredWithSongLink = allSongs.filter(song => song.song_link).slice(0,3)\n    // console.log('filter: ', filteredWithSongLink)\n    // const mappedFeed = filteredWithSongLink.map(songData => {\n    //   console.log(songData)\n    //   return (\n    //     <div className={`waveform-${songData.id}`}>\n    //       {/* <Waveform songData={songData.song_link} /> */}\n    //       <h1>{songData.song.title}</h1>\n    //       <h1>{songData.song.user.username}</h1>\n    //       <h2>{songData.song.genre}</h2>\n    //       <h3>{songData.song.description}</h3>\n    //       <audio controls src={songData.song_link} />\n    //     </div>\n    //   )\n    // })\n    // return allSongs.length > 0 ? (\n\n    return React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"da Feed\", React.createElement(SongFeedComponent, {\n      songData: allSongs[14],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })); // : (\n    //   <div>loading...</div>\n    // )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(FeedContainer));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js"],"names":["React","Component","connect","withRouter","Waveform","SongFeedComponent","FeedContainer","render","allSongs","props","mapStateToProps","state","user"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B,C,CACA;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAEpCM,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD,EAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAEA,QAAQ,CAAC,EAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,CArBO,CA8BP;AACA;AACA;AACD;;AAnCmC;;AAsCtC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAEL;AACAJ,IAAAA,QAAQ,EAAEG,KAAK,CAACH;AAHX,GAAP;AAKD,CAND;;AAQA,eAAeN,OAAO,CACpBQ,eADoB,EAEpB;AACA,IAHoB,CAAP,CAIbP,UAAU,CAACG,aAAD,CAJG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport Waveform from \"./Waveform\"\nimport SongFeedComponent from \"./SongFeedComponent\"\n// import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n\n  render() {\n    const { allSongs } = this.props\n    // console.log(\"allsongs: \", allSongs)\n    // const mario = require('../mario.mp3') //? For testing\n    // const filteredWithSongLink = allSongs.filter(song => song.song_link).slice(0,3)\n    // console.log('filter: ', filteredWithSongLink)\n    // const mappedFeed = filteredWithSongLink.map(songData => {\n    //   console.log(songData)\n    //   return (\n    //     <div className={`waveform-${songData.id}`}>\n    //       {/* <Waveform songData={songData.song_link} /> */}\n    //       <h1>{songData.song.title}</h1>\n    //       <h1>{songData.song.user.username}</h1>\n    //       <h2>{songData.song.genre}</h2>\n    //       <h3>{songData.song.description}</h3>\n    //       <audio controls src={songData.song_link} />\n    //     </div>\n    //   )\n    // })\n\n    // return allSongs.length > 0 ? (\n    return (\n      <div className=\"feed-container\">\n        da Feed\n        {/* {mappedFeed} */}\n        <SongFeedComponent songData={allSongs[14]}/>\n        {/* <audio controls='controls' src={allSongs[14].song_link} /> */}\n        {/* <Waveform songData={allSongs[14]}/> */}\n      </div>\n    ) \n    // : (\n    //   <div>loading...</div>\n    // )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(FeedContainer))\n"]},"metadata":{},"sourceType":"module"}