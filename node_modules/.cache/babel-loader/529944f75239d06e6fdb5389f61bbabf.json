{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongShowPage.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport Waveform from \"./Waveform\";\nimport SongCommentForm from \"./SongCommentForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header, Segment } from \"semantic-ui-react\";\nimport { findDisplaySong, goToUserProfile, findDisplayUserThroughSong, setCurrentUser, deleteSong } from \"../actions\";\nimport SongCommentShow from \"./SongCommentShow\";\n\nclass SongShowPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.setDisplay = async () => {\n      await this.props.findDisplaySong(this.props.allSongs, this.props.history);\n      await this.props.findDisplayUserThroughSong(this.props.allUsers, this.props.displaySong);\n      await this.props.setCurrentUser(this.props.displayUser, this.props.user);\n    };\n\n    this.gotToEditSong = () => {\n      this.props.history.push(\"/editsong\");\n    };\n  }\n\n  componentDidMount() {\n    this.setDisplay();\n  }\n\n  render() {\n    // TODO Give User ability to see Split channels\n    const _this$props$displaySo = this.props.displaySong,\n          song = _this$props$displaySo.song,\n          song_link = _this$props$displaySo.song_link;\n    const isLoaded = !!this.props.displaySong.song;\n    const mappedTags = isLoaded ? song.tags.map(tag => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \" #\", tag.name, \" \")) : null;\n    return isLoaded ? React.createElement(\"div\", {\n      className: \"song-show-\".concat(song.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        overflow: \"auto\",\n        height: 400\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Header, {\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, song.title))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"span\",\n      size: \"large\",\n      onClick: (id, history) => this.props.goToUserProfile(song.user.id, this.props.history),\n      style: {\n        fontStyle: \"italic\",\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, song.user.username)), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, mappedTags))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Waveform, {\n      song: song,\n      song_link: song_link,\n      waveHeight: 250,\n      responsive: true,\n      splitChannels: false,\n      mediaControls: true,\n      maxCanvasWidth: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.user.isCurrentUser ? React.createElement(Button, {\n      icon: \"delete\",\n      onClick: this.props.deleteSong(song.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }) : null, React.createElement(Header, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, song.description), React.createElement(SongCommentForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(SongCommentShow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"loading......\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    allSongs: state.allSongs,\n    displaySong: state.displaySong,\n    displayUser: state.displayUser,\n    allComments: state.allComments\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplaySong,\n  goToUserProfile,\n  findDisplayUserThroughSong,\n  setCurrentUser,\n  deleteSong\n})(withRouter(SongShowPage));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongShowPage.js"],"names":["React","Component","Waveform","SongCommentForm","withRouter","connect","Button","Grid","Header","Segment","findDisplaySong","goToUserProfile","findDisplayUserThroughSong","setCurrentUser","deleteSong","SongCommentShow","SongShowPage","setDisplay","props","allSongs","history","allUsers","displaySong","displayUser","user","gotToEditSong","push","componentDidMount","render","song","song_link","isLoaded","mappedTags","tags","map","tag","name","id","overflow","height","title","fontStyle","cursor","username","isCurrentUser","description","mapStateToProps","state","allComments"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport Waveform from \"./Waveform\"\nimport SongCommentForm from \"./SongCommentForm\"\nimport { withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Button, Grid, Header, Segment } from \"semantic-ui-react\"\nimport {\n  findDisplaySong,\n  goToUserProfile,\n  findDisplayUserThroughSong,\n  setCurrentUser,\n  deleteSong\n} from \"../actions\"\nimport SongCommentShow from \"./SongCommentShow\"\n\nclass SongShowPage extends Component {\n  componentDidMount() {\n    this.setDisplay()\n  }\n  setDisplay = async () => {\n    await this.props.findDisplaySong(this.props.allSongs, this.props.history)\n    await this.props.findDisplayUserThroughSong(\n      this.props.allUsers,\n      this.props.displaySong\n    )\n    await this.props.setCurrentUser(this.props.displayUser, this.props.user)\n  }\n\n  gotToEditSong = () => {\n    this.props.history.push(\"/editsong\")\n  }\n\n  render() {\n    // TODO Give User ability to see Split channels\n    const { song, song_link } = this.props.displaySong\n    const isLoaded = !!this.props.displaySong.song\n    const mappedTags = isLoaded\n      ? song.tags.map(tag => <span> #{tag.name} </span>)\n      : null\n    return isLoaded ? (\n      <div className={`song-show-${song.id}`}>\n        <Segment style={{ overflow: \"auto\", height: 400 }}>\n          <Grid.Row>\n            <Grid.Column>\n              <Header size=\"huge\">{song.title}</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column floated=\"left\">\n              <Header\n                as=\"span\"\n                size=\"large\"\n                onClick={(id, history) =>\n                  this.props.goToUserProfile(song.user.id, this.props.history)\n                }\n                style={{\n                  fontStyle: \"italic\",\n                  cursor: \"pointer\"\n                }}\n              >\n                {song.user.username}\n              </Header>\n            </Grid.Column>\n            <Grid.Column>\n              <span style={{ fontStyle: \"italic\" }}>{mappedTags}</span>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Waveform\n              song={song}\n              song_link={song_link}\n              waveHeight={250}\n              responsive={true}\n              splitChannels={false}\n              mediaControls={true}\n              maxCanvasWidth={500}\n            />\n          </Grid.Row>\n        </Segment>\n        <br />\n        <Grid.Row>\n          {this.props.user.isCurrentUser ? (\n            <Button icon=\"delete\" onClick={this.props.deleteSong(song.id)} />\n          ) : null}\n          <Header size=\"medium\">{song.description}</Header>\n          <SongCommentForm />\n          <SongCommentShow />\n        </Grid.Row>\n      </div>\n    ) : (\n      <div>loading......</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    allSongs: state.allSongs,\n    displaySong: state.displaySong,\n    displayUser: state.displayUser,\n    allComments: state.allComments\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    findDisplaySong,\n    goToUserProfile,\n    findDisplayUserThroughSong,\n    setCurrentUser,\n    deleteSong\n  }\n)(withRouter(SongShowPage))\n"]},"metadata":{},"sourceType":"module"}