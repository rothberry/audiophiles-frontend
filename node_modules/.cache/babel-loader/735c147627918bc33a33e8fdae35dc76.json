{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport Waveform from \"./Waveform\";\n\nclass SongFeedComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    // ! Need current song with data\n    const songData = this.props.songData;\n    const song = this.props.songData.song;\n    const user = this.props.songData.song.user; // console.log(this.props)\n\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"song-comp-\".concat(song.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/profile/\".concat(song.id),\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, song.title), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/profile/\".concat(user.id),\n      as: \"h2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, user.username), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, song.genre), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, song.description), React.createElement(Waveform, {\n      song_link: songData.song_link,\n      waveHeight: 100,\n      responsive: true,\n      splitChannels: false,\n      mediaControls: false,\n      maxCanvasWidth: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user // allUsers: state.allUsers,\n    // allSongs: state.allSongs\n\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(SongFeedComponent));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","Header","Waveform","SongFeedComponent","state","render","songData","props","song","user","id","title","username","genre","description","song_link","mapStateToProps"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,QAAqC,mBAArC;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCS,KADwC,GAChC,EADgC;AAAA;;AAGxCC,EAAAA,MAAM,GAAG;AACP;AADO,UAECC,QAFD,GAEc,KAAKC,KAFnB,CAECD,QAFD;AAAA,UAGYE,IAHZ,GAGsB,KAAKD,KAH3B,CAGCD,QAHD,CAGYE,IAHZ;AAAA,UAImBC,IAJnB,GAI8B,KAAKF,KAJnC,CAICD,QAJD,CAIYE,IAJZ,CAImBC,IAJnB,EAKP;;AACA,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,sBAAeD,IAAI,CAACE,EAApB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcF,IAAI,CAACE,EAAnB,CAAR;AAAiC,MAAA,EAAE,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CF,IAAI,CAACG,KAA/C,CADF,EAC8D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD9D,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcF,IAAI,CAACC,EAAnB,CAAR;AAAiC,MAAA,EAAE,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0CD,IAAI,CAACG,QAA/C,CAFF,EAEiE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFjE,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACK,KAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,IAAI,CAACM,WAAV,CAJF,EAKE,oBAAC,QAAD;AACE,MAAA,SAAS,EAAER,QAAQ,CAACS,SADtB;AAEE,MAAA,UAAU,EAAE,GAFd;AAGE,MAAA,UAAU,EAAE,IAHd;AAIE,MAAA,aAAa,EAAE,KAJjB;AAKE,MAAA,aAAa,EAAE,KALjB;AAME,MAAA,cAAc,EAAE,EANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF,CADF;AAkBD;;AA3BuC;;AA8B1C,MAAMC,eAAe,GAAGZ,KAAK,IAAI;AAC/B,SAAO;AACLK,IAAAA,IAAI,EAAEL,KAAK,CAACK,IADP,CAEL;AACA;;AAHK,GAAP;AAKD,CAND;;AAQA,eAAeb,OAAO,CACpBoB,eADoB,EAEpB;AACA,IAHoB,CAAP,CAIblB,UAAU,CAACK,iBAAD,CAJG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Button, Grid, Header } from \"semantic-ui-react\"\n\nimport Waveform from \"./Waveform\"\n\nclass SongFeedComponent extends Component {\n  state = {}\n\n  render() {\n    // ! Need current song with data\n    const { songData } = this.props\n    const { songData: {song} } = this.props\n    const { songData: {song: {user}} } = this.props\n    // console.log(this.props)\n    return (\n      <Grid>\n        <div className={`song-comp-${song.id}`}>\n          <Link to={`/profile/${song.id}`} as=\"h1\">{song.title}</Link><br />\n          <Link to={`/profile/${user.id}`} as=\"h2\">{user.username}</Link><br />\n          <h2>{song.genre}</h2>\n          <h3>{song.description}</h3>\n          <Waveform\n            song_link={songData.song_link}\n            waveHeight={100}\n            responsive={true}\n            splitChannels={false}\n            mediaControls={false}\n            maxCanvasWidth={10}\n          />\n        </div>\n      </Grid>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n    // allUsers: state.allUsers,\n    // allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(SongFeedComponent))\n"]},"metadata":{},"sourceType":"module"}