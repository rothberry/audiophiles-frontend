{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/audiophiles/mod-5-audiofiles-frontend/src/components/UserProfileSide.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport { Button, Grid, Image, Icon, Segment, Header } from \"semantic-ui-react\";\nimport { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser, deleteUser } from \"../actions\";\nconst defImg = \"https://thespinoff.co.nz/wp-content/uploads/2019/09/Goose-game-header-850x510.jpg\";\n\nclass UserProfileSide extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFollowUser = (followed, follower_id) => {\n      // console.log(\"followed: \", followed.id)\n      // console.log(\"follower: \", follower_id)\n      this.props.followUser(followed, follower_id);\n    };\n\n    this.handleUnfollowUser = () => {} // TODO Send DELETE fetch to backend\n    // TODO Need the relationshipID\n    // forceReload = () => {\n    // }\n    // mapFollowers = (followArray) => {\n    //   return followArray.map(fol => {\n    //     return (\n    //       <Label widths=\"equals\">\n    //         <Icon src={fol.img_url}/>\n    //         <Link\n    //           // onClick={(allUsers, history) =>\n    //           //   this.props.findDisplayUser(\n    //           //     this.props.allUsers,\n    //           //     this.props.history\n    //           //   )\n    //           // }\n    //           to={`/profile/${fol.id}`}\n    //         >\n    //           {fol.username}\n    //         </Link>\n    //       </Label>\n    //     )\n    //   })\n    // }\n    ;\n  }\n\n  render() {\n    const isCurrentUser = this.props.user.isCurrentUser;\n    const _this$props$displayUs = this.props.displayUser,\n          username = _this$props$displayUs.username,\n          name = _this$props$displayUs.name,\n          location = _this$props$displayUs.location,\n          bio = _this$props$displayUs.bio,\n          id = _this$props$displayUs.id,\n          img_url = _this$props$displayUs.img_url,\n          facebook_url = _this$props$displayUs.facebook_url,\n          twitter_url = _this$props$displayUs.twitter_url,\n          soundcloud_url = _this$props$displayUs.soundcloud_url;\n    const isFace = !facebook_url;\n    const isTwit = !twitter_url;\n    const isSound = !soundcloud_url;\n    const isImg = !!img_url;\n    let isFollowing;\n\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id;\n      });\n    }\n\n    const editAccountButton = React.createElement(Button, {\n      as: Link,\n      to: \"/editaccount\",\n      icon: \"edit\",\n      label: \"Edit Account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    });\n    const deleteAccountButton = React.createElement(Button, {\n      onClick: (user_id, history) => this.props.deleteUser(this.props.user.id, this.props.history),\n      label: \"Delete Account\",\n      icon: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }); // const mappedFollowers = this.mapFollowers(this.props.followers)\n    // let isFollowers = !!mappedFollowers\n    // const mappedFolloweds = this.mapFollowers(this.props.followeds)\n    // let isFolloweds = !!mappedFolloweds\n\n    const eachButtonStyle = {}; // const eachButtonStyle = { width: \"40%\", margin: \"0 1%\" }\n\n    const imgStyle = {\n      height: 300,\n      width: 300\n    }; // console.log('displayuser: ', this.displayUser)\n    // console.log(this.props.user)\n\n    return React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      className: \"feed-profile-side\",\n      style: {\n        marginTop: \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, isImg ? React.createElement(Image, {\n      src: img_url,\n      circular: true,\n      alt: \"\",\n      centered: true,\n      style: imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }) : React.createElement(Image, {\n      src: defImg,\n      circular: true,\n      alt: \"\",\n      centered: true,\n      style: imgStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h1\",\n      icon: \"user secret\",\n      content: username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h4\",\n      icon: \"user\",\n      content: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h4\",\n      icon: \"location arrow\",\n      content: location,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Header, {\n      as: \"h4\",\n      icon: \"book\",\n      content: bio,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Button.Group, {\n      centered: true,\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"facebook\",\n      as: \"a\",\n      href: facebook_url,\n      disabled: isFace,\n      style: eachButtonStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), \" Facebook\"), React.createElement(Button, {\n      style: eachButtonStyle,\n      color: \"twitter\",\n      as: \"a\",\n      href: twitter_url,\n      disabled: isTwit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), \" Twitter\"), React.createElement(Button, {\n      color: \"orange\",\n      style: eachButtonStyle,\n      as: \"a\",\n      href: soundcloud_url,\n      disabled: isSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"soundcloud\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), \" Soundcloud\"))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), isCurrentUser ? React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, editAccountButton, deleteAccountButton) : null);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n})(withRouter(UserProfileSide));","map":{"version":3,"sources":["/home/phil/dev/projects/audiophiles/mod-5-audiofiles-frontend/src/components/UserProfileSide.js"],"names":["React","Component","connect","withRouter","Link","Button","Grid","Image","Icon","Segment","Header","findDisplayUser","followUser","currentUser","currentRelationship","setCurrentUser","deleteUser","defImg","UserProfileSide","handleFollowUser","followed","follower_id","props","handleUnfollowUser","render","isCurrentUser","user","displayUser","username","name","location","bio","id","img_url","facebook_url","twitter_url","soundcloud_url","isFace","isTwit","isSound","isImg","isFollowing","followers","find","editAccountButton","deleteAccountButton","user_id","history","eachButtonStyle","imgStyle","height","width","marginTop","mapStateToProps","state","allUsers","followeds"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { withRouter, Link } from \"react-router-dom\"\nimport { Button, Grid, Image, Icon, Segment, Header } from \"semantic-ui-react\"\nimport {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n} from \"../actions\"\nconst defImg =\n  \"https://thespinoff.co.nz/wp-content/uploads/2019/09/Goose-game-header-850x510.jpg\"\n\nclass UserProfileSide extends Component {\n  // handleFollowUser = (followed_id, follower_id) => {\n  handleFollowUser = (followed, follower_id) => {\n    // console.log(\"followed: \", followed.id)\n    // console.log(\"follower: \", follower_id)\n    this.props.followUser(followed, follower_id)\n  }\n\n  handleUnfollowUser = () => {\n    // TODO Send DELETE fetch to backend\n    // TODO Need the relationshipID\n  }\n  // forceReload = () => {\n\n  // }\n  // mapFollowers = (followArray) => {\n  //   return followArray.map(fol => {\n  //     return (\n  //       <Label widths=\"equals\">\n  //         <Icon src={fol.img_url}/>\n  //         <Link\n  //           // onClick={(allUsers, history) =>\n  //           //   this.props.findDisplayUser(\n  //           //     this.props.allUsers,\n  //           //     this.props.history\n  //           //   )\n  //           // }\n  //           to={`/profile/${fol.id}`}\n  //         >\n  //           {fol.username}\n  //         </Link>\n  //       </Label>\n  //     )\n  //   })\n  // }\n\n  render() {\n    const { isCurrentUser } = this.props.user\n    const {\n      username,\n      name,\n      location,\n      bio,\n      id,\n      img_url,\n      facebook_url,\n      twitter_url,\n      soundcloud_url\n    } = this.props.displayUser\n    const isFace = !facebook_url\n    const isTwit = !twitter_url\n    const isSound = !soundcloud_url\n    const isImg = !!img_url\n    let isFollowing\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id\n      })\n    }\n    const editAccountButton = (\n      <Button as={Link} to='/editaccount' icon='edit' label='Edit Account' />\n    )\n    const deleteAccountButton = (\n      <Button\n        onClick={(user_id, history) =>\n          this.props.deleteUser(this.props.user.id, this.props.history)\n        }\n        label='Delete Account'\n        icon='delete'\n      />\n    )\n    // const mappedFollowers = this.mapFollowers(this.props.followers)\n    // let isFollowers = !!mappedFollowers\n\n    // const mappedFolloweds = this.mapFollowers(this.props.followeds)\n    // let isFolloweds = !!mappedFolloweds\n\n    const eachButtonStyle = { }\n    // const eachButtonStyle = { width: \"40%\", margin: \"0 1%\" }\n    const imgStyle = { height: 300, width: 300 }\n    // console.log('displayuser: ', this.displayUser)\n    // console.log(this.props.user)\n    return (\n      <Grid.Column>\n        {/* <Grid.Column > */}\n        {/* <Sticky> */}\n        <Segment className='feed-profile-side' style={{ marginTop: \"5%\" }}>\n          {isImg ? (\n            <Image src={img_url} circular alt='' centered style={imgStyle} />\n          ) : (\n            <Image src={defImg} circular alt='' centered style={imgStyle} />\n          )}\n          <Header as='h1' icon='user secret' content={username} />\n          <Header as='h4' icon='user' content={name} />\n          <Header as='h4' icon='location arrow' content={location} />\n          <Header as='h4' icon='book' content={bio} />\n          <Button.Group centered circular>\n            <Button\n              color='facebook'\n              as='a'\n              href={facebook_url}\n              disabled={isFace}\n              style={eachButtonStyle}\n            >\n              <Icon name='facebook' /> Facebook\n            </Button>\n            <Button\n              style={eachButtonStyle}\n              color='twitter'\n              as='a'\n              href={twitter_url}\n              disabled={isTwit}\n            >\n              <Icon name='twitter' /> Twitter\n            </Button>\n            <Button\n              color='orange'\n              style={eachButtonStyle}\n              as='a'\n              href={soundcloud_url}\n              disabled={isSound}\n            >\n              <Icon name='soundcloud' /> Soundcloud\n            </Button>\n          </Button.Group>\n        </Segment>\n        {/* </Sticky> */}\n        <br />\n        {/* <Segment widths=\"equal\">\n          <h4>Followers: </h4>\n          { isFollowers ? (\n            <ul>{mappedFollowers}</ul>\n          ) : (\n            <p>No Followers Yet!</p>\n          )}\n        </Segment> */}\n        {isCurrentUser ? (\n          <Button.Group>\n            {editAccountButton}\n            {deleteAccountButton}\n          </Button.Group>\n        ) : null}\n\n        {/* {!!isFollowing || isCurrentUser ? null : (\n          <Button\n            onClick={(followed, follower_id) =>\n              this.handleFollowUser(this.props.displayUser, this.props.user.id)\n            }\n          >\n            Follow Me!\n          </Button>\n        )} */}\n      </Grid.Column>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n})(withRouter(UserProfileSide))\n"]},"metadata":{},"sourceType":"module"}