{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongShowPage.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport Waveform from \"./Waveform\";\nimport SongCommentForm from \"./SongCommentForm\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header, Segment } from \"semantic-ui-react\";\nimport { findDisplaySong } from \"../actions\";\nimport SongCommentShow from \"./SongCommentShow\";\n\nclass SongShowPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goToUserProfile = (event, user_id) => {\n      this.props.history.push(\"/profile/\".concat(user_id));\n    };\n  }\n\n  componentDidMount() {// console.log(\"cdm songsongspage\", this.props)\n    // this.props.findDisplaySong(this.props.allSongs, this.props.history)\n  }\n\n  render() {\n    // TODO need current song\n    // TODO Give User ability to see Split channels\n    this.props.findDisplaySong(this.props.allSongs, this.props.history);\n    const _this$props$displaySo = this.props.displaySong,\n          song = _this$props$displaySo.song,\n          song_link = _this$props$displaySo.song_link;\n    const isLoaded = !!this.props.displaySong.song;\n    const mappedTags = isLoaded ? song.tags.map(tag => React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \" #\", tag.name, \" \")) : null;\n    return isLoaded ? React.createElement(\"div\", {\n      className: \"song-show-\".concat(song.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      style: {\n        overflow: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Header, {\n      size: \"huge\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, song.title))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"span\",\n      size: \"large\",\n      onClick: (event, id) => this.goToUserProfile(event, song.user.id),\n      style: {\n        fontStyle: \"italic\",\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, song.user.username)), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, mappedTags))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Waveform, {\n      song: song,\n      song_link: song_link,\n      waveHeight: 250,\n      responsive: true,\n      splitChannels: false,\n      mediaControls: true,\n      maxCanvasWidth: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Header, {\n      size: \"medium\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, song.description), React.createElement(SongCommentForm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Segment, {\n      style: {\n        overflow: \"auto\",\n        maxHeight: '5em'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(SongCommentShow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"loading......\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allComments: state.allComments,\n    displaySong: state.displaySong,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplaySong\n})(withRouter(SongShowPage));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongShowPage.js"],"names":["React","Component","Waveform","SongCommentForm","withRouter","connect","Button","Grid","Header","Segment","findDisplaySong","SongCommentShow","SongShowPage","goToUserProfile","event","user_id","props","history","push","componentDidMount","render","allSongs","displaySong","song","song_link","isLoaded","mappedTags","tags","map","tag","name","id","overflow","title","user","fontStyle","cursor","username","description","maxHeight","mapStateToProps","state","allComments"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport Waveform from \"./Waveform\"\nimport SongCommentForm from \"./SongCommentForm\"\nimport { withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Button, Grid, Header, Segment } from \"semantic-ui-react\"\nimport { findDisplaySong } from \"../actions\"\nimport SongCommentShow from \"./SongCommentShow\"\n\nclass SongShowPage extends Component {\n  componentDidMount() {\n    // console.log(\"cdm songsongspage\", this.props)\n    // this.props.findDisplaySong(this.props.allSongs, this.props.history)\n  }\n\n  goToUserProfile = (event, user_id) => {\n    this.props.history.push(`/profile/${user_id}`)\n  }\n\n  render() {\n    // TODO need current song\n    // TODO Give User ability to see Split channels\n    this.props.findDisplaySong(this.props.allSongs, this.props.history)\n    const { song, song_link } = this.props.displaySong\n    const isLoaded = !!this.props.displaySong.song\n    const mappedTags = isLoaded\n      ? song.tags.map(tag => <span> #{tag.name} </span>)\n      : null\n    return isLoaded ? (\n      <div className={`song-show-${song.id}`}>\n        <Segment style={{ overflow: \"auto\"}}>\n          <Grid.Row>\n            <Grid.Column>\n              <Header size=\"huge\">{song.title}</Header>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column floated=\"left\">\n              <Header\n                as=\"span\"\n                size=\"large\"\n                onClick={(event, id) =>\n                  this.goToUserProfile(event, song.user.id)\n                }\n                style={{\n                  fontStyle: \"italic\",\n                  cursor: \"pointer\"\n                }}\n              >\n                {song.user.username}\n              </Header>\n            </Grid.Column>\n            <Grid.Column>\n              <span style={{ fontStyle: \"italic\" }}>{mappedTags}</span>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Waveform\n              song={song}\n              song_link={song_link}\n              waveHeight={250}\n              responsive={true}\n              splitChannels={false}\n              mediaControls={true}\n              maxCanvasWidth={500}\n            />\n          </Grid.Row>\n        </Segment>\n        <br />\n        <Grid.Row>\n          <Header size=\"medium\">{song.description}</Header>\n          <SongCommentForm />\n          <Segment style={{ overflow: \"auto\", maxHeight: '5em' }}>\n            <SongCommentShow />\n          </Segment>\n        </Grid.Row>\n      </div>\n    ) : (\n      <div>loading......</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allComments: state.allComments,\n    displaySong: state.displaySong,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { findDisplaySong }\n)(withRouter(SongShowPage))\n"]},"metadata":{},"sourceType":"module"}