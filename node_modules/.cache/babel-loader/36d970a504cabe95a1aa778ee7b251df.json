{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport { postNewSong } from \"../actions\";\n\nclass NewSongForm extends Component {\n  constructor(props) {\n    super();\n\n    this.handleNewSongSubmit = e => {\n      e.preventDefault(); // const { title, genre, description, song_link } = this.state\n\n      this.setState({\n        user_id: this.props.currentUser.id\n      });\n      this.props.postNewSong(this.state, this.props.history);\n    };\n\n    this.handleNewSongChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onFilesAdded = e => {\n      const targetSongLink = e.target.files[0];\n      this.setState({\n        song_link: targetSongLink\n      });\n    };\n\n    this.audioInput = React.createRef();\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      user_id: \"\",\n      song_link: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"new-song-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleNewSongSubmit,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"New Song\"), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Genre\",\n      type: \"text\",\n      name: \"genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.audioInput,\n      onChange: this.onFilesAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Submit New Song\"))))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postNewSong: (formData, history) => dispatch(postNewSong(formData, history))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(withRouter(NewSongForm));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js"],"names":["React","Component","connect","Button","Form","Grid","Header","Message","Segment","withRouter","postNewSong","NewSongForm","constructor","props","handleNewSongSubmit","e","preventDefault","setState","user_id","currentUser","id","state","history","handleNewSongChange","target","name","value","onFilesAdded","targetSongLink","files","song_link","audioInput","createRef","title","genre","description","render","console","log","mapDispatchToProps","dispatch","formData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\"\nimport { withRouter } from \"react-router-dom\"\nimport { postNewSong } from \"../actions\"\n\nclass NewSongForm extends Component {\n  constructor(props) {\n    super()\n    this.audioInput = React.createRef()\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      user_id: \"\",\n      song_link: \"\"\n    }\n  }\n  \n  handleNewSongSubmit = e => {\n    e.preventDefault()\n    // const { title, genre, description, song_link } = this.state\n    this.setState({user_id: this.props.currentUser.id})\n    this.props.postNewSong(this.state, this.props.history)\n  }\n\n  handleNewSongChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onFilesAdded = e => {\n    const targetSongLink = e.target.files[0]\n    this.setState({ song_link: targetSongLink })\n  }\n\n  render() {\n    console.log(this.state)\n    console.log(this.props)\n    return (\n      <div className=\"new-song-form\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Grid.Column>\n            <Form\n              size=\"large\"\n              onSubmit={this.handleNewSongSubmit}\n              encType=\"multipart/form-data\"\n            >\n              <Segment stacked>\n                <Header as=\"h1\">New Song</Header>\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Title\"\n                  type=\"text\"\n                  name=\"title\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Genre\"\n                  type=\"text\"\n                  name=\"genre\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Description\"\n                  type=\"text\"\n                  name=\"description\"\n                />\n                <input\n                  type=\"file\"\n                  ref={this.audioInput}\n                  onChange={this.onFilesAdded}\n                />\n\n                <Button type=\"submit\" primary fluid size=\"large\">\n                  Submit New Song\n                </Button>\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    postNewSong: ((formData, history) => dispatch(postNewSong(formData, history)))\n  }\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withRouter(NewSongForm))\n"]},"metadata":{},"sourceType":"module"}