{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\";\n\nclass NewSongForm extends Component {\n  constructor(props) {\n    super();\n\n    this.handleNewSongSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            title = _this$state.title,\n            genre = _this$state.genre,\n            description = _this$state.description,\n            song_link = _this$state.song_link; // console.log(this.audioInput.current.files[0])\n      // const newAudio = this.audioInput.current.files[0]\n      // debugger\n\n      let songData = new FormData();\n      songData.append(\"song_link\", song_link);\n      songData.append(\"song[title]\", title);\n      songData.append(\"song[genre]\", genre);\n      songData.append(\"song[description]\", description);\n      songData.append(\"song[user_id]\", this.props.currentUser.id);\n      console.log(songData); // const songData = {...this.state, song_link: newAudio, user_id: this.props.currentUser.id}\n\n      const fetchSongsUrl = \"http://localhost:3000/songs\";\n      const reqObj = {\n        method: \"POST\",\n        headers: {\n          // Accepts: \"application/json\"\n          'Accepts': \"multipart/form-data\",\n          'Content-Type': \"multipart/form-data\"\n        },\n        body: songData\n      };\n      fetch(fetchSongsUrl, reqObj) // .then(res => res.json())\n      // .then(console.log)\n      .catch(err => console.log(err));\n    };\n\n    this.handleNewSongChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onFilesAdded = e => {\n      const targetSongLink = e.target.files[0];\n      this.setState({\n        song_link: targetSongLink\n      });\n    };\n\n    this.audioInput = React.createRef();\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      user_id: \"\",\n      song_link: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"new-song-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleNewSongSubmit,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"New Song\"), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Genre\",\n      type: \"text\",\n      name: \"genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      ref: this.audioInput,\n      onChange: this.onFilesAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Submit New Song\"))))));\n  }\n\n}\n\nexport default connect(null, null)(NewSongForm);","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js"],"names":["React","Component","connect","Button","Form","Grid","Header","Message","Segment","NewSongForm","constructor","props","handleNewSongSubmit","e","preventDefault","state","title","genre","description","song_link","songData","FormData","append","currentUser","id","console","log","fetchSongsUrl","reqObj","method","headers","body","fetch","catch","err","handleNewSongChange","setState","target","name","value","onFilesAdded","targetSongLink","files","audioInput","createRef","user_id","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button, Form, Grid, Header, Message, Segment } from \"semantic-ui-react\"\n\nclass NewSongForm extends Component {\n  constructor(props) {\n    super()\n    this.audioInput = React.createRef()\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      user_id: \"\",\n      song_link: \"\"\n    }\n  }\n\n  handleNewSongSubmit = e => {\n    e.preventDefault()\n    const { title, genre, description, song_link } = this.state\n    // console.log(this.audioInput.current.files[0])\n    // const newAudio = this.audioInput.current.files[0]\n    // debugger\n    let songData = new FormData()\n    songData.append(\"song_link\", song_link)\n    songData.append(\"song[title]\", title)\n    songData.append(\"song[genre]\", genre)\n    songData.append(\"song[description]\", description)\n    songData.append(\"song[user_id]\", this.props.currentUser.id)\n    console.log(songData)\n    // const songData = {...this.state, song_link: newAudio, user_id: this.props.currentUser.id}\n    const fetchSongsUrl = \"http://localhost:3000/songs\"\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        // Accepts: \"application/json\"\n        'Accepts': \"multipart/form-data\",\n        'Content-Type': \"multipart/form-data\"\n      },\n      body: songData\n    }\n    fetch(fetchSongsUrl, reqObj)\n      // .then(res => res.json())\n      // .then(console.log)\n      .catch(err => console.log(err))\n  }\n\n  handleNewSongChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onFilesAdded = e => {\n    const targetSongLink = e.target.files[0]\n    this.setState({ song_link: targetSongLink })\n  }\n\n  render() {\n    console.log(this.state)\n    console.log(this.props)\n    return (\n      <div className=\"new-song-form\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Grid.Column>\n            <Form\n              size=\"large\"\n              onSubmit={this.handleNewSongSubmit}\n              encType=\"multipart/form-data\"\n            >\n              <Segment stacked>\n                <Header as=\"h1\">New Song</Header>\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Title\"\n                  type=\"text\"\n                  name=\"title\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Genre\"\n                  type=\"text\"\n                  name=\"genre\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Description\"\n                  type=\"text\"\n                  name=\"description\"\n                />\n                <input\n                  type=\"file\"\n                  ref={this.audioInput}\n                  onChange={this.onFilesAdded}\n                />\n\n                <Button type=\"submit\" primary fluid size=\"large\">\n                  Submit New Song\n                </Button>\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(NewSongForm)\n"]},"metadata":{},"sourceType":"module"}