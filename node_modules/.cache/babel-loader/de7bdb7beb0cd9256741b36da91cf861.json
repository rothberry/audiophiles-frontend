{"ast":null,"code":"/*eslint-disable */\n// ! All actions go in here\nconst fetchUsersUrl = \"http://localhost:3000/users\";\nconst fetchSongsUrl = \"http://localhost:3000/songs\";\nconst fetchCommentsUrl = \"http://localhost:3000/comments\";\nconst fetchTagsUrl = \"http://localhost:3000/tags\";\nexport function loginUser(user) {\n  console.log(\"login\");\n  return {\n    type: \"LOGIN_USER\",\n    user\n  };\n}\nexport function logoutUser() {\n  console.log(\"logout\");\n  return {\n    type: \"LOGOUT_USER\"\n  };\n} // ! Log's in user and issues token\n\nexport function loginCurrentUser(formData, history) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    };\n    return fetch(\"http://localhost:3000/api/v1/auth\", reqObj).then(resp => resp.json()).then(data => {\n      if (data.error) {\n        console.log(data);\n      } else {\n        localStorage.token = data.jwt;\n        dispatch(loginUser(data.user));\n        console.log(data);\n        history.push(\"/profile/\".concat(data.user.id));\n      }\n    }).catch(err => console.log(err));\n  };\n} // ! Finds the current user using token\n\nexport function currentUser() {\n  return dispatch => {\n    const token = localStorage.token;\n    const reqObj = {\n      method: \"GET\",\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    return fetch(\"http://localhost:3000/api/v1/current_user\", reqObj).then(res => res.json()).then(data => {\n      if (data.error) {\n        console.log(\"currentUser error: \", data);\n      } else {\n        dispatch(loginUser(data.user));\n      }\n    }).catch(err => console.log(err));\n  };\n} // ! Sets all following relationships\n\nexport function setAllFolloweds(followeds) {\n  return {\n    type: \"SET_ALL_FOLLOWEDS\",\n    followeds\n  };\n}\nexport function setAllFollowers(followers) {\n  return {\n    type: \"SET_ALL_FOLLOWERS\",\n    followers\n  };\n} // ! Creates a new User\n\nexport function registerUser(formData, history) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    };\n    return fetch(fetchUsersUrl, reqObj).then(resp => resp.json()).then(data => {\n      if (data.error) {\n        //handle Error\n        console.log(data.error);\n      } else {\n        localStorage.token = data.jwt;\n        dispatch(loginUser(data.user)); // TODO Will go to user profile page\n        // dispatch(setDisplayUser(data.user))\n        // history.push(`/profile/${data.user.id}`)\n        // ! Quick fix\n\n        history.push(\"/feed\");\n      }\n    }).catch(err => console.log(err));\n  };\n}\nexport function updateUser(user) {\n  return {\n    type: 'UPDATE_USER',\n    user\n  };\n} // ! Updates CurrentUser\n\nexport function updateCurrentUser(user, formData, history) {\n  return dispatch => {\n    const token = localStorage.token;\n    const fetchUpdateUserUrl = fetchUsersUrl + '/' + user.id;\n    const reqUpdObj = {\n      method: 'PATCH',\n      headers: {\n        'Content-type': 'application/json',\n        'Accepts': 'application/json',\n        'Authorization': \"Bearer \".concat(token)\n      },\n      body: JSON.stringify(formData)\n    };\n    console.log(formData);\n    return fetch(fetchUpdateUserUrl, reqUpdObj).then(res => res.json()).then(user => {\n      console.log(user);\n\n      if (!user.error) {\n        dispatch(updateUser(user));\n        history.push(\"/profile/\".concat(user.id));\n      }\n    });\n  };\n} // ! Get and Set all USERS\n\nexport function setAllUsers(allUsers) {\n  return {\n    type: \"SET_ALL_USERS\",\n    allUsers\n  };\n}\nexport function fetchAllUsers() {\n  return dispatch => {\n    return fetch(fetchUsersUrl).then(resp => resp.json()).then(data => {\n      // console.log(data)\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        dispatch(setAllUsers(data));\n      }\n    }).catch(err => console.log(err));\n  };\n} // ! Get and Set all SONGS\n\nexport function setAllSongs(allSongs) {\n  return {\n    type: \"SET_ALL_SONGS\",\n    allSongs\n  };\n}\nexport function fetchAllSongs() {\n  return dispatch => {\n    return fetch(fetchSongsUrl).then(resp => resp.json()).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        dispatch(setAllSongs(data));\n      }\n    }).catch(err => console.log(err));\n  };\n} // ! Adds new song to allSongs Array\n\nexport function addNewSongToFeed(newSong) {\n  return {\n    type: \"ADD_SONG_TO_FEED\",\n    newSong\n  };\n} // ! POST New Song\n\nexport function postNewSong(formData, user_id, history) {\n  return dispatch => {\n    console.log(\"post da new song bruh\", formData);\n    const title = formData.title,\n          genre = formData.genre,\n          description = formData.description,\n          song_link = formData.song_link,\n          selectedTags = formData.selectedTags;\n    let songData = new FormData();\n    songData.append(\"song[song_link]\", song_link);\n    songData.append(\"song[title]\", title);\n    songData.append(\"song[genre]\", genre);\n    songData.append(\"song[description]\", description);\n    songData.append(\"song[user_id]\", user_id);\n    songData.append(\"tags[tags]\", selectedTags);\n    const reqObjPostSong = {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\"\n      },\n      body: songData\n    };\n    return fetch(fetchSongsUrl, reqObjPostSong).then(res => res.json()).then(data => {\n      if (data.error) {\n        console.log(\"error: \", data.error);\n      } else {\n        dispatch(addNewSongToFeed(data));\n        history.push(\"/songs/\".concat(data.song.id));\n      }\n    }).catch(err => console.log(err));\n  };\n} // ! Find and Set Display User\n\nexport function setDisplayUser(displayUser) {\n  return {\n    type: \"SET_DISPLAY_USER\",\n    displayUser\n  };\n}\nexport function findDisplayUser(allUsers, history) {\n  return dispatch => {\n    const displayUserID = Number(history.location.pathname.slice(9));\n    const displayUser = allUsers.find(u => {\n      return u.id === displayUserID;\n    });\n    dispatch(setDisplayUser(displayUser));\n  };\n} // ! Find and Set Display Song\n\nexport function setDisplaySong(displaySong) {\n  return {\n    type: \"SET_DISPLAY_SONG\",\n    displaySong\n  };\n}\nexport function findDisplaySong(allSongs, history) {\n  return dispatch => {\n    const displaySongID = Number(history.location.pathname.slice(7));\n    const displaySong = allSongs.find(song => {\n      return song.song.id === displaySongID;\n    }); // console.log(\"displaySong: \", displaySong)\n\n    dispatch(setDisplaySong(displaySong));\n  };\n} // ! Set All comments\n\nexport function setAllComments(allComments) {\n  return {\n    type: \"SET_ALL_COMMENTS\",\n    allComments\n  };\n} // ! GET fetchs all Comments\n\nexport function fetchAllComments() {\n  return dispatch => {\n    return fetch(fetchCommentsUrl).then(res => res.json()).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        dispatch(setAllComments(data));\n      }\n    }).catch(err => console.log(err));\n  };\n} // ! GET All display Comments\n\nexport function findDisplayComments(allComments, displaySong) {\n  return dispatch => {\n    const displayComments = allComments.filter(comment => {\n      return comment.song_id === displaySong.song.id;\n    });\n    dispatch(setDisplayComments(displayComments));\n  };\n} // ! Set all display comments\n\nexport function setDisplayComments(displayComments) {\n  return {\n    type: \"SET_DISPLAY_COMMENTS\",\n    displayComments\n  };\n} // ! Add New Comment to displayComments Array in store\n\nexport function addNewComment(comment) {\n  return {\n    type: \"ADD_NEW_COMMENT\",\n    comment\n  };\n} // ! POST New Comment\n\nexport function postNewComment(content, user_id, song_id) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        content,\n        user_id,\n        song_id\n      })\n    };\n    return fetch(fetchCommentsUrl, reqObj).then(resp => resp.json()).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        console.log(data);\n        dispatch(addNewComment(data));\n      }\n    }).catch(err => console.log(err));\n  };\n}\nexport function deleteComment(comment_id) {\n  return {\n    type: 'DELETE_COMMENT',\n    comment_id\n  };\n} // ! Delete Comment\n\nexport function deleteCommentFromBackend(comment_id) {\n  return dispatch => {\n    const reqDelObj = {\n      method: 'DELETE'\n    };\n    let result = confirm(\"Do you want to delete this comment?\");\n\n    if (result) {\n      return fetch(\"\".concat(fetchCommentsUrl, \"/\").concat(comment_id), reqDelObj).then(res => res.json()).then(data => {\n        console.log(data);\n\n        if (data.error) {// handle error\n        } else {\n          alert(data.message);\n          dispatch(deleteComment(comment_id));\n        }\n      }).catch(err => console.log(err));\n    }\n  };\n} // ! SET all Tags\n\nexport function setAllTags(allTags) {\n  return {\n    type: \"SET_ALL_TAGS\",\n    allTags\n  };\n} // ! GET all Tags\n\nexport function fetchAllTags() {\n  return dispatch => {\n    return fetch(fetchTagsUrl).then(res => res.json()).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        dispatch(setAllTags(data));\n      }\n    }).catch(err => console.log(err));\n  };\n} // ? Some sort of filter songs by tag?\n// ! Goes to userProfile\n\nexport function goToUserProfile(user_id, history) {\n  return dispatch => {\n    return history.push(\"/profile/\".concat(user_id));\n  };\n}","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/actions/index.js"],"names":["fetchUsersUrl","fetchSongsUrl","fetchCommentsUrl","fetchTagsUrl","loginUser","user","console","log","type","logoutUser","loginCurrentUser","formData","history","dispatch","reqObj","method","headers","body","JSON","stringify","fetch","then","resp","json","data","error","localStorage","token","jwt","push","id","catch","err","currentUser","Authorization","res","setAllFolloweds","followeds","setAllFollowers","followers","registerUser","updateUser","updateCurrentUser","fetchUpdateUserUrl","reqUpdObj","setAllUsers","allUsers","fetchAllUsers","setAllSongs","allSongs","fetchAllSongs","addNewSongToFeed","newSong","postNewSong","user_id","title","genre","description","song_link","selectedTags","songData","FormData","append","reqObjPostSong","Accepts","song","setDisplayUser","displayUser","findDisplayUser","displayUserID","Number","location","pathname","slice","find","u","setDisplaySong","displaySong","findDisplaySong","displaySongID","setAllComments","allComments","fetchAllComments","findDisplayComments","displayComments","filter","comment","song_id","setDisplayComments","addNewComment","postNewComment","content","deleteComment","comment_id","deleteCommentFromBackend","reqDelObj","result","confirm","alert","message","setAllTags","allTags","fetchAllTags","goToUserProfile"],"mappings":"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","sourcesContent":["/*eslint-disable */\n// ! All actions go in here\nconst fetchUsersUrl = \"http://localhost:3000/users\"\nconst fetchSongsUrl = \"http://localhost:3000/songs\"\nconst fetchCommentsUrl = \"http://localhost:3000/comments\"\nconst fetchTagsUrl = \"http://localhost:3000/tags\"\n\nexport function loginUser(user) {\n  console.log(\"login\")\n  return {\n    type: \"LOGIN_USER\",\n    user\n  }\n}\n\nexport function logoutUser() {\n  console.log(\"logout\")\n  return {\n    type: \"LOGOUT_USER\"\n  }\n}\n\n// ! Log's in user and issues token\nexport function loginCurrentUser(formData, history) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData)\n    }\n    return fetch(\"http://localhost:3000/api/v1/auth\", reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          console.log(data)\n        } else {\n          localStorage.token = data.jwt\n          dispatch(loginUser(data.user))\n          console.log(data)\n          history.push(`/profile/${data.user.id}`)\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ! Finds the current user using token\nexport function currentUser() {\n  return dispatch => {\n    const token = localStorage.token\n    const reqObj = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }\n    return fetch(\"http://localhost:3000/api/v1/current_user\", reqObj)\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          console.log(\"currentUser error: \", data)\n        } else {\n          dispatch(loginUser(data.user))\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ! Sets all following relationships\nexport function setAllFolloweds(followeds) {\n  return {\n    type: \"SET_ALL_FOLLOWEDS\",\n    followeds\n  }\n}\n\nexport function setAllFollowers(followers) {\n  return {\n    type: \"SET_ALL_FOLLOWERS\",\n    followers\n  }\n}\n\n// ! Creates a new User\nexport function registerUser(formData, history) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData)\n    }\n    return fetch(fetchUsersUrl, reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          //handle Error\n          console.log(data.error)\n        } else {\n          localStorage.token = data.jwt\n          dispatch(loginUser(data.user))\n          // TODO Will go to user profile page\n          // dispatch(setDisplayUser(data.user))\n          // history.push(`/profile/${data.user.id}`)\n          // ! Quick fix\n          history.push(`/feed`)\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport function updateUser(user) {\n  return {\n    type: 'UPDATE_USER',\n    user\n  }\n}\n\n// ! Updates CurrentUser\nexport function updateCurrentUser(user, formData, history) {\n  return dispatch => {\n    const token = localStorage.token\n    const fetchUpdateUserUrl = fetchUsersUrl + '/' + user.id\n    const reqUpdObj = {\n      method: 'PATCH',\n      headers: {\n        'Content-type': 'application/json',\n        'Accepts': 'application/json',\n        'Authorization': `Bearer ${token}`\n      },\n      body: JSON.stringify(formData)\n    }\n    console.log(formData)\n    return fetch(fetchUpdateUserUrl, reqUpdObj)\n    .then(res => res.json())\n    .then(user => {\n      console.log(user)\n      if (!user.error) {\n        dispatch(updateUser(user))\n        history.push(`/profile/${user.id}`)\n      }\n    })\n  }\n}\n\n// ! Get and Set all USERS\nexport function setAllUsers(allUsers) {\n  return {\n    type: \"SET_ALL_USERS\",\n    allUsers\n  }\n}\n\nexport function fetchAllUsers() {\n  return dispatch => {\n    return fetch(fetchUsersUrl)\n      .then(resp => resp.json())\n      .then(data => {\n        // console.log(data)\n        if (data.error) {\n          console.log(data.error)\n        } else {\n          dispatch(setAllUsers(data))\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ! Get and Set all SONGS\nexport function setAllSongs(allSongs) {\n  return {\n    type: \"SET_ALL_SONGS\",\n    allSongs\n  }\n}\n\nexport function fetchAllSongs() {\n  return dispatch => {\n    return fetch(fetchSongsUrl)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          console.log(data.error)\n        } else {\n          dispatch(setAllSongs(data))\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ! Adds new song to allSongs Array\nexport function addNewSongToFeed(newSong) {\n  return {\n    type: \"ADD_SONG_TO_FEED\",\n    newSong\n  }\n}\n\n// ! POST New Song\nexport function postNewSong(formData, user_id, history) {\n  return dispatch => {\n    console.log(\"post da new song bruh\", formData)\n    const { title, genre, description, song_link, selectedTags } = formData\n    let songData = new FormData()\n    songData.append(\"song[song_link]\", song_link)\n    songData.append(\"song[title]\", title)\n    songData.append(\"song[genre]\", genre)\n    songData.append(\"song[description]\", description)\n    songData.append(\"song[user_id]\", user_id)\n    songData.append(\"tags[tags]\", selectedTags)\n    const reqObjPostSong = {\n      method: \"POST\",\n      headers: {\n        Accepts: \"application/json\"\n      },\n      body: songData\n    }\n    return fetch(fetchSongsUrl, reqObjPostSong)\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          console.log(\"error: \", data.error)\n        } else {\n          dispatch(addNewSongToFeed(data))\n          history.push(`/songs/${data.song.id}`)\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ! Find and Set Display User\nexport function setDisplayUser(displayUser) {\n  return {\n    type: \"SET_DISPLAY_USER\",\n    displayUser\n  }\n}\n\nexport function findDisplayUser(allUsers, history) {\n  return dispatch => {\n    const displayUserID = Number(history.location.pathname.slice(9))\n    const displayUser = allUsers.find(u => {\n      return u.id === displayUserID\n    })\n    dispatch(setDisplayUser(displayUser))\n  }\n}\n\n// ! Find and Set Display Song\nexport function setDisplaySong(displaySong) {\n  return {\n    type: \"SET_DISPLAY_SONG\",\n    displaySong\n  }\n}\n\nexport function findDisplaySong(allSongs, history) {\n  return dispatch => {\n    const displaySongID = Number(history.location.pathname.slice(7))\n    const displaySong = allSongs.find(song => {\n      return song.song.id === displaySongID\n    })\n    // console.log(\"displaySong: \", displaySong)\n    dispatch(setDisplaySong(displaySong))\n  }\n}\n\n// ! Set All comments\nexport function setAllComments(allComments) {\n  return {\n    type: \"SET_ALL_COMMENTS\",\n    allComments\n  }\n}\n\n// ! GET fetchs all Comments\nexport function fetchAllComments() {\n  return dispatch => {\n    return fetch(fetchCommentsUrl)\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          console.log(data.error)\n        } else {\n          dispatch(setAllComments(data))\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n\n// ! GET All display Comments\nexport function findDisplayComments(allComments, displaySong) {\n  return dispatch => {\n    const displayComments = allComments.filter(comment => {\n      return comment.song_id === displaySong.song.id\n    })\n    dispatch(setDisplayComments(displayComments))\n  }\n}\n\n// ! Set all display comments\nexport function setDisplayComments(displayComments) {\n  return {\n    type: \"SET_DISPLAY_COMMENTS\",\n    displayComments\n  }\n}\n\n// ! Add New Comment to displayComments Array in store\nexport function addNewComment(comment) {\n  return {\n    type: \"ADD_NEW_COMMENT\",\n    comment\n  }\n}\n\n// ! POST New Comment\nexport function postNewComment(content, user_id, song_id) {\n  return dispatch => {\n    const reqObj = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        content,\n        user_id,\n        song_id\n      })\n    }\n    return fetch(fetchCommentsUrl, reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        if (data.error) {\n          console.log(data.error)\n        } else {\n          console.log(data)\n          dispatch(addNewComment(data))\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n\nexport function deleteComment(comment_id) {\n  return {\n    type: 'DELETE_COMMENT',\n    comment_id\n  }\n}\n\n// ! Delete Comment\nexport function deleteCommentFromBackend(comment_id) {\n  return dispatch => {\n    const reqDelObj = {\n      method: 'DELETE'\n    }\n    let result = confirm(\"Do you want to delete this comment?\")\n    if (result) {\n      return fetch(`${fetchCommentsUrl}/${comment_id}`, reqDelObj)\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        if (data.error) {\n          // handle error\n        } else {\n          alert(data.message)\n          dispatch(deleteComment(comment_id))\n        }\n      })\n      .catch(err => console.log(err))\n    }\n  }\n}\n\n// ! SET all Tags\nexport function setAllTags(allTags) {\n  return {\n    type: \"SET_ALL_TAGS\",\n    allTags\n  }\n}\n\n// ! GET all Tags\nexport function fetchAllTags() {\n  return dispatch => {\n    return fetch(fetchTagsUrl)\n      .then(res => res.json())\n      .then(data => {\n        if (data.error) {\n          console.log(data.error)\n        } else {\n          dispatch(setAllTags(data))\n        }\n      })\n      .catch(err => console.log(err))\n  }\n}\n// ? Some sort of filter songs by tag?\n\n// ! Goes to userProfile\nexport function goToUserProfile(user_id, history) {\n  return dispatch => {\n    return history.push(`/profile/${user_id}`)\n  }\n}"]},"metadata":{},"sourceType":"module"}