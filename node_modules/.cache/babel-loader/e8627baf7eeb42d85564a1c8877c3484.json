{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/App.js\";\n\n/*eslint-disable */\nimport React from \"react\";\nimport \"../App.css\";\nimport LoginForm from \"./LoginForm\";\nimport NewUserForm from \"./NewUserForm\";\nimport UserProfile from \"./UserProfile\";\nimport FeedContainer from \"./FeedContainer\";\nimport { connect } from \"react-redux\";\nimport { Router, Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport { currentUser, logoutUser, fetchAllUsers, fetchAllSongs } from \"../actions\";\nimport { reducer } from \"../reducers\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      allSongs: []\n    };\n\n    this.FETCHSONGS = () => {\n      fetch('http://localhost:3000/songs').then(resp => resp.json()).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({\n            allSongs: data\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.handleLogout = e => {\n      localStorage.clear();\n      this.props.logoutUser();\n      this.props.history.push(\"/login\");\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAllSongs();\n    this.props.fetchAllUsers();\n    this.props.currentUser(this.props.history);\n  }\n\n  render() {\n    // console.log('daddadadad', this.props)\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/createaccount\",\n      render: () => React.createElement(NewUserForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile\",\n      render: () => React.createElement(UserProfile, {\n        handleLogout: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/feed\",\n      render: () => React.createElement(FeedContainer, {\n        allSongs: this.props.allSongs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    currentUser: history => dispatch(currentUser(history)),\n    logoutUser: () => dispatch(logoutUser()),\n    fetchAllUsers: () => dispatch(fetchAllUsers()),\n    fetchAllSongs: () => dispatch(fetchAllSongs())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/App.js"],"names":["React","LoginForm","NewUserForm","UserProfile","FeedContainer","connect","Router","Route","withRouter","Switch","Redirect","currentUser","logoutUser","fetchAllUsers","fetchAllSongs","reducer","App","Component","state","allSongs","FETCHSONGS","fetch","then","resp","json","data","error","console","log","setState","catch","err","handleLogout","e","localStorage","clear","props","history","push","componentDidMount","render","mapStateToProps","user","allUsers","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React from \"react\"\nimport \"../App.css\"\nimport LoginForm from \"./LoginForm\"\nimport NewUserForm from \"./NewUserForm\"\nimport UserProfile from \"./UserProfile\"\nimport FeedContainer from \"./FeedContainer\"\nimport { connect } from \"react-redux\"\nimport { Router, Route, withRouter, Switch, Redirect } from \"react-router-dom\"\nimport { currentUser, logoutUser, fetchAllUsers, fetchAllSongs } from \"../actions\"\nimport { reducer } from \"../reducers\"\n\nclass App extends React.Component {\n  // ! FOR TESTING OUT REDUX\n  state = {\n    allSongs: []\n  }\n  componentDidMount() {\n    this.props.fetchAllSongs()\n    this.props.fetchAllUsers()\n    this.props.currentUser(this.props.history)\n  }\n\n  FETCHSONGS = () => {\n    fetch('http://localhost:3000/songs')\n    .then(resp => resp.json())\n    .then(data => {\n      if (data.error) {\n        console.log(data.error)\n      } else {\n        this.setState({allSongs: data})\n      }\n    })\n    .catch(err => console.log(err))\n  }\n\n  handleLogout = e => {\n    localStorage.clear()\n    this.props.logoutUser()\n    this.props.history.push(\"/login\")\n  }\n\n  render() {\n    // console.log('daddadadad', this.props)\n    console.log(this.state)\n    return (\n      <div className=\"app-container\">\n        {/* <Switch> */}\n        <Route path=\"/login\" render={() => <LoginForm />} />\n        <Route path=\"/createaccount\" render={() => <NewUserForm />} />\n        <Route\n          path=\"/profile\"\n          render={() => <UserProfile handleLogout={this.handleLogout} />}\n        />\n        <Route\n          path=\"/feed\"\n          render={() => <FeedContainer allSongs={this.props.allSongs}/>}\n        />\n        {/* </Switch> */}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    currentUser: history => dispatch(currentUser(history)),\n    logoutUser: () => dispatch(logoutUser()),\n    fetchAllUsers: () => dispatch(fetchAllUsers()),\n    fetchAllSongs: () => dispatch(fetchAllSongs())\n  }\n}\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withRouter(App))\n"]},"metadata":{},"sourceType":"module"}