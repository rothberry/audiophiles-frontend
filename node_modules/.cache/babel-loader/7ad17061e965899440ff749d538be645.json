{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Nav.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header, Label, Sticky, Search } from \"semantic-ui-react\";\nimport { logoutUser, findDisplayUser } from \"../actions\";\nimport _ from \"lodash\";\n\nclass Nav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogout = e => {\n      localStorage.clear();\n      this.props.logoutUser();\n      this.props.history.push(\"/login\");\n    };\n\n    this.goToCurrentUserProfile = user_id => {\n      this.props.history.push(\"/profile/\".concat(user_id));\n      this.props.findDisplayUser(this.props.allUsers, this.props.history);\n    };\n  }\n\n  render() {\n    // console.log(this.state)\n    const _this$props$user = this.props.user,\n          isLoggedIn = _this$props$user.isLoggedIn,\n          isCurrentUser = _this$props$user.isCurrentUser;\n    console.log(this.props.user); // TODO Make the NAVBAR conditionally render based on 'isCurrentUser' and 'isLoggedIn'\n    // TODO Add Seach Function\n    // TODO Add Play/Pause to NavBar\n\n    return React.createElement(Sticky, {\n      className: \"nav-bar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, isLoggedIn ? React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: Link,\n      to: \"/feed\",\n      circular: true,\n      content: \"Feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: Link,\n      onClick: user_id => this.goToCurrentUserProfile(this.props.user.id),\n      circular: true,\n      content: \"Prof\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: Link,\n      to: \"/newsong\",\n      circular: true,\n      content: \"Upload Song\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: Link,\n      to: \"/editaccount\",\n      circular: true,\n      content: \"Edit Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: Link,\n      onClick: this.handleLogout,\n      circular: true,\n      content: \"Logout\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })) : React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Button, {\n      as: Link,\n      to: \"/feed\",\n      circular: true,\n      content: \"Feed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: Link,\n      to: \"/login\",\n      circular: true,\n      content: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  findDisplayUser\n})(withRouter(Nav));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Nav.js"],"names":["React","Component","Link","withRouter","connect","Button","Grid","Header","Label","Sticky","Search","logoutUser","findDisplayUser","_","Nav","handleLogout","e","localStorage","clear","props","history","push","goToCurrentUserProfile","user_id","allUsers","render","user","isLoggedIn","isCurrentUser","console","log","id","mapStateToProps","state"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8CC,MAA9C,QAA4D,mBAA5D;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,YAA5C;AACA,OAAOC,CAAP,MAAc,QAAd;;AAEA,MAAMC,GAAN,SAAkBb,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAM1Bc,YAN0B,GAMXC,CAAC,IAAI;AAClBC,MAAAA,YAAY,CAACC,KAAb;AACA,WAAKC,KAAL,CAAWR,UAAX;AACA,WAAKQ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD,KAVyB;;AAAA,SAyB1BC,sBAzB0B,GAyBDC,OAAO,IAAI;AAClC,WAAKJ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,oBAAoCE,OAApC;AACA,WAAKJ,KAAL,CAAWP,eAAX,CAA2B,KAAKO,KAAL,CAAWK,QAAtC,EAAgD,KAAKL,KAAL,CAAWC,OAA3D;AACD,KA5ByB;AAAA;;AA8B1BK,EAAAA,MAAM,GAAG;AACP;AADO,6BAE+B,KAAKN,KAAL,CAAWO,IAF1C;AAAA,UAECC,UAFD,oBAECA,UAFD;AAAA,UAEaC,aAFb,oBAEaA,aAFb;AAGPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWO,IAAvB,EAHO,CAIP;AACA;AACA;;AAEA,WACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGC,UAAU,GACT,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAEzB,IAAZ;AAAkB,MAAA,EAAE,EAAC,OAArB;AAA6B,MAAA,QAAQ,MAArC;AAAsC,MAAA,OAAO,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AACE,MAAA,EAAE,EAAEA,IADN;AAEE,MAAA,OAAO,EAAEqB,OAAO,IACd,KAAKD,sBAAL,CAA4B,KAAKH,KAAL,CAAWO,IAAX,CAAgBK,EAA5C,CAHJ;AAKE,MAAA,QAAQ,MALV;AAKW,MAAA,OAAO,EAAC,MALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EASE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAE7B,IAAZ;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAgC,MAAA,QAAQ,MAAxC;AAAyC,MAAA,OAAO,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAEA,IAAZ;AAAkB,MAAA,EAAE,EAAC,cAArB;AAAoC,MAAA,QAAQ,MAA5C;AAA6C,MAAA,OAAO,EAAC,cAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAEA,IAAZ;AAAkB,MAAA,OAAO,EAAE,KAAKa,YAAhC;AAA8C,MAAA,QAAQ,MAAtD;AAAuD,MAAA,OAAO,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADS,GAeT,oBAAC,MAAD,CAAQ,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAEb,IAAZ;AAAkB,MAAA,EAAE,EAAC,OAArB;AAA6B,MAAA,QAAQ,MAArC;AAAsC,MAAA,OAAO,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAEA,IAAZ;AAAkB,MAAA,EAAE,EAAC,QAArB;AAA8B,MAAA,QAAQ,MAAtC;AAAuC,MAAA,OAAO,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAjBJ,CADF;AAwCD;;AA9EyB;;AAiF5B,MAAM8B,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLP,IAAAA,IAAI,EAAEO,KAAK,CAACP,IADP;AAELF,IAAAA,QAAQ,EAAES,KAAK,CAACT;AAFX,GAAP;AAID,CALD;;AAOA,eAAepB,OAAO,CACpB4B,eADoB,EAEpB;AAAErB,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAFoB,CAAP,CAGbT,UAAU,CAACW,GAAD,CAHG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Button, Grid, Header, Label, Sticky, Search } from \"semantic-ui-react\"\nimport { logoutUser, findDisplayUser } from \"../actions\"\nimport _ from \"lodash\"\n\nclass Nav extends Component {\n  // state = {\n  //   searchInput: \"\",\n  //   results: []\n  // }\n\n  handleLogout = e => {\n    localStorage.clear()\n    this.props.logoutUser()\n    this.props.history.push(\"/login\")\n  }\n\n  // handleChange = async (e, value) => {\n  //   await this.setState({ searchInput: value })\n  //   this.filterSearchResults()\n  // }\n\n  // filterSearchResults = () => {\n  //   let filteredResults = this.props.allUsers.filter(user => {\n  //     console.log(user.username.includes(this.state.searchInput))\n  //     return user.username.includes(this.state.searchInput)\n  //   })\n  //   this.setState({results: filteredResults.slice(3)})\n  // }\n\n  goToCurrentUserProfile = user_id => {\n    this.props.history.push(`/profile/${user_id}`)\n    this.props.findDisplayUser(this.props.allUsers, this.props.history)\n  }\n\n  render() {\n    // console.log(this.state)\n    const { isLoggedIn, isCurrentUser } = this.props.user\n    console.log(this.props.user)\n    // TODO Make the NAVBAR conditionally render based on 'isCurrentUser' and 'isLoggedIn'\n    // TODO Add Seach Function\n    // TODO Add Play/Pause to NavBar\n\n    return (\n      <Sticky className=\"nav-bar-container\">\n        {/* <div className=\"nav-bar-container\"> */}\n        {isLoggedIn ? (\n          <Button.Group>\n            <Button as={Link} to=\"/feed\" circular content=\"Feed\" />\n            <Button\n              as={Link}\n              onClick={user_id =>\n                this.goToCurrentUserProfile(this.props.user.id)\n              }\n              circular content=\"Prof\"\n            />\n            <Button as={Link} to=\"/newsong\" circular content=\"Upload Song\" />\n            <Button as={Link} to=\"/editaccount\" circular content=\"Edit Profile\" />\n            <Button as={Link} onClick={this.handleLogout} circular content=\"Logout\" />\n          </Button.Group>\n        ) : (\n          <Button.Group>\n            <Button as={Link} to=\"/feed\" circular content=\"Feed\" />\n            <Button as={Link} to=\"/login\" circular content=\"Login\" />\n          </Button.Group>\n        )}\n        {/* {this.props.user.isLoggedIn ? ( */}\n\n        {/* <Button name=\"play-pause\" onClick={null} circular icon=\"play\" /> */}\n        {/* <Button name=\"play-pause\" onClick={null} circular icon=\"pause\" /> */}\n        {/* <Search\n          results={this.state.results}\n          onSearchChange={_.debounce(\n            (event, { value }) => this.handleChange(event, value),\n            500\n          )}\n          showNoResults={false}\n        /> */}\n        {/* ) : ( */}\n        {/* )} */}\n        {/* </div> */}\n      </Sticky>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, findDisplayUser }\n)(withRouter(Nav))\n"]},"metadata":{},"sourceType":"module"}