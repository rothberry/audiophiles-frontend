{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Nav.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header, Label, Sticky, Search } from \"semantic-ui-react\";\nimport { logoutUser, findDisplayUser } from \"../actions\";\nimport _ from \"lodash\";\n\nclass Nav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogout = e => {\n      localStorage.clear();\n      this.props.logoutUser();\n      this.props.history.push(\"/login\");\n    };\n\n    this.goToCurrentUserProfile = user_id => {\n      this.props.history.push(\"/profile/\".concat(user_id));\n      this.props.findDisplayUser(this.props.allUsers, this.props.history);\n    };\n  }\n\n  render() {\n    // TODO Make the NAVBAR conditionally render based on 'isCurrentUser' and 'isLoggedIn'\n    // TODO Add Seach Function\n    // console.log(this.state)\n    return (// <Sticky>\n      React.createElement(\"div\", {\n        className: \"nav-bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Button, {\n        as: Link,\n        to: \"/feed\",\n        content: \"Feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        onClick: user_id => this.goToCurrentUserProfile(this.props.user.id),\n        content: \"Prof\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        to: \"/newsong\",\n        content: \"Upload Song\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        to: \"/editaccount\",\n        content: \"Edit Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        onClick: this.handleLogout,\n        content: \"Logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), !this.state.isPlaying ? React.createElement(Button, {\n        name: \"play-pause\",\n        style: buttonStyle,\n        onClick: null,\n        circular: true,\n        icon: \"play\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }) : React.createElement(Button, {\n        name: \"play-pause\",\n        style: buttonStyle,\n        onClick: null,\n        circular: true,\n        icon: \"pause\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(Button, {\n        name: \"stop\",\n        style: buttonStyle,\n        onClick: null,\n        circular: true,\n        icon: \"stop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        to: \"/login\",\n        content: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })) // </Sticky>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  findDisplayUser\n})(withRouter(Nav));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Nav.js"],"names":["React","Component","Link","withRouter","connect","Button","Grid","Header","Label","Sticky","Search","logoutUser","findDisplayUser","_","Nav","handleLogout","e","localStorage","clear","props","history","push","goToCurrentUserProfile","user_id","allUsers","render","user","id","state","isPlaying","buttonStyle","mapStateToProps"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Button, Grid, Header, Label, Sticky, Search } from \"semantic-ui-react\"\nimport { logoutUser, findDisplayUser } from \"../actions\"\nimport _ from \"lodash\"\n\nclass Nav extends Component {\n  // state = {\n  //   searchInput: \"\",\n  //   results: []\n  // }\n\n  handleLogout = e => {\n    localStorage.clear()\n    this.props.logoutUser()\n    this.props.history.push(\"/login\")\n  }\n\n  // handleChange = async (e, value) => {\n  //   await this.setState({ searchInput: value })\n  //   this.filterSearchResults()\n  // }\n\n  // filterSearchResults = () => {\n  //   let filteredResults = this.props.allUsers.filter(user => {\n  //     console.log(user.username.includes(this.state.searchInput))\n  //     return user.username.includes(this.state.searchInput)\n  //   })\n  //   this.setState({results: filteredResults.slice(3)})\n  // }\n\n  goToCurrentUserProfile = user_id => {\n    this.props.history.push(`/profile/${user_id}`)\n    this.props.findDisplayUser(this.props.allUsers, this.props.history)\n  }\n\n  render() {\n    // TODO Make the NAVBAR conditionally render based on 'isCurrentUser' and 'isLoggedIn'\n    // TODO Add Seach Function\n    // console.log(this.state)\n    return (\n      // <Sticky>\n      <div className=\"nav-bar-container\">\n        <Button as={Link} to=\"/feed\" content=\"Feed\" />\n        {/* {this.props.user.isLoggedIn ? ( */}\n        <Button\n          as={Link}\n          onClick={user_id => this.goToCurrentUserProfile(this.props.user.id)}\n          content=\"Prof\"\n        />\n        <Button as={Link} to=\"/newsong\" content=\"Upload Song\" />\n        <Button as={Link} to=\"/editaccount\" content=\"Edit Profile\" />\n        <Button as={Link} onClick={this.handleLogout} content=\"Logout\" />\n        {!this.state.isPlaying ? (\n          <Button\n            name=\"play-pause\"\n            style={buttonStyle}\n            onClick={null}\n            circular\n            icon=\"play\"\n          />\n        ) : (\n          <Button\n            name=\"play-pause\"\n            style={buttonStyle}\n            onClick={null}\n            circular\n            icon=\"pause\"\n          />\n        )}\n        <Button\n          name=\"stop\"\n          style={buttonStyle}\n          onClick={null}\n          circular\n          icon=\"stop\"\n        />\n        {/* <Search\n          results={this.state.results}\n          onSearchChange={_.debounce(\n            (event, { value }) => this.handleChange(event, value),\n            500\n          )}\n          showNoResults={false}\n        /> */}\n        {/* ) : ( */}\n        <Button as={Link} to=\"/login\" content=\"Login\" />\n        {/* )} */}\n      </div>\n      // </Sticky>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, findDisplayUser }\n)(withRouter(Nav))\n"]},"metadata":{},"sourceType":"module"}