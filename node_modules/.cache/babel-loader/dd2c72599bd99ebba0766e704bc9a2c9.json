{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedUserProfileSide.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\nimport { Button, Grid, Modal, Image, Icon, Label, Segment, Header } from \"semantic-ui-react\";\nimport { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser, deleteUser } from \"../actions\";\n\nclass FeedUserProfileSide extends Component {\n  // handleFollowUser = (followed_id, follower_id) => {\n  render() {\n    const isCurrentUser = this.props.user.isCurrentUser;\n    const _this$props$feedUser = this.props.feedUser,\n          username = _this$props$feedUser.username,\n          name = _this$props$feedUser.name,\n          location = _this$props$feedUser.location,\n          bio = _this$props$feedUser.bio,\n          id = _this$props$feedUser.id,\n          img_url = _this$props$feedUser.img_url,\n          facebook_url = _this$props$feedUser.facebook_url,\n          twitter_url = _this$props$feedUser.twitter_url,\n          soundcloud_url = _this$props$feedUser.soundcloud_url; // console.log(\"cur\", this.props.showCurrentUser)\n    // console.log(\"dis\", this.props.displayUser)\n    // console.log(\"feed\", feedUser.username)\n\n    const isFace = !facebook_url;\n    const isTwit = !twitter_url;\n    const isSound = !soundcloud_url;\n    const isImg = !!img_url;\n    let isFollowing;\n\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id;\n      });\n    }\n\n    const mapFollowers = this.props.followers.map(fol => {\n      return React.createElement(Label, {\n        widths: \"equals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: (allUsers, history) => this.props.findDisplayUser(this.props.allUsers, this.props.history),\n        to: \"/profile/\".concat(fol.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, fol.username));\n    });\n    return React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, isImg ? React.createElement(Image, {\n      src: img_url,\n      circular: true,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }) : null, React.createElement(Header, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, username)));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n})(withRouter(FeedUserProfileSide));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedUserProfileSide.js"],"names":["React","Component","connect","Link","withRouter","Redirect","Button","Grid","Modal","Image","Icon","Label","Segment","Header","findDisplayUser","followUser","currentUser","currentRelationship","setCurrentUser","deleteUser","FeedUserProfileSide","render","isCurrentUser","props","user","feedUser","username","name","location","bio","id","img_url","facebook_url","twitter_url","soundcloud_url","isFace","isTwit","isSound","isImg","isFollowing","followers","find","mapFollowers","map","fol","allUsers","history","mapStateToProps","state","displayUser","followeds"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter, Redirect } from \"react-router-dom\"\nimport {\n  Button,\n  Grid,\n  Modal,\n  Image,\n  Icon,\n  Label,\n  Segment,\n  Header\n} from \"semantic-ui-react\"\nimport {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n} from \"../actions\"\n\nclass FeedUserProfileSide extends Component {\n  // handleFollowUser = (followed_id, follower_id) => {\n  render() {\n    const { isCurrentUser } = this.props.user\n    const {\n      username,\n      name,\n      location,\n      bio,\n      id,\n      img_url,\n      facebook_url,\n      twitter_url,\n      soundcloud_url\n    } = this.props.feedUser\n    // console.log(\"cur\", this.props.showCurrentUser)\n    // console.log(\"dis\", this.props.displayUser)\n    // console.log(\"feed\", feedUser.username)\n    const isFace = !facebook_url\n    const isTwit = !twitter_url\n    const isSound = !soundcloud_url\n    const isImg = !!img_url\n    let isFollowing\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id\n      })\n    }\n\n    const mapFollowers = this.props.followers.map(fol => {\n      return (\n        <Label widths=\"equals\">\n          <Link\n            onClick={(allUsers, history) =>\n              this.props.findDisplayUser(\n                this.props.allUsers,\n                this.props.history\n              )\n            }\n            to={`/profile/${fol.id}`}\n          >\n            {fol.username}\n          </Link>\n        </Label>\n      )\n    })\n\n    return (\n      <Grid.Column>\n        <Segment>\n          {isImg ? <Image src={img_url} circular alt=\"\" /> : null}\n          <Header size='large'>{username}</Header>\n        </Segment>\n      </Grid.Column>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    findDisplayUser,\n    followUser,\n    currentUser,\n    currentRelationship,\n    setCurrentUser,\n    deleteUser\n  }\n)(withRouter(FeedUserProfileSide))\n"]},"metadata":{},"sourceType":"module"}