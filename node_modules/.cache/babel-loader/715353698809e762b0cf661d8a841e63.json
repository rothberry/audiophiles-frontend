{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfileSide.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\nimport { Button, Grid, Modal, Image, Icon, Label, Segment, Header } from \"semantic-ui-react\";\nimport { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser, deleteUser } from \"../actions\";\n\nclass UserProfileSide extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFollowUser = (followed, follower_id) => {\n      // console.log(\"followed: \", followed.id)\n      // console.log(\"follower: \", follower_id)\n      this.props.followUser(followed, follower_id);\n    };\n\n    this.handleUnfollowUser = () => {// TODO Send DELETE fetch to backend\n      // TODO Need the relationshipID\n    };\n  }\n\n  render() {\n    const isCurrentUser = this.props.user.isCurrentUser;\n    const _this$props$displayUs = this.props.displayUser,\n          username = _this$props$displayUs.username,\n          name = _this$props$displayUs.name,\n          location = _this$props$displayUs.location,\n          bio = _this$props$displayUs.bio,\n          id = _this$props$displayUs.id,\n          img_url = _this$props$displayUs.img_url,\n          facebook_url = _this$props$displayUs.facebook_url,\n          twitter_url = _this$props$displayUs.twitter_url,\n          soundcloud_url = _this$props$displayUs.soundcloud_url; // console.log(\"cur\", this.props.showCurrentUser)\n    // console.log(\"dis\", this.props.displayUser)\n    // console.log(\"feed\", feedUser.username)\n\n    const isFace = !facebook_url;\n    const isTwit = !twitter_url;\n    const isSound = !soundcloud_url;\n    const isImg = !!img_url;\n    let isFollowing;\n\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id;\n      });\n    } // TODO Add followers\n    // const mapFollowers = this.props.followers.map(fol => {\n    //   return (\n    //     <Label widths=\"equals\">\n    //       <Link\n    //         onClick={(allUsers, history) =>\n    //           this.props.findDisplayUser(\n    //             this.props.allUsers,\n    //             this.props.history\n    //           )\n    //         }\n    //         to={`/profile/${fol.id}`}\n    //       >\n    //         {fol.username}\n    //       </Link>\n    //     </Label>\n    //   )\n    // })\n\n\n    return React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, isImg ? React.createElement(Image, {\n      src: img_url,\n      circular: true,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : null, React.createElement(Header, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, username), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Header.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Name: \", name), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"location: \", location), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Bio: \", bio)), React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"facebook\",\n      as: \"a\",\n      href: facebook_url,\n      disabled: isFace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), \" Facebook\"), React.createElement(Button, {\n      color: \"twitter\",\n      as: \"a\",\n      href: twitter_url,\n      disabled: isTwit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), \" Twitter\"), React.createElement(Button, {\n      color: \"orange\",\n      as: \"a\",\n      href: soundcloud_url,\n      disabled: isSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"soundcloud\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), \" Soundcloud\"))), isCurrentUser ? React.createElement(Button, {\n      onClick: (user_id, history) => this.props.deleteUser(this.props.user.id, this.props.history),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Delete Account\") : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n})(withRouter(UserProfileSide));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfileSide.js"],"names":["React","Component","connect","Link","withRouter","Redirect","Button","Grid","Modal","Image","Icon","Label","Segment","Header","findDisplayUser","followUser","currentUser","currentRelationship","setCurrentUser","deleteUser","UserProfileSide","handleFollowUser","followed","follower_id","props","handleUnfollowUser","render","isCurrentUser","user","displayUser","username","name","location","bio","id","img_url","facebook_url","twitter_url","soundcloud_url","isFace","isTwit","isSound","isImg","isFollowing","followers","find","user_id","history","mapStateToProps","state","allUsers","followeds"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter, Redirect } from \"react-router-dom\"\nimport {\n  Button,\n  Grid,\n  Modal,\n  Image,\n  Icon,\n  Label,\n  Segment,\n  Header\n} from \"semantic-ui-react\"\nimport {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n} from \"../actions\"\n\nclass UserProfileSide extends Component {\n  // handleFollowUser = (followed_id, follower_id) => {\n  handleFollowUser = (followed, follower_id) => {\n    // console.log(\"followed: \", followed.id)\n    // console.log(\"follower: \", follower_id)\n    this.props.followUser(followed, follower_id)\n  }\n\n  handleUnfollowUser = () => {\n    // TODO Send DELETE fetch to backend\n    // TODO Need the relationshipID\n  }\n\n  render() {\n    const { isCurrentUser } = this.props.user\n    const {\n      username,\n      name,\n      location,\n      bio,\n      id,\n      img_url,\n      facebook_url,\n      twitter_url,\n      soundcloud_url\n    } = this.props.displayUser\n    // console.log(\"cur\", this.props.showCurrentUser)\n    // console.log(\"dis\", this.props.displayUser)\n    // console.log(\"feed\", feedUser.username)\n    const isFace = !facebook_url\n    const isTwit = !twitter_url\n    const isSound = !soundcloud_url\n    const isImg = !!img_url\n    let isFollowing\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id\n      })\n    }\n    // TODO Add followers\n    // const mapFollowers = this.props.followers.map(fol => {\n    //   return (\n    //     <Label widths=\"equals\">\n    //       <Link\n    //         onClick={(allUsers, history) =>\n    //           this.props.findDisplayUser(\n    //             this.props.allUsers,\n    //             this.props.history\n    //           )\n    //         }\n    //         to={`/profile/${fol.id}`}\n    //       >\n    //         {fol.username}\n    //       </Link>\n    //     </Label>\n    //   )\n    // })\n\n    return (\n      <Grid.Column>\n        <Segment>\n          {isImg ? <Image src={img_url} circular alt=\"\" /> : null}\n          <Header size='large'>{username}</Header>\n            <Segment>\n              <Header.Group>\n                <Header>Name: {name}</Header>\n                <Header>location: {location}</Header>\n                <Header>Bio: {bio}</Header>\n              </Header.Group>\n              <Button.Group>\n                <Button\n                  color=\"facebook\"\n                  as=\"a\"\n                  href={facebook_url}\n                  disabled={isFace}\n                >\n                  <Icon name=\"facebook\" /> Facebook\n                </Button>\n                <Button\n                  color=\"twitter\"\n                  as=\"a\"\n                  href={twitter_url}\n                  disabled={isTwit}\n                >\n                  <Icon name=\"twitter\" /> Twitter\n                </Button>\n                <Button\n                  color=\"orange\"\n                  as=\"a\"\n                  href={soundcloud_url}\n                  disabled={isSound}\n                >\n                  <Icon name=\"soundcloud\" /> Soundcloud\n                </Button>\n              </Button.Group>\n            </Segment>\n          {/* <Segment widths=\"equal\">\n            <h4>Followers: </h4>\n            {mapFollowers.length > 0 ? (\n              <ul>{mapFollowers}</ul>\n            ) : (\n              <p>No Followers Yet!</p>\n            )}\n          </Segment> */}\n          {isCurrentUser ? (\n            <Button\n              onClick={(user_id, history) =>\n                this.props.deleteUser(this.props.user.id, this.props.history)\n              }\n            >\n              Delete Account\n            </Button>\n          ) : null}\n\n          {/* {!isFeedUser || !!isFollowing || isCurrentUser ? null : (\n            <Button\n              onClick={(followed, follower_id) =>\n                this.handleFollowUser(\n                  this.props.displayUser,\n                  this.props.user.id\n                )\n              }\n            >\n              Follow Me!\n            </Button>\n          )} */}\n        </Segment>\n      </Grid.Column>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    findDisplayUser,\n    followUser,\n    currentUser,\n    currentRelationship,\n    setCurrentUser,\n    deleteUser\n  }\n)(withRouter(UserProfileSide))\n"]},"metadata":{},"sourceType":"module"}