{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Form, Grid, Header, Segment } from \"semantic-ui-react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { postNewSong } from \"../actions\";\nimport ActiveStorageComponent from \"./ActiveStorageComponent\";\n\nclass NewSongForm extends Component {\n  constructor(props) {\n    super();\n\n    this.handleNewSongSubmit = e => {\n      e.preventDefault(); // const { title, genre, description, song_link } = this.state\n      // this.setState({user_id: this.props.currentUser.id})\n\n      const user_id = this.props.currentUser.id;\n      console.log(user_id);\n      this.props.postNewSong(this.state, user_id, this.props.history);\n    };\n\n    this.handleNewSongChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onFilesAdded = e => {\n      const targetSongLink = e.target.files[0];\n      this.setState({\n        song_link: targetSongLink\n      }); // const songData = {...this.state, song_link: newAudio, user_id: this.props.currentUser.id}\n    };\n\n    this.goBackToProfile = () => {\n      // debugger\n      this.props.history(\"/profile/\".concat(this.props.user.id));\n    };\n\n    this.audioInput = React.createRef();\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      // user_id: \"\",\n      song_link: \"\"\n    };\n  }\n\n  render() {\n    console.log(this.state); // console.log(this.props)\n\n    return React.createElement(\"div\", {\n      className: \"new-song-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      textAlign: \"center\",\n      verticalAlign: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      onSubmit: this.handleNewSongSubmit,\n      encType: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      stacked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Header, {\n      as: \"h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"New Song\"), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Title\",\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Genre\",\n      type: \"text\",\n      name: \"genre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      onChange: this.handleNewSongChange,\n      placeholder: \"Description\",\n      type: \"text\",\n      name: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\" // ref={this.audioInput}\n      ,\n      onChange: this.onFilesAdded,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Submit New Song\"), React.createElement(Button, {\n      as: Link,\n      onClick: this.goBackToProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Go Back\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  postNewSong\n})(withRouter(NewSongForm));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/NewSongForm.js"],"names":["React","Component","connect","Button","Form","Grid","Header","Segment","Link","withRouter","postNewSong","ActiveStorageComponent","NewSongForm","constructor","props","handleNewSongSubmit","e","preventDefault","user_id","currentUser","id","console","log","state","history","handleNewSongChange","setState","target","name","value","onFilesAdded","targetSongLink","files","song_link","goBackToProfile","user","audioInput","createRef","title","genre","description","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Button, Form, Grid, Header, Segment } from \"semantic-ui-react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { postNewSong } from \"../actions\"\nimport ActiveStorageComponent from \"./ActiveStorageComponent\"\n\nclass NewSongForm extends Component {\n  constructor(props) {\n    super()\n    this.audioInput = React.createRef()\n    this.state = {\n      title: \"\",\n      genre: \"\",\n      description: \"\",\n      // user_id: \"\",\n      song_link: \"\"\n    }\n  }\n\n  handleNewSongSubmit = e => {\n    e.preventDefault()\n    // const { title, genre, description, song_link } = this.state\n    // this.setState({user_id: this.props.currentUser.id})\n    const user_id = this.props.currentUser.id\n    console.log(user_id)\n    this.props.postNewSong(this.state, user_id, this.props.history)\n  }\n\n  handleNewSongChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  onFilesAdded = e => {\n    const targetSongLink = e.target.files[0]\n    this.setState({ song_link: targetSongLink })    \n    // const songData = {...this.state, song_link: newAudio, user_id: this.props.currentUser.id}\n  }\n\n  goBackToProfile = () => {\n    // debugger\n    this.props.history(`/profile/${this.props.user.id}`)\n  }\n\n  render() {\n    console.log(this.state)\n    // console.log(this.props)\n    return (\n      <div className=\"new-song-form\">\n        <Grid textAlign=\"center\" verticalAlign=\"middle\">\n          <Grid.Column>\n            <Form\n              size=\"large\"\n              onSubmit={this.handleNewSongSubmit}\n              encType=\"multipart/form-data\"\n            >\n              <Segment stacked>\n                <Header as=\"h1\">New Song</Header>\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Title\"\n                  type=\"text\"\n                  name=\"title\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Genre\"\n                  type=\"text\"\n                  name=\"genre\"\n                />\n                <Form.Input\n                  onChange={this.handleNewSongChange}\n                  placeholder=\"Description\"\n                  type=\"text\"\n                  name=\"description\"\n                />\n                <input\n                  type=\"file\"\n                  // ref={this.audioInput}\n                  onChange={this.onFilesAdded}\n                />\n                {/* <ActiveStorageComponent /> */}\n                <Button type=\"submit\" primary fluid size=\"large\">\n                  Submit New Song\n                </Button>\n                <Button as={Link} onClick={this.goBackToProfile}>Go Back</Button>\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { postNewSong }\n)(withRouter(NewSongForm))\n"]},"metadata":{},"sourceType":"module"}