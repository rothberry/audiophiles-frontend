{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfile.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid, Modal } from \"semantic-ui-react\";\nimport SongFeedComponent from \"./SongFeedComponent\";\nimport { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser, deleteUser } from \"../actions\";\n\nclass UserProfile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFollowUser = (followed, follower_id) => {\n      // console.log(\"followed: \", followed.id)\n      // console.log(\"follower: \", follower_id)\n      this.props.followUser(followed, follower_id);\n    };\n\n    this.asyncUserProfileProps = async () => {\n      await this.props.currentUser();\n      await this.props.findDisplayUser(this.props.allUsers, this.props.history);\n      const relationship = this.props.displayUser.passive_relationships.find(rel => {\n        return rel.follower_id === this.props.user.id;\n      });\n      this.props.setCurrentUser(this.props.displayUser, this.props.user);\n      this.props.currentRelationship(relationship);\n    };\n\n    this.handleUnfollowUser = () => {// TODO Send DELETE fetch to backend\n      // TODO Need the relationshipID\n    };\n\n    this.handleDeleteUser = () => {};\n  }\n\n  componentDidMount() {\n    this.asyncUserProfileProps();\n  } // handleFollowUser = (followed_id, follower_id) => {\n\n\n  render() {\n    const isCurrentUser = this.props.user.isCurrentUser;\n    const _this$props$displayUs = this.props.displayUser,\n          username = _this$props$displayUs.username,\n          name = _this$props$displayUs.name,\n          location = _this$props$displayUs.location,\n          bio = _this$props$displayUs.bio,\n          id = _this$props$displayUs.id;\n    const filteredDisplayUserSongs = this.props.allSongs.filter(displaySong => {\n      return displaySong.song.user_id === id;\n    });\n    const mappedDisplayUserSongFeed = filteredDisplayUserSongs.map(displaySong => {\n      return React.createElement(SongFeedComponent, {\n        songData: displaySong,\n        userClickDisabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }); // TODO Move isCurrentUser to Store\n    // console.log(\"current user? \", isCurrentUser)\n    // console.log(\"following? \", isFollowing)\n\n    return !!this.props.displayUser.id ? React.createElement(\"div\", {\n      className: \"user-profile-\".concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, mappedDisplayUserSongFeed), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Username: \", username), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Name: \", name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"location: \", location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Bio: \", bio), isCurrentUser ? React.createElement(Modal, {\n      trigger: React.createElement(Button, {\n        onClick: user_id => this.props.deleteUser(this.props.user.id),\n        content: \"Delete\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : React.createElement(Button, {\n      onClick: (followed, follower_id) => this.handleFollowUser(this.props.displayUser, this.props.user.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Follow Me!\")))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"No User Profile\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displayUser: state.displayUser,\n    allSongs: state.allSongs,\n    allUsers: state.allUsers,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n})(withRouter(UserProfile));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfile.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","Modal","SongFeedComponent","findDisplayUser","followUser","currentUser","currentRelationship","setCurrentUser","deleteUser","UserProfile","handleFollowUser","followed","follower_id","props","asyncUserProfileProps","allUsers","history","relationship","displayUser","passive_relationships","find","rel","user","id","handleUnfollowUser","handleDeleteUser","componentDidMount","render","isCurrentUser","username","name","location","bio","filteredDisplayUserSongs","allSongs","filter","displaySong","song","user_id","mappedDisplayUserSongFeed","map","mapStateToProps","state","followeds","followers"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Button, Grid, Modal } from \"semantic-ui-react\"\nimport SongFeedComponent from \"./SongFeedComponent\"\nimport {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n} from \"../actions\"\n\nclass UserProfile extends Component {\n  componentDidMount() {\n    this.asyncUserProfileProps()\n  }\n\n  // handleFollowUser = (followed_id, follower_id) => {\n  handleFollowUser = (followed, follower_id) => {\n    // console.log(\"followed: \", followed.id)\n    // console.log(\"follower: \", follower_id)\n    this.props.followUser(followed, follower_id)\n  }\n\n  asyncUserProfileProps = async () => {\n    await this.props.currentUser()\n    await this.props.findDisplayUser(this.props.allUsers, this.props.history)\n    const relationship = this.props.displayUser.passive_relationships.find(\n      rel => {\n        return rel.follower_id === this.props.user.id\n      }\n    )\n    this.props.setCurrentUser(this.props.displayUser, this.props.user)\n    this.props.currentRelationship(relationship)\n  }\n\n  handleUnfollowUser = () => {\n    // TODO Send DELETE fetch to backend\n    // TODO Need the relationshipID\n  }\n\n  handleDeleteUser = () => {\n\n  }\n\n  render() {\n    const { isCurrentUser } = this.props.user\n    const { username, name, location, bio, id } = this.props.displayUser\n    const filteredDisplayUserSongs = this.props.allSongs.filter(displaySong => {\n      return displaySong.song.user_id === id\n    })\n    const mappedDisplayUserSongFeed = filteredDisplayUserSongs.map(\n      displaySong => {\n        return (\n          <SongFeedComponent songData={displaySong} userClickDisabled={true} />\n        )\n      }\n    )\n    // TODO Move isCurrentUser to Store\n    // console.log(\"current user? \", isCurrentUser)\n    // console.log(\"following? \", isFollowing)\n    return !!this.props.displayUser.id ? (\n      <div className={`user-profile-${id}`}>\n        <Grid columns={2}>\n          <Grid.Column>{mappedDisplayUserSongFeed}</Grid.Column>\n          <Grid.Column>\n            <h1>Username: {username}</h1>\n            <h1>Name: {name}</h1>\n            <h1>location: {location}</h1>\n            <p>Bio: {bio}</p>\n            {isCurrentUser ? (\n              <Modal \n                trigger={\n                  <Button\n                    onClick={user_id => this.props.deleteUser(this.props.user.id)}\n                    content='Delete'\n                  />\n                }\n                \n              />\n            ) : (\n              <Button\n                onClick={(followed, follower_id) =>\n                  this.handleFollowUser(\n                    this.props.displayUser,\n                    this.props.user.id\n                  )\n                }\n              >\n                Follow Me!\n              </Button>\n            )}\n          </Grid.Column>\n        </Grid>\n      </div>\n    ) : (\n      <div>No User Profile</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displayUser: state.displayUser,\n    allSongs: state.allSongs,\n    allUsers: state.allUsers,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\nexport default connect(\n  mapStateToProps,\n  {\n    findDisplayUser,\n    followUser,\n    currentUser,\n    currentRelationship,\n    setCurrentUser,\n    deleteUser\n  }\n)(withRouter(UserProfile))\n"]},"metadata":{},"sourceType":"module"}