{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Waveform from './Waveform';\n\nclass SongFeedComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    // ! Need current song with data\n    const songData = this.props.songData;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"song-comp-\".concat(songData.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Waveform, {\n      songData: allSongs[14],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"waveform-\".concat(songData.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, songData.song.title), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, songData.song.user.username), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, songData.song.genre), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, songData.song.description), React.createElement(\"audio\", {\n      controls: true,\n      src: songData.song_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user // allUsers: state.allUsers,\n    // allSongs: state.allSongs\n\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(SongFeedComponent));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js"],"names":["React","Component","connect","withRouter","Waveform","SongFeedComponent","state","render","songData","props","console","log","id","allSongs","song","title","user","username","genre","description","song_link","mapStateToProps"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,iBAAN,SAAgCJ,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCK,KADwC,GAChC,EADgC;AAAA;;AAKxCC,EAAAA,MAAM,GAAG;AACP;AADO,UAECC,QAFD,GAEc,KAAKC,KAFnB,CAECD,QAFD;AAGPE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AACA,WACE;AAAK,MAAA,SAAS,sBAAeD,QAAQ,CAACI,EAAxB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEC,QAAQ,CAAC,EAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,qBAAcL,QAAQ,CAACI,EAAvB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,QAAQ,CAACM,IAAT,CAAcC,KAAnB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,QAAQ,CAACM,IAAT,CAAcE,IAAd,CAAmBC,QAAxB,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,QAAQ,CAACM,IAAT,CAAcI,KAAnB,CAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKV,QAAQ,CAACM,IAAT,CAAcK,WAAnB,CAJA,EAKA;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,GAAG,EAAEX,QAAQ,CAACY,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CAFF,CADF;AAaD;;AAtBuC;;AAyB1C,MAAMC,eAAe,GAAGf,KAAK,IAAI;AAC/B,SAAO;AACLU,IAAAA,IAAI,EAAEV,KAAK,CAACU,IADP,CAEL;AACA;;AAHK,GAAP;AAKD,CAND;;AAQA,eAAed,OAAO,CACpBmB,eADoB,EAEpB;AACA,IAHoB,CAAP,CAIblB,UAAU,CAACE,iBAAD,CAJG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport Waveform from './Waveform'\n\nclass SongFeedComponent extends Component {\n  state = {\n\n  }\n\n  render() {\n    // ! Need current song with data\n    const { songData } = this.props\n    console.log(this.props)\n    return (\n      <div className={`song-comp-${songData.id}`}>\n        <Waveform songData={allSongs[14]} />\n        <div className={`waveform-${songData.id}`}>\n        <h1>{songData.song.title}</h1>\n        <h1>{songData.song.user.username}</h1>\n        <h2>{songData.song.genre}</h2>\n        <h3>{songData.song.description}</h3>\n        <audio controls src={songData.song_link} />\n      </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    // allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(SongFeedComponent))\n"]},"metadata":{},"sourceType":"module"}