{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Nav.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Button, Grid, Header, Label, Sticky, Search } from \"semantic-ui-react\";\nimport { logoutUser, findDisplayUser } from \"../actions\";\nimport _ from \"lodash\";\n\nclass Nav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchInput: \"\",\n      results: []\n    };\n\n    this.handleLogout = e => {\n      localStorage.clear();\n      this.props.logoutUser();\n      this.props.history.push(\"/login\");\n    };\n\n    this.handleChange = (e, value) => {\n      this.setState({\n        searchInput: value\n      });\n    };\n\n    this.filterSearchResults = () => {\n      let filteredResults = this.props.allUsers.filter(user => {\n        console.log(user.username.includes(this.state.searchInput));\n        return user.username.includes(this.state.searchInput);\n      });\n      this.setState({\n        results: filteredResults.slice(3)\n      });\n    };\n\n    this.goToCurrentUserProfile = user_id => {\n      this.props.history.push(\"/profile/\".concat(user_id));\n      this.props.findDisplayUser(this.props.allUsers, this.props.history);\n    };\n  }\n\n  render() {\n    // TODO Make the NAVBAR conditionally render based on 'isCurrentUser' and 'isLoggedIn'\n    console.log(this.state);\n    return (// <Sticky>\n      React.createElement(\"div\", {\n        className: \"nav-bar-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Button, {\n        as: Link,\n        to: \"/feed\",\n        content: \"Feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        onClick: user_id => this.goToCurrentUserProfile(this.props.user.id),\n        content: \"Prof\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        to: \"/newsong\",\n        content: \"Upload Song\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        to: \"/editaccount\",\n        content: \"Edit Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        onClick: this.handleLogout,\n        content: \"Logout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Search, {\n        results: this.filterSearchResults,\n        onSearchChange: _.debounce((event, {\n          value\n        }) => this.handleChange(event, value), 500),\n        showNoResults: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Button, {\n        as: Link,\n        to: \"/login\",\n        content: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })) // </Sticky>\n\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logoutUser,\n  findDisplayUser\n})(withRouter(Nav));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Nav.js"],"names":["React","Component","Link","withRouter","connect","Button","Grid","Header","Label","Sticky","Search","logoutUser","findDisplayUser","_","Nav","state","searchInput","results","handleLogout","e","localStorage","clear","props","history","push","handleChange","value","setState","filterSearchResults","filteredResults","allUsers","filter","user","console","log","username","includes","slice","goToCurrentUserProfile","user_id","render","id","debounce","event","mapStateToProps"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { Button, Grid, Header, Label, Sticky, Search } from \"semantic-ui-react\"\nimport { logoutUser, findDisplayUser } from \"../actions\"\nimport _ from \"lodash\"\n\nclass Nav extends Component {\n  state = {\n    searchInput: \"\",\n    results: []\n  }\n\n  handleLogout = e => {\n    localStorage.clear()\n    this.props.logoutUser()\n    this.props.history.push(\"/login\")\n  }\n\n  handleChange = (e, value) => {\n    this.setState({ searchInput: value })\n  }\n\n  filterSearchResults = () => {\n    let filteredResults = this.props.allUsers.filter(user => {\n      console.log(user.username.includes(this.state.searchInput))\n      return user.username.includes(this.state.searchInput)\n    })\n    this.setState({results: filteredResults.slice(3)})\n  }\n\n  goToCurrentUserProfile = user_id => {\n    this.props.history.push(`/profile/${user_id}`)\n    this.props.findDisplayUser(this.props.allUsers, this.props.history)\n  }\n\n  render() {\n    // TODO Make the NAVBAR conditionally render based on 'isCurrentUser' and 'isLoggedIn'\n    console.log(this.state)\n    return (\n      // <Sticky>\n      <div className=\"nav-bar-container\">\n        <Button as={Link} to=\"/feed\" content=\"Feed\" />\n        {/* {this.props.user.isLoggedIn ? ( */}\n        <Button\n          as={Link}\n          onClick={user_id => this.goToCurrentUserProfile(this.props.user.id)}\n          content=\"Prof\"\n        />\n        <Button as={Link} to=\"/newsong\" content=\"Upload Song\" />\n        <Button as={Link} to=\"/editaccount\" content=\"Edit Profile\" />\n        <Button as={Link} onClick={this.handleLogout} content=\"Logout\" />\n        <Search\n          results={this.filterSearchResults}\n          onSearchChange={_.debounce(\n            (event, { value }) => this.handleChange(event, value),\n            500\n          )}\n          showNoResults={false}\n        />\n        {/* ) : ( */}\n        <Button as={Link} to=\"/login\" content=\"Login\" />\n        {/* )} */}\n      </div>\n      // </Sticky>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser, findDisplayUser }\n)(withRouter(Nav))\n"]},"metadata":{},"sourceType":"module"}