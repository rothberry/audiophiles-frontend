{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Waveform from \"./Waveform\"; // import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  render() {\n    const allSongs = this.props.allSongs; // console.log(\"allsongs: \", allSongs)\n    // const mario = require('../mario.mp3') //? For testing\n\n    const filteredWithSongLink = allSongs.filter(song => song.song_link);\n    console.log('filter: ', filteredWithSongLink);\n    const mappedFeed = filteredWithSongLink.map(songData => {\n      // console.log(songData)\n      return React.createElement(\"div\", {\n        className: \"waveform-\".concat(songData.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, songData.song.title), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, songData.song.genre), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, songData.song.description), React.createElement(\"audio\", {\n        controls: true,\n        src: songData.song_link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }));\n    }); // return allSongs.length > 0 ? (\n\n    return React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"da Feed\", mappedFeed); // : (\n    //   <div>loading...</div>\n    // )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(FeedContainer));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js"],"names":["React","Component","connect","withRouter","Waveform","FeedContainer","render","allSongs","props","filteredWithSongLink","filter","song","song_link","console","log","mappedFeed","map","songData","id","title","genre","description","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAEpCK,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD,EAEP;AACA;;AACA,UAAME,oBAAoB,GAAGF,QAAQ,CAACG,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,SAA7B,CAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,oBAAxB;AACA,UAAMM,UAAU,GAAGN,oBAAoB,CAACO,GAArB,CAAyBC,QAAQ,IAAI;AACtD;AACA,aACE;AAAK,QAAA,SAAS,qBAAcA,QAAQ,CAACC,EAAvB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,QAAQ,CAACN,IAAT,CAAcQ,KAAnB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,QAAQ,CAACN,IAAT,CAAcS,KAAnB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,QAAQ,CAACN,IAAT,CAAcU,WAAnB,CAJF,EAKE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,GAAG,EAAEJ,QAAQ,CAACL,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD,KAXkB,CAAnB,CANO,CAmBP;;AACA,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGG,UAFH,CADF,CApBO,CA4BP;AACA;AACA;AACD;;AAjCmC;;AAoCtC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAEL;AACAjB,IAAAA,QAAQ,EAAEgB,KAAK,CAAChB;AAHX,GAAP;AAKD,CAND;;AAQA,eAAeL,OAAO,CACpBoB,eADoB,EAEpB;AACA,IAHoB,CAAP,CAIbnB,UAAU,CAACE,aAAD,CAJG,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport Waveform from \"./Waveform\"\n// import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n\n  render() {\n    const { allSongs } = this.props\n    // console.log(\"allsongs: \", allSongs)\n    // const mario = require('../mario.mp3') //? For testing\n    const filteredWithSongLink = allSongs.filter(song => song.song_link)\n    console.log('filter: ', filteredWithSongLink)\n    const mappedFeed = filteredWithSongLink.map(songData => {\n      // console.log(songData)\n      return (\n        <div className={`waveform-${songData.id}`}>\n          {/* <Waveform songData={songData.song_link} /> */}\n          <h1>{songData.song.title}</h1>\n          <h2>{songData.song.genre}</h2>\n          <h3>{songData.song.description}</h3>\n          <audio controls src={songData.song_link} />\n        </div>\n      )\n    })\n\n    // return allSongs.length > 0 ? (\n    return (\n      <div className=\"feed-container\">\n        da Feed\n        {mappedFeed}\n        {/* <audio controls='controls' src={allSongs[14].song_link} /> */}\n        {/* <Waveform songData={allSongs[14]}/> */}\n      </div>\n    ) \n    // : (\n    //   <div>loading...</div>\n    // )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(FeedContainer))\n"]},"metadata":{},"sourceType":"module"}