{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport Waveform from \"./Waveform\";\n\nclass SongFeedComponent extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.goToUserProfile = e => {\n      console.log(e.target);\n      const user_id = this.props.songData.song.user.id; // this.props.history.push(`/profile/${user_id}`)\n    };\n\n    this.goToSongPage = e => {\n      const song_id = this.props.songData.song.user.id;\n      this.props.history.push(\"/profile/\".concat(song_id));\n    };\n  }\n\n  render() {\n    // ! Need current song with data\n    const songData = this.props.songData;\n    const song = this.props.songData.song;\n    const user = this.props.songData.song.user;\n    console.log(song);\n    return React.createElement(\"div\", {\n      className: \"song-comp-\".concat(song.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      onClick: this.goToSongPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, song.title))), React.createElement(Grid.Row, {\n      celled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      onClick: this.goToUserProfile,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, user.username)), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"2\")), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Waveform, {\n      song_link: songData.song_link,\n      waveHeight: 100,\n      responsive: true,\n      splitChannels: false,\n      mediaControls: true,\n      maxCanvasWidth: 500,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user // allUsers: state.allUsers,\n    // allSongs: state.allSongs\n\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(SongFeedComponent));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","Header","Waveform","SongFeedComponent","goToUserProfile","e","console","log","target","user_id","props","songData","song","user","id","goToSongPage","song_id","history","push","render","title","username","song_link","mapStateToProps","state"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Button, Grid, Header } from \"semantic-ui-react\"\n\nimport Waveform from \"./Waveform\"\n\nclass SongFeedComponent extends Component {\n  goToUserProfile = e => {\n    console.log(e.target)\n    const user_id = this.props.songData.song.user.id\n    // this.props.history.push(`/profile/${user_id}`)\n  }\n\n  goToSongPage = e => {\n    const song_id = this.props.songData.song.user.id\n    this.props.history.push(`/profile/${song_id}`)\n  }\n\n  render() {\n    // ! Need current song with data\n    const { songData } = this.props\n    const {\n      songData: { song }\n    } = this.props\n    const {\n      songData: {\n        song: { user }\n      }\n    } = this.props\n    console.log(song)\n    return (\n      <div className={`song-comp-${song.id}`}>\n        <Grid.Row columns={4}>\n          <Grid.Column>\n            <h4 onClick={this.goToSongPage}>{song.title}</h4>\n          </Grid.Column>\n          {/* <Header to={`/profile/${song.id}`} as=\"h4\">{song.title}</Header> */}\n        </Grid.Row>\n        <Grid.Row celled>\n          <Grid.Column floated=\"left\">\n            <h4 onClick={this.goToUserProfile}>{user.username}</h4>\n          </Grid.Column>\n          <Grid.Column>2</Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Waveform\n            song_link={songData.song_link}\n            waveHeight={100}\n            responsive={true}\n            splitChannels={false}\n            mediaControls={true}\n            maxCanvasWidth={500}\n          />\n        </Grid.Row>\n        <br />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n    // allUsers: state.allUsers,\n    // allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(SongFeedComponent))\n"]},"metadata":{},"sourceType":"module"}