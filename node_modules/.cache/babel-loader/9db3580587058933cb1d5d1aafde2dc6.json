{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfileSIde.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid, Modal, Image, Icon, Label, Segment } from \"semantic-ui-react\";\nimport { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser, deleteUser } from \"../actions\";\n\nclass UserProfileSide extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleFollowUser = (followed, follower_id) => {\n      // console.log(\"followed: \", followed.id)\n      // console.log(\"follower: \", follower_id)\n      this.props.followUser(followed, follower_id);\n    };\n\n    this.handleUnfollowUser = () => {// TODO Send DELETE fetch to backend\n      // TODO Need the relationshipID\n    };\n\n    this.mappedFollowers = followers => {\n      // debugger\n      followers.map(fol => {\n        return (// <Link to={`/profile/${fol.id}`}>{fol.username}</Link>\n          React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, fol.username)\n        );\n      });\n    };\n\n    this.handleDeleteUser = () => {};\n  }\n\n  render() {\n    const isCurrentUser = this.props.user.isCurrentUser;\n    const _this$props$displayUs = this.props.displayUser,\n          username = _this$props$displayUs.username,\n          name = _this$props$displayUs.name,\n          location = _this$props$displayUs.location,\n          bio = _this$props$displayUs.bio,\n          id = _this$props$displayUs.id,\n          img_url = _this$props$displayUs.img_url,\n          facebook_url = _this$props$displayUs.facebook_url,\n          twitter_url = _this$props$displayUs.twitter_url,\n          soundcloud_url = _this$props$displayUs.soundcloud_url;\n    const isFace = !facebook_url;\n    const isTwit = !twitter_url;\n    const isSound = !soundcloud_url;\n    const mapFollowers = this.props.followers.map(fol => {\n      return React.createElement(Label, {\n        widths: \"equals\",\n        as: \"a\",\n        href: \"/profile/\".concat(fol.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, fol.username);\n    }); // console.log('displayuser: ', this.displayUser)\n    // console.log(this.props)\n    // TODO Need correct img urls cause i can't edit shit..\n\n    return React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Username: \", username), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Name: \", name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"location: \", location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Bio: \", bio), React.createElement(Button, {\n      color: \"facebook\",\n      as: \"a\",\n      href: facebook_url,\n      disabled: isFace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \" Facebook\"), React.createElement(Button, {\n      color: \"twitter\",\n      as: \"a\",\n      href: twitter_url,\n      disabled: isTwit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), \" Twitter\"), React.createElement(Button, {\n      color: \"orange\",\n      as: \"a\",\n      href: soundcloud_url,\n      disabled: isSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"soundcloud\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), \" Soundcloud\"), React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Followers: \"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, mapFollowers)), isCurrentUser ? React.createElement(Button, {\n      onClick: (user_id, history) => this.props.deleteUser(this.props.user.id, this.props.history),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Delete Account\") : React.createElement(Button, {\n      onClick: (followed, follower_id) => this.handleFollowUser(this.props.displayUser, this.props.user.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Follow Me!\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n})(withRouter(UserProfileSide));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfileSIde.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","Modal","Image","Icon","Label","Segment","findDisplayUser","followUser","currentUser","currentRelationship","setCurrentUser","deleteUser","UserProfileSide","handleFollowUser","followed","follower_id","props","handleUnfollowUser","mappedFollowers","followers","map","fol","username","handleDeleteUser","render","isCurrentUser","user","displayUser","name","location","bio","id","img_url","facebook_url","twitter_url","soundcloud_url","isFace","isTwit","isSound","mapFollowers","user_id","history","mapStateToProps","state","followeds"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport {\n  Button,\n  Grid,\n  Modal,\n  Image,\n  Icon,\n  Label,\n  Segment\n} from \"semantic-ui-react\"\nimport {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n} from \"../actions\"\n\nclass UserProfileSide extends Component {\n  // handleFollowUser = (followed_id, follower_id) => {\n  handleFollowUser = (followed, follower_id) => {\n    // console.log(\"followed: \", followed.id)\n    // console.log(\"follower: \", follower_id)\n    this.props.followUser(followed, follower_id)\n  }\n\n  handleUnfollowUser = () => {\n    // TODO Send DELETE fetch to backend\n    // TODO Need the relationshipID\n  }\n\n  mappedFollowers = followers => {\n    // debugger\n    followers.map(fol => {\n      return (\n        // <Link to={`/profile/${fol.id}`}>{fol.username}</Link>\n        <p>{fol.username}</p>\n      )\n    })\n  }\n\n  handleDeleteUser = () => {}\n\n  render() {\n    const { isCurrentUser } = this.props.user\n    const {\n      username,\n      name,\n      location,\n      bio,\n      id,\n      img_url,\n      facebook_url,\n      twitter_url,\n      soundcloud_url\n    } = this.props.displayUser\n    const isFace = !facebook_url\n    const isTwit = !twitter_url\n    const isSound = !soundcloud_url\n\n    const mapFollowers = this.props.followers.map(fol => {\n      return (\n        <Label widths=\"equals\" as=\"a\" href={`/profile/${fol.id}`}>\n          {fol.username}\n        </Label>\n      )\n    })\n\n    // console.log('displayuser: ', this.displayUser)\n    // console.log(this.props)\n    // TODO Need correct img urls cause i can't edit shit..\n    return (\n      <Grid.Column>\n        {/* <Image src={img_url} circular /> */}\n        <h1>Username: {username}</h1>\n        <h1>Name: {name}</h1>\n        <h1>location: {location}</h1>\n        <p>Bio: {bio}</p>\n        <Button color=\"facebook\" as=\"a\" href={facebook_url} disabled={isFace}>\n          <Icon name=\"facebook\" /> Facebook\n        </Button>\n        <Button color=\"twitter\" as=\"a\" href={twitter_url} disabled={isTwit}>\n          <Icon name=\"twitter\" /> Twitter\n        </Button>\n        <Button color=\"orange\" as=\"a\" href={soundcloud_url} disabled={isSound}>\n          <Icon name=\"soundcloud\" /> Soundcloud\n        </Button>\n        <Segment>\n          <h4>Followers: </h4>\n          <ul>{mapFollowers}</ul>\n        </Segment>\n        {isCurrentUser ? (\n          <Button\n            onClick={(user_id, history) =>\n              this.props.deleteUser(this.props.user.id, this.props.history)\n            }\n          >\n            Delete Account\n          </Button>\n        ) : (\n          <Button\n            onClick={(followed, follower_id) =>\n              this.handleFollowUser(this.props.displayUser, this.props.user.id)\n            }\n          >\n            Follow Me!\n          </Button>\n        )}\n      </Grid.Column>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    findDisplayUser,\n    followUser,\n    currentUser,\n    currentRelationship,\n    setCurrentUser,\n    deleteUser\n  }\n)(withRouter(UserProfileSide))\n"]},"metadata":{},"sourceType":"module"}