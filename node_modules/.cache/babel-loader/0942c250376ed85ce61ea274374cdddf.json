{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Waveform from \"./Waveform\"; // import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  render() {\n    const allSongs = this.props.allSongs;\n    console.log(\"allsongs: \", allSongs); // const mario = require('../mario.mp3') //? For testing\n\n    const filteredWithSongLink = allSongs.filter(song => song.song_link);\n    console.log('filter: ', filteredWithSongLink);\n    const mappedFeed = filteredWithSongLink.map(songData => {\n      // console.log(songData)\n      return React.createElement(\"div\", {\n        className: \"waveform-\".concat(songData.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Waveform, {\n        songData: songData.song_link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }));\n    });\n    return allSongs.length > 0 ? React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"da Feed\", React.createElement(Waveform, {\n      src: allSongs[14].song_link,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(FeedContainer));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js"],"names":["React","Component","connect","withRouter","Waveform","FeedContainer","render","allSongs","props","console","log","filteredWithSongLink","filter","song","song_link","mappedFeed","map","songData","id","length","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAEpCK,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEPE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B,EAFO,CAGP;;AACA,UAAMI,oBAAoB,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,SAA7B,CAA7B;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,oBAAxB;AACA,UAAMI,UAAU,GAAGJ,oBAAoB,CAACK,GAArB,CAAyBC,QAAQ,IAAI;AACtD;AACA,aACE;AAAK,QAAA,SAAS,qBAAcA,QAAQ,CAACC,EAAvB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAED,QAAQ,CAACH,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD,KARkB,CAAnB;AAUA,WAAOP,QAAQ,CAACY,MAAT,GAAkB,CAAlB,GACL;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEZ,QAAQ,CAAC,EAAD,CAAR,CAAaO,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADK,GAQL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAUD;;AA5BmC;;AA+BtC,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAEL;AACAf,IAAAA,QAAQ,EAAEc,KAAK,CAACd;AAHX,GAAP;AAKD,CAND;;AAQA,eAAeL,OAAO,CACpBkB,eADoB,EAEpB;AACA,IAHoB,CAAP,CAIbjB,UAAU,CAACE,aAAD,CAJG,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport Waveform from \"./Waveform\"\n// import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n\n  render() {\n    const { allSongs } = this.props\n    console.log(\"allsongs: \", allSongs)\n    // const mario = require('../mario.mp3') //? For testing\n    const filteredWithSongLink = allSongs.filter(song => song.song_link)\n    console.log('filter: ', filteredWithSongLink)\n    const mappedFeed = filteredWithSongLink.map(songData => {\n      // console.log(songData)\n      return (\n        <div className={`waveform-${songData.id}`}>\n          <Waveform songData={songData.song_link} />\n          {/* <audio src={songData.song_link} /> */}\n        </div>\n      )\n    })\n\n    return allSongs.length > 0 ? (\n      <div className=\"feed-container\">\n        da Feed\n        {/* {mappedFeed} */}\n        {/* <audio controls='controls' src={allSongs[14].song_link} /> */}\n        <Waveform src={allSongs[14].song_link}/>\n      </div>\n    ) : (\n      <div>loading...</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(FeedContainer))\n"]},"metadata":{},"sourceType":"module"}