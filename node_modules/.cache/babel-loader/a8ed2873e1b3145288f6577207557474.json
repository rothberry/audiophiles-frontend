{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfile.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid } from \"semantic-ui-react\"; // import {fetchFollowing} from '../actions'\n\nclass UserProfile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.findUser = displayUserID => {\n      if (this.props.allUsers.length > 0) {\n        return this.props.allUsers.find(u => {\n          return u.id === displayUserID;\n        });\n      }\n    };\n\n    this.handleFollowUser = (followed_id, follower_id) => {\n      console.log(\"followed: \", followed_id);\n      console.log(\"follower: \", follower_id); // TODO Sends fetch to Followings Model with\n    };\n\n    this.goToNewSong = () => {\n      this.props.history.push(\"/newsong\");\n    };\n  }\n\n  render() {\n    const displayUserID = Number(this.props.history.location.pathname.slice(9));\n    const displayUser = this.findUser(displayUserID);\n    const username = displayUser.username,\n          name = displayUser.name,\n          location = displayUser.location,\n          bio = displayUser.bio,\n          id = displayUser.id;\n    const filteredDisplayUserSongs = this.props.allSongs.filter(song => {\n      console.log(song);\n      return song.user_id === id;\n    });\n    console.log('users songs: ', filteredDisplayUserSongs); // const mappedDisplayUserSongFeed = this.props.allSongs.filter()\n\n    const isCurrentUser = id === this.props.user.id;\n    const isFollowing = this.props.user.id === this.props.followeds.find(f => f.id === id); // console.log(\"current user? \", isCurrentUser)\n    // console.log(\"following? \", isFollowing)\n\n    return displayUser ? React.createElement(\"div\", {\n      className: \"user-profile-\".concat(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      columns: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"User Song seed here\"), React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Username: \", username), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Name: \", name), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"location: \", location), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Bio: \", bio), isCurrentUser ? null : React.createElement(Button, {\n      onClick: (followed_id, follower_id) => this.handleFollowUser(displayUserID, this.props.user.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Follow Me!\")))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"No User Profile\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allSongs: state.allSongs,\n    allUsers: state.allUsers,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, null // {fetchFollowing}\n)(withRouter(UserProfile));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/UserProfile.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","UserProfile","findUser","displayUserID","props","allUsers","length","find","u","id","handleFollowUser","followed_id","follower_id","console","log","goToNewSong","history","push","render","Number","location","pathname","slice","displayUser","username","name","bio","filteredDisplayUserSongs","allSongs","filter","song","user_id","isCurrentUser","user","isFollowing","followeds","f","mapStateToProps","state","followers"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,mBAA7B,C,CACA;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;;AAAA,SAClCO,QADkC,GACvBC,aAAa,IAAI;AAC1B,UAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,GAA6B,CAAjC,EAAoC;AAClC,eAAO,KAAKF,KAAL,CAAWC,QAAX,CAAoBE,IAApB,CAAyBC,CAAC,IAAI;AACnC,iBAAOA,CAAC,CAACC,EAAF,KAASN,aAAhB;AACD,SAFM,CAAP;AAGD;AACF,KAPiC;;AAAA,SASlCO,gBATkC,GASf,CAACC,WAAD,EAAcC,WAAd,KAA8B;AAC/CC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,WAA1B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,WAA1B,EAF+C,CAG/C;AACD,KAbiC;;AAAA,SAelCG,WAfkC,GAepB,MAAM;AAClB,WAAKX,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,UAAxB;AACD,KAjBiC;AAAA;;AAmBlCC,EAAAA,MAAM,GAAG;AACP,UAAMf,aAAa,GAAGgB,MAAM,CAAC,KAAKf,KAAL,CAAWY,OAAX,CAAmBI,QAAnB,CAA4BC,QAA5B,CAAqCC,KAArC,CAA2C,CAA3C,CAAD,CAA5B;AACA,UAAMC,WAAW,GAAG,KAAKrB,QAAL,CAAcC,aAAd,CAApB;AAFO,UAGCqB,QAHD,GAGuCD,WAHvC,CAGCC,QAHD;AAAA,UAGWC,IAHX,GAGuCF,WAHvC,CAGWE,IAHX;AAAA,UAGiBL,QAHjB,GAGuCG,WAHvC,CAGiBH,QAHjB;AAAA,UAG2BM,GAH3B,GAGuCH,WAHvC,CAG2BG,GAH3B;AAAA,UAGgCjB,EAHhC,GAGuCc,WAHvC,CAGgCd,EAHhC;AAIP,UAAMkB,wBAAwB,GAAG,KAAKvB,KAAL,CAAWwB,QAAX,CAAoBC,MAApB,CAA2BC,IAAI,IAAI;AAClEjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAZ;AACA,aAAOA,IAAI,CAACC,OAAL,KAAiBtB,EAAxB;AACD,KAHgC,CAAjC;AAIAI,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Ba,wBAA7B,EARO,CASP;;AACA,UAAMK,aAAa,GAAGvB,EAAE,KAAK,KAAKL,KAAL,CAAW6B,IAAX,CAAgBxB,EAA7C;AACA,UAAMyB,WAAW,GAAG,KAAK9B,KAAL,CAAW6B,IAAX,CAAgBxB,EAAhB,KAAuB,KAAKL,KAAL,CAAW+B,SAAX,CAAqB5B,IAArB,CAA0B6B,CAAC,IAAIA,CAAC,CAAC3B,EAAF,KAASA,EAAxC,CAA3C,CAXO,CAYP;AACA;;AACA,WAAOc,WAAW,GAChB;AAAK,MAAA,SAAS,yBAAkBd,EAAlB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAee,QAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWC,IAAX,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAeL,QAAf,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAASM,GAAT,CAJF,EAKGM,aAAa,GAAG,IAAH,GACZ,oBAAC,MAAD;AACE,MAAA,OAAO,EAAE,CAACrB,WAAD,EAAcC,WAAd,KACP,KAAKF,gBAAL,CAAsBP,aAAtB,EAAqC,KAAKC,KAAL,CAAW6B,IAAX,CAAgBxB,EAArD,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ,CAFF,CADF,CADgB,GAsBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAtBF;AAwBD;;AAzDiC;;AA4DpC,MAAM4B,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,IAAI,EAAEK,KAAK,CAACL,IADP;AAELL,IAAAA,QAAQ,EAAEU,KAAK,CAACV,QAFX;AAGLvB,IAAAA,QAAQ,EAAEiC,KAAK,CAACjC,QAHX;AAIL8B,IAAAA,SAAS,EAAEG,KAAK,CAACH,SAJZ;AAKLI,IAAAA,SAAS,EAAED,KAAK,CAACC;AALZ,GAAP;AAOD,CARD;;AASA,eAAe3C,OAAO,CACpByC,eADoB,EAEpB,IAFoB,CAGpB;AAHoB,CAAP,CAIbvC,UAAU,CAACG,WAAD,CAJG,CAAf","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Button, Grid } from \"semantic-ui-react\"\n// import {fetchFollowing} from '../actions'\n\nclass UserProfile extends Component {\n  findUser = displayUserID => {\n    if (this.props.allUsers.length > 0) {\n      return this.props.allUsers.find(u => {\n        return u.id === displayUserID\n      })\n    }\n  }\n\n  handleFollowUser = (followed_id, follower_id) => {\n    console.log(\"followed: \", followed_id)\n    console.log(\"follower: \", follower_id)\n    // TODO Sends fetch to Followings Model with\n  }\n\n  goToNewSong = () => {\n    this.props.history.push(\"/newsong\")\n  }\n\n  render() {\n    const displayUserID = Number(this.props.history.location.pathname.slice(9))\n    const displayUser = this.findUser(displayUserID)\n    const { username, name, location, bio, id } = displayUser\n    const filteredDisplayUserSongs = this.props.allSongs.filter(song => {\n      console.log(song)\n      return song.user_id === id \n    })\n    console.log('users songs: ', filteredDisplayUserSongs)\n    // const mappedDisplayUserSongFeed = this.props.allSongs.filter()\n    const isCurrentUser = id === this.props.user.id\n    const isFollowing = this.props.user.id === this.props.followeds.find(f => f.id === id)\n    // console.log(\"current user? \", isCurrentUser)\n    // console.log(\"following? \", isFollowing)\n    return displayUser ? (\n      <div className={`user-profile-${id}`}>\n        <Grid columns={2}>\n          <Grid.Column>User Song seed here</Grid.Column>\n          <Grid.Column>\n            <h1>Username: {username}</h1>\n            <h1>Name: {name}</h1>\n            <h1>location: {location}</h1>\n            <p>Bio: {bio}</p>\n            {isCurrentUser ? null : (\n              <Button\n                onClick={(followed_id, follower_id) =>\n                  this.handleFollowUser(displayUserID, this.props.user.id)\n                }\n              >\n                Follow Me!\n              </Button>\n            )}\n          </Grid.Column>\n        </Grid>\n      </div>\n    ) : (\n      <div>No User Profile</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allSongs: state.allSongs,\n    allUsers: state.allUsers,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\nexport default connect(\n  mapStateToProps,\n  null\n  // {fetchFollowing}\n)(withRouter(UserProfile))\n"]},"metadata":{},"sourceType":"module"}