{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/App.js\";\n\n/*eslint-disable */\nimport React from \"react\";\nimport \"../App.css\";\nimport LoginForm from \"./LoginForm\";\nimport NewUserForm from \"./NewUserForm\";\nimport UserProfile from \"./UserProfile\";\nimport FeedContainer from \"./FeedContainer\";\nimport NewSongForm from \"./NewSongForm\";\nimport Nav from \"./Nav\"; // import SongFeedComponent from \"./SongFeedComponent\"\n\nimport { connect } from \"react-redux\";\nimport { Router, Route, withRouter, Switch, Redirect } from \"react-router-dom\";\nimport { currentUser, logoutUser, fetchAllUsers, fetchAllSongs, setAllFolloweds, setAllFollowers } from \"../actions\";\nimport SongShowPage from \"./SongShowPage\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleLogout = e => {\n      localStorage.clear();\n      this.props.logoutUser();\n      this.props.history.push(\"/login\");\n    };\n\n    this.setAllFollowings = () => {\n      let followedsIDArray = [];\n      let followersIDArray = [];\n      let followedsArray = [];\n      let followersArray = [];\n      const userFollowings = this.props.allUsers.find(user => user.id === this.props.user.id);\n\n      if (userFollowings) {\n        followedsIDArray = userFollowings.active_relationships.map(rel => rel.followed_id);\n        followedsArray = followedsIDArray.map(followedsID => {\n          return this.props.allUsers.find(user => {\n            return user.id === followedsID;\n          });\n        });\n        followersIDArray = userFollowings.passive_relationships.map(rel => rel.follower_id);\n        followersArray = followersIDArray.map(followersID => {\n          return this.props.allUsers.find(user => {\n            return user.id === followersID;\n          });\n        });\n      }\n\n      this.props.setAllFolloweds(followedsArray);\n      this.props.setAllFollowers(followersArray);\n    };\n  }\n\n  // ! FOR TESTING OUT REDUX\n  // state = {\n  //   allFollowers: [],\n  //   allFolloweds: []\n  // }\n  componentDidMount() {\n    this.props.fetchAllSongs();\n    this.props.fetchAllUsers();\n    this.props.currentUser(); // this.props.fetchFollowing(this.props.user.id)\n  }\n\n  render() {\n    // console.log('app props: ', this.props)\n    // console.log(this.state)\n    this.setAllFollowings();\n    return React.createElement(\"div\", {\n      className: \"app-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(LoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/createaccount\",\n      render: () => React.createElement(NewUserForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/profile/:id\",\n      render: () => React.createElement(UserProfile, {\n        handleLogout: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/feed\",\n      render: () => React.createElement(FeedContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/newsong\",\n      render: () => React.createElement(NewSongForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/songs/:id\",\n      render: () => React.createElement(SongShowPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  };\n};\n\nexport default connect(mapStateToProps, // mapDispatchToProps\n{\n  currentUser,\n  logoutUser,\n  fetchAllUsers,\n  fetchAllSongs,\n  setAllFolloweds,\n  setAllFollowers\n})(withRouter(App));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/App.js"],"names":["React","LoginForm","NewUserForm","UserProfile","FeedContainer","NewSongForm","Nav","connect","Router","Route","withRouter","Switch","Redirect","currentUser","logoutUser","fetchAllUsers","fetchAllSongs","setAllFolloweds","setAllFollowers","SongShowPage","App","Component","handleLogout","e","localStorage","clear","props","history","push","setAllFollowings","followedsIDArray","followersIDArray","followedsArray","followersArray","userFollowings","allUsers","find","user","id","active_relationships","map","rel","followed_id","followedsID","passive_relationships","follower_id","followersID","componentDidMount","render","mapStateToProps","state"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React from \"react\"\nimport \"../App.css\"\nimport LoginForm from \"./LoginForm\"\nimport NewUserForm from \"./NewUserForm\"\nimport UserProfile from \"./UserProfile\"\nimport FeedContainer from \"./FeedContainer\"\nimport NewSongForm from \"./NewSongForm\"\nimport Nav from \"./Nav\"\n// import SongFeedComponent from \"./SongFeedComponent\"\nimport { connect } from \"react-redux\"\nimport { Router, Route, withRouter, Switch, Redirect } from \"react-router-dom\"\nimport {\n  currentUser,\n  logoutUser,\n  fetchAllUsers,\n  fetchAllSongs,\n  setAllFolloweds,\n  setAllFollowers\n} from \"../actions\"\nimport SongShowPage from \"./SongShowPage\"\n\nclass App extends React.Component {\n  // ! FOR TESTING OUT REDUX\n  // state = {\n  //   allFollowers: [],\n  //   allFolloweds: []\n  // }\n  componentDidMount() {\n    this.props.fetchAllSongs()\n    this.props.fetchAllUsers()\n    this.props.currentUser()\n    // this.props.fetchFollowing(this.props.user.id)\n  }\n\n  handleLogout = e => {\n    localStorage.clear()\n    this.props.logoutUser()\n    this.props.history.push(\"/login\")\n  }\n\n  setAllFollowings = () => {\n    let followedsIDArray = []\n    let followersIDArray = []\n    let followedsArray = []\n    let followersArray = []\n\n    const userFollowings = this.props.allUsers.find(\n      user => user.id === this.props.user.id\n    )\n    if (userFollowings) {\n      followedsIDArray = userFollowings.active_relationships.map(\n        rel => rel.followed_id\n      )\n      followedsArray = followedsIDArray.map(followedsID => {\n        return this.props.allUsers.find(user => {\n          return user.id === followedsID\n        })\n      })\n      followersIDArray = userFollowings.passive_relationships.map(\n        rel => rel.follower_id\n      )\n      followersArray = followersIDArray.map(followersID => {\n        return this.props.allUsers.find(user => {\n          return user.id === followersID\n        })\n      })\n    }\n    this.props.setAllFolloweds(followedsArray)\n    this.props.setAllFollowers(followersArray)\n  }\n\n  render() {\n    // console.log('app props: ', this.props)\n    // console.log(this.state)\n    this.setAllFollowings()\n    return (\n      <div className=\"app-container\">\n        {/* <Switch> */}\n        <Nav />\n        <Route path=\"/login\" render={() => <LoginForm />} />\n        <Route path=\"/createaccount\" render={() => <NewUserForm />} />\n        <Route\n          path=\"/profile/:id\"\n          render={() => <UserProfile handleLogout={this.handleLogout} />}\n        />\n        <Route path=\"/feed\" render={() => <FeedContainer />} />\n        <Route path=\"/newsong\" render={() => <NewSongForm />} />\n        <Route\n          path=\"/songs/:id\"\n          render={() => <SongShowPage />}\n        />\n\n        {/* <Route path='/songs/:id' render={() => </>} /> */}\n        {/* </Switch> */}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // mapDispatchToProps\n  {\n    currentUser,\n    logoutUser,\n    fetchAllUsers,\n    fetchAllSongs,\n    setAllFolloweds,\n    setAllFollowers\n  }\n)(withRouter(App))\n"]},"metadata":{},"sourceType":"module"}