{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/ActiveStorageComponent.js\";\nimport React, { Component } from \"react\";\nimport ActiveStorageProvider from \"react-activestorage-provider\";\n\nclass ActiveStorageComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      song_link: ''\n    };\n  }\n\n  render() {\n    return React.createElement(ActiveStorageProvider, {\n      endpoint: {\n        path: \"/songs\",\n        model: \"Song\",\n        attribute: \"song_link\",\n        method: \"POST\"\n      },\n      onSubmit: song => this.setState({\n        song_link: song.song_link\n      }),\n      render: ({\n        handleUpload,\n        uploads,\n        ready\n      }) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        disabled: !ready,\n        onChange: e => handleUpload(e.currentTarget.files),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), uploads.map(upload => {\n        switch (upload.state) {\n          case \"waiting\":\n            return React.createElement(\"p\", {\n              key: upload.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }, \"Waiting to upload \", upload.file.name);\n\n          case \"uploading\":\n            return React.createElement(\"p\", {\n              key: upload.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35\n              },\n              __self: this\n            }, \"Uploading \", upload.file.name, \": \", upload.progress, \"%\");\n\n          case \"error\":\n            return React.createElement(\"p\", {\n              key: upload.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41\n              },\n              __self: this\n            }, \"Error uploading \", upload.file.name, \": \", upload.error);\n\n          case \"finished\":\n            return React.createElement(\"p\", {\n              key: upload.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47\n              },\n              __self: this\n            }, \"Finished uploading \", upload.file.name);\n        }\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default ActiveStorageComponent;","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/ActiveStorageComponent.js"],"names":["React","Component","ActiveStorageProvider","ActiveStorageComponent","state","song_link","render","path","model","attribute","method","song","setState","handleUpload","uploads","ready","e","currentTarget","files","map","upload","id","file","name","progress","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,qBAAP,MAAkC,8BAAlC;;AAEA,MAAMC,sBAAN,SAAqCF,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC7CG,KAD6C,GACrC;AACNC,MAAAA,SAAS,EAAE;AADL,KADqC;AAAA;;AAK7CC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,qBAAD;AACE,MAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,QADE;AAERC,QAAAA,KAAK,EAAE,MAFC;AAGRC,QAAAA,SAAS,EAAE,WAHH;AAIRC,QAAAA,MAAM,EAAE;AAJA,OADZ;AAOE,MAAA,QAAQ,EAAEC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEP,QAAAA,SAAS,EAAEM,IAAI,CAACN;AAAlB,OAAd,CAPpB;AAQE,MAAA,MAAM,EAAE,CAAC;AAAEQ,QAAAA,YAAF;AAAgBC,QAAAA,OAAhB;AAAyBC,QAAAA;AAAzB,OAAD,KACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,CAACA,KAFb;AAGE,QAAA,QAAQ,EAAEC,CAAC,IAAIH,YAAY,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOGJ,OAAO,CAACK,GAAR,CAAYC,MAAM,IAAI;AACrB,gBAAQA,MAAM,CAAChB,KAAf;AACE,eAAK,SAAL;AACE,mBACE;AAAG,cAAA,GAAG,EAAEgB,MAAM,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAsCD,MAAM,CAACE,IAAP,CAAYC,IAAlD,CADF;;AAGF,eAAK,WAAL;AACE,mBACE;AAAG,cAAA,GAAG,EAAEH,MAAM,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACaD,MAAM,CAACE,IAAP,CAAYC,IADzB,QACiCH,MAAM,CAACI,QADxC,MADF;;AAKF,eAAK,OAAL;AACE,mBACE;AAAG,cAAA,GAAG,EAAEJ,MAAM,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACmBD,MAAM,CAACE,IAAP,CAAYC,IAD/B,QACuCH,MAAM,CAACK,KAD9C,CADF;;AAKF,eAAK,UAAL;AACE,mBACE;AAAG,cAAA,GAAG,EAAEL,MAAM,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAuCD,MAAM,CAACE,IAAP,CAAYC,IAAnD,CADF;AAlBJ;AAsBD,OAvBA,CAPH,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AA6CD;;AAnD4C;;AAsD/C,eAAepB,sBAAf","sourcesContent":["import React, { Component } from \"react\"\nimport ActiveStorageProvider from \"react-activestorage-provider\"\n\nclass ActiveStorageComponent extends Component {\n  state = { \n    song_link: ''\n   }\n\n  render() {\n    return (\n      <ActiveStorageProvider\n        endpoint={{\n          path: \"/songs\",\n          model: \"Song\",\n          attribute: \"song_link\",\n          method: \"POST\"\n        }}\n        onSubmit={song => this.setState({ song_link: song.song_link })}\n        render={({ handleUpload, uploads, ready }) => (\n          <div>\n            <input\n              type=\"file\"\n              disabled={!ready}\n              onChange={e => handleUpload(e.currentTarget.files)}\n            />\n\n            {uploads.map(upload => {\n              switch (upload.state) {\n                case \"waiting\":\n                  return (\n                    <p key={upload.id}>Waiting to upload {upload.file.name}</p>\n                  )\n                case \"uploading\":\n                  return (\n                    <p key={upload.id}>\n                      Uploading {upload.file.name}: {upload.progress}%\n                    </p>\n                  )\n                case \"error\":\n                  return (\n                    <p key={upload.id}>\n                      Error uploading {upload.file.name}: {upload.error}\n                    </p>\n                  )\n                case \"finished\":\n                  return (\n                    <p key={upload.id}>Finished uploading {upload.file.name}</p>\n                  )\n              }\n            })}\n          </div>\n        )}\n      />\n    )\n  }\n}\n\nexport default ActiveStorageComponent\n"]},"metadata":{},"sourceType":"module"}