{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Waveform from \"./Waveform\"; // import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  // state = {\n  //   audio: ''\n  // }\n  // componentDidMount() {\n  //   this.fetchAudio(45)\n  // }\n  // fetchAudio = (song_id) => {\n  //   const fetchURL = 'http://localhost:3000/songs'\n  //   fetch(`${fetchURL}/${song_id}`)\n  //   .then(res=>res.json())\n  //   .then(audio => {\n  //     console.log('fetch: ', audio)\n  //     // debugger\n  //     this.setState({audio: audio.song_link})\n  //   })\n  //   .catch(err => console.log(err))\n  // }\n  render() {\n    const allSongs = this.props.allSongs;\n    console.log(\"allsongs: \", allSongs); // const mario = require('../mario.mp3') //? For testing\n\n    const mappedFeed = allSongs.map(songData => {\n      console.log(songData);\n      return React.createElement(\"div\", {\n        className: \"waveform-\".concat(songData.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Waveform, {\n        songData: songData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n    });\n    return allSongs.length > 0 ? React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"da Feed\", mappedFeed) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"loading...\");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, // null,\nnull)(withRouter(FeedContainer));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedContainer.js"],"names":["React","Component","connect","withRouter","Waveform","FeedContainer","render","allSongs","props","console","log","mappedFeed","map","songData","id","length","mapStateToProps","state","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CACA;;AAEA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AACpC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAK,EAAAA,MAAM,GAAG;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;AAEPE,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAA1B,EAFO,CAGP;;AACA,UAAMI,UAAU,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,QAAQ,IAAI;AAC1CJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACA,aACE;AAAK,QAAA,SAAS,qBAAcA,QAAQ,CAACC,EAAvB,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAED,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAMD,KARkB,CAAnB;AAUA,WAAON,QAAQ,CAACQ,MAAT,GAAkB,CAAlB,GACL;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGJ,UAFH,CADK,GAQL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF;AAUD;;AA5CmC;;AA+CtC,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAED,KAAK,CAACC,IADP;AAEL;AACAX,IAAAA,QAAQ,EAAEU,KAAK,CAACV;AAHX,GAAP;AAKD,CAND;;AAQA,eAAeL,OAAO,CACpBc,eADoB,EAEpB;AACA,IAHoB,CAAP,CAIbb,UAAU,CAACE,aAAD,CAJG,CAAf","sourcesContent":["import React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport Waveform from \"./Waveform\"\n// import { fetchAllSongs } from \"../actions\"\n\nclass FeedContainer extends Component {\n  // state = {\n  //   audio: ''\n  // }\n  // componentDidMount() {\n  //   this.fetchAudio(45)\n  // }\n\n  // fetchAudio = (song_id) => {\n  //   const fetchURL = 'http://localhost:3000/songs'\n  //   fetch(`${fetchURL}/${song_id}`)\n  //   .then(res=>res.json())\n  //   .then(audio => {\n  //     console.log('fetch: ', audio)\n  //     // debugger\n  //     this.setState({audio: audio.song_link})\n  //   })\n  //   .catch(err => console.log(err))\n  // }\n\n  render() {\n    const { allSongs } = this.props\n    console.log(\"allsongs: \", allSongs)\n    // const mario = require('../mario.mp3') //? For testing\n    const mappedFeed = allSongs.map(songData => {\n      console.log(songData)\n      return (\n        <div className={`waveform-${songData.id}`}>\n          <Waveform songData={songData} />\n          {/* <audio src={songData.song_link} /> */}\n        </div>\n      )\n    })\n\n    return allSongs.length > 0 ? (\n      <div className=\"feed-container\">\n        da Feed\n        {mappedFeed}\n        {/* <audio controls='controls' src={mario} /> */}\n        {/* <Waveform src={allSongs[14].song_link}/> */}\n      </div>\n    ) : (\n      <div>loading...</div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    // allUsers: state.allUsers,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  // null,\n  null\n)(withRouter(FeedContainer))\n"]},"metadata":{},"sourceType":"module"}