{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport Waveform from \"./Waveform\";\nimport { setDisplaySong } from \"../actions\";\n\nclass SongFeedComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filtered: this.props.filtered\n    };\n\n    this.goToUserProfile = e => {\n      const user_id = this.props.songData.song.user.id;\n      this.props.history.push(\"/profile/\".concat(user_id));\n    };\n\n    this.goToSongPage = e => {\n      const song_id = this.props.songData.song.id;\n      this.props.history.push(\"/songs/\".concat(song_id)); // TODO Might not need to setdisplay song because also in SongShowPage render\n\n      this.props.setDisplaySong(this.props.allSongs, this.props.history);\n    };\n  }\n\n  render() {\n    const songData = this.props.songData;\n    const song = songData.song;\n    const user = song.user;\n    console.log(songData.song_link);\n    return React.createElement(\"div\", {\n      className: \"song-comp-\".concat(song.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Grid.Row, {\n      columns: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: this.goToSongPage,\n      style: {\n        fontWeight: \"bold\",\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, song.title))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      floated: \"left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, this.props.userClickEnabled ? null : React.createElement(\"span\", {\n      onClick: this.goToUserProfile,\n      style: {\n        fontStyle: \"italic\",\n        cursor: \"pointer\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, user.username))), React.createElement(Grid.Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Waveform, {\n      filtered: this.props.filtered,\n      song: song,\n      song_link: songData.song_link,\n      waveHeight: 100,\n      responsive: true,\n      splitChannels: false,\n      mediaControls: true,\n      maxCanvasWidth: 500,\n      showCommentCount: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allSongs: state.allSongs\n  };\n};\n\nexport default connect(mapStateToProps, {\n  setDisplaySong\n})(withRouter(SongFeedComponent));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/SongFeedComponent.js"],"names":["React","Component","connect","Link","withRouter","Button","Grid","Header","Waveform","setDisplaySong","SongFeedComponent","state","filtered","props","goToUserProfile","e","user_id","songData","song","user","id","history","push","goToSongPage","song_id","allSongs","render","console","log","song_link","fontWeight","cursor","title","userClickEnabled","fontStyle","username","mapStateToProps"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter } from \"react-router-dom\"\nimport { Button, Grid, Header } from \"semantic-ui-react\"\nimport Waveform from \"./Waveform\"\nimport { setDisplaySong } from \"../actions\"\n\nclass SongFeedComponent extends Component {\n  state = {\n    filtered: this.props.filtered\n  }\n  goToUserProfile = e => {\n    const user_id = this.props.songData.song.user.id\n    this.props.history.push(`/profile/${user_id}`)\n  }\n\n  goToSongPage = e => {\n    const song_id = this.props.songData.song.id\n    this.props.history.push(`/songs/${song_id}`)\n    // TODO Might not need to setdisplay song because also in SongShowPage render\n    this.props.setDisplaySong(this.props.allSongs, this.props.history)\n  }\n\n  render() {\n    const { songData } = this.props\n    const { song } = songData\n    const { user } = song\n    console.log(songData.song_link)\n    return (\n      <div className={`song-comp-${song.id}`}>\n        <Grid.Row columns={4}>\n          <Grid.Column>\n            <span\n              onClick={this.goToSongPage}\n              style={{ fontWeight: \"bold\", cursor: \"pointer\" }}\n            >\n              {song.title}\n            </span>\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column floated=\"left\">\n            {this.props.userClickEnabled ? null : (\n              <span\n                onClick={this.goToUserProfile}\n                style={{ fontStyle: \"italic\", cursor: \"pointer\" }}\n              >\n                {user.username}\n              </span>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Waveform\n            filtered={this.props.filtered}\n            song={song}\n            song_link={songData.song_link}\n            waveHeight={100}\n            responsive={true}\n            splitChannels={false}\n            mediaControls={true}\n            maxCanvasWidth={500}\n            showCommentCount={false}\n          />\n        </Grid.Row>\n        <br />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allSongs: state.allSongs\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { setDisplaySong }\n)(withRouter(SongFeedComponent))\n"]},"metadata":{},"sourceType":"module"}