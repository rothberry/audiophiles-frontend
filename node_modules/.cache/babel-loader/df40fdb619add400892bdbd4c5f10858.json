{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedUserProfileSide.js\";\n\n/*eslint-disable */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter, Redirect } from \"react-router-dom\";\nimport { Button, Grid, Modal, Image, Icon, Label, Segment, Header } from \"semantic-ui-react\";\nimport { findDisplayUser, followUser, currentUser, currentRelationship, setCurrentUser, deleteUser } from \"../actions\";\n\nclass FeedUserProfileSide extends Component {\n  // handleFollowUser = (followed_id, follower_id) => {\n  render() {\n    const isCurrentUser = this.props.user.isCurrentUser;\n    let feedUser;\n    let isFeedUser;\n\n    if (!!this.props.showCurrentUser) {\n      feedUser = this.props.showCurrentUser;\n      isFeedUser = true;\n    } else if (!!this.props.displayUser) {\n      feedUser = this.props.displayUser;\n      isFeedUser = false;\n    }\n\n    const _feedUser = feedUser,\n          username = _feedUser.username,\n          name = _feedUser.name,\n          location = _feedUser.location,\n          bio = _feedUser.bio,\n          id = _feedUser.id,\n          img_url = _feedUser.img_url,\n          facebook_url = _feedUser.facebook_url,\n          twitter_url = _feedUser.twitter_url,\n          soundcloud_url = _feedUser.soundcloud_url; // console.log(\"cur\", this.props.showCurrentUser)\n    // console.log(\"dis\", this.props.displayUser)\n    // console.log(\"feed\", feedUser.username)\n\n    const isFace = !facebook_url;\n    const isTwit = !twitter_url;\n    const isSound = !soundcloud_url;\n    const isImg = !!img_url;\n    let isFollowing;\n\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id;\n      });\n    }\n\n    const mapFollowers = this.props.followers.map(fol => {\n      return React.createElement(Label, {\n        widths: \"equals\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Link, {\n        onClick: (allUsers, history) => this.props.findDisplayUser(this.props.allUsers, this.props.history),\n        to: \"/profile/\".concat(fol.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, fol.username));\n    });\n    return React.createElement(Grid.Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, isImg ? React.createElement(Image, {\n      src: img_url,\n      circular: true,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }) : null, React.createElement(Header, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, username), isFeedUser ? null : React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Header.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Name: \", name), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"location: \", location), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Bio: \", bio)), React.createElement(Button.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"facebook\",\n      as: \"a\",\n      href: facebook_url,\n      disabled: isFace,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"facebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), \" Facebook\"), React.createElement(Button, {\n      color: \"twitter\",\n      as: \"a\",\n      href: twitter_url,\n      disabled: isTwit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), \" Twitter\"), React.createElement(Button, {\n      color: \"orange\",\n      as: \"a\",\n      href: soundcloud_url,\n      disabled: isSound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"soundcloud\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), \" Soundcloud\"))), !isFeedUser || isCurrentUser ? React.createElement(Button, {\n      onClick: (user_id, history) => this.props.deleteUser(this.props.user.id, this.props.history),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Delete Account\") : null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n})(withRouter(FeedUserProfileSide));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/FeedUserProfileSide.js"],"names":["React","Component","connect","Link","withRouter","Redirect","Button","Grid","Modal","Image","Icon","Label","Segment","Header","findDisplayUser","followUser","currentUser","currentRelationship","setCurrentUser","deleteUser","FeedUserProfileSide","render","isCurrentUser","props","user","feedUser","isFeedUser","showCurrentUser","displayUser","username","name","location","bio","id","img_url","facebook_url","twitter_url","soundcloud_url","isFace","isTwit","isSound","isImg","isFollowing","followers","find","mapFollowers","map","fol","allUsers","history","user_id","mapStateToProps","state","followeds"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React, { Component } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Link, withRouter, Redirect } from \"react-router-dom\"\nimport {\n  Button,\n  Grid,\n  Modal,\n  Image,\n  Icon,\n  Label,\n  Segment,\n  Header\n} from \"semantic-ui-react\"\nimport {\n  findDisplayUser,\n  followUser,\n  currentUser,\n  currentRelationship,\n  setCurrentUser,\n  deleteUser\n} from \"../actions\"\n\nclass FeedUserProfileSide extends Component {\n  // handleFollowUser = (followed_id, follower_id) => {\n  render() {\n    const { isCurrentUser } = this.props.user\n    let feedUser\n    let isFeedUser\n    if (!!this.props.showCurrentUser) {\n      feedUser = this.props.showCurrentUser\n      isFeedUser = true\n    } else if (!!this.props.displayUser) {\n      feedUser = this.props.displayUser\n      isFeedUser = false\n    }\n    const {\n      username,\n      name,\n      location,\n      bio,\n      id,\n      img_url,\n      facebook_url,\n      twitter_url,\n      soundcloud_url\n    } = feedUser\n    // console.log(\"cur\", this.props.showCurrentUser)\n    // console.log(\"dis\", this.props.displayUser)\n    // console.log(\"feed\", feedUser.username)\n    const isFace = !facebook_url\n    const isTwit = !twitter_url\n    const isSound = !soundcloud_url\n    const isImg = !!img_url\n    let isFollowing\n    if (!!this.props.user.id) {\n      isFollowing = this.props.followers.find(user => {\n        return user.id === this.props.user.id\n      })\n    }\n\n    const mapFollowers = this.props.followers.map(fol => {\n      return (\n        <Label widths=\"equals\">\n          <Link\n            onClick={(allUsers, history) =>\n              this.props.findDisplayUser(\n                this.props.allUsers,\n                this.props.history\n              )\n            }\n            to={`/profile/${fol.id}`}\n          >\n            {fol.username}\n          </Link>\n        </Label>\n      )\n    })\n\n    return (\n      <Grid.Column>\n        <Segment>\n          {isImg ? <Image src={img_url} circular alt=\"\" /> : null}\n          <Header size='large'>{username}</Header>\n          {isFeedUser ? null : (\n            <Segment>\n              <Header.Group>\n                <Header>Name: {name}</Header>\n                <Header>location: {location}</Header>\n                <Header>Bio: {bio}</Header>\n              </Header.Group>\n              <Button.Group>\n                <Button\n                  color=\"facebook\"\n                  as=\"a\"\n                  href={facebook_url}\n                  disabled={isFace}\n                >\n                  <Icon name=\"facebook\" /> Facebook\n                </Button>\n                <Button\n                  color=\"twitter\"\n                  as=\"a\"\n                  href={twitter_url}\n                  disabled={isTwit}\n                >\n                  <Icon name=\"twitter\" /> Twitter\n                </Button>\n                <Button\n                  color=\"orange\"\n                  as=\"a\"\n                  href={soundcloud_url}\n                  disabled={isSound}\n                >\n                  <Icon name=\"soundcloud\" /> Soundcloud\n                </Button>\n              </Button.Group>\n            </Segment>\n          )}\n          {/* <Segment widths=\"equal\">\n            <h4>Followers: </h4>\n            {mapFollowers.length > 0 ? (\n              <ul>{mapFollowers}</ul>\n            ) : (\n              <p>No Followers Yet!</p>\n            )}\n          </Segment> */}\n          {!isFeedUser || isCurrentUser ? (\n            <Button\n              onClick={(user_id, history) =>\n                this.props.deleteUser(this.props.user.id, this.props.history)\n              }\n            >\n              Delete Account\n            </Button>\n          ) : null}\n\n          {/* {!isFeedUser || !!isFollowing || isCurrentUser ? null : (\n            <Button\n              onClick={(followed, follower_id) =>\n                this.handleFollowUser(\n                  this.props.displayUser,\n                  this.props.user.id\n                )\n              }\n            >\n              Follow Me!\n            </Button>\n          )} */}\n        </Segment>\n      </Grid.Column>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers,\n    displayUser: state.displayUser,\n    followeds: state.followeds,\n    followers: state.followers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    findDisplayUser,\n    followUser,\n    currentUser,\n    currentRelationship,\n    setCurrentUser,\n    deleteUser\n  }\n)(withRouter(FeedUserProfileSide))\n"]},"metadata":{},"sourceType":"module"}