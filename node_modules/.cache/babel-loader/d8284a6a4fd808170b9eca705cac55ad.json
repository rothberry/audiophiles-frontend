{"ast":null,"code":"var _jsxFileName = \"/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Waveform.js\";\n\n/*eslint-disable */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport WaveSurfer from \"wavesurfer.js\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Icon, Label } from \"semantic-ui-react\";\n\nclass Waveform extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleTogglePlay = () => {\n      if (this.state.isPlaying) {\n        this.wavesurfer.pause();\n        this.setState({\n          isPlaying: !this.state.isPlaying\n        });\n      } else {\n        this.wavesurfer.play();\n        this.setState({\n          isPlaying: !this.state.isPlaying\n        });\n      }\n    };\n\n    this.handleStop = () => {\n      this.setState(prevState => {\n        this.wavesurfer.stop();\n        return {\n          isPlaying: false,\n          pos: 0\n        };\n      });\n    };\n\n    this.handleFavorite = e => {\n      // console.log(e.target)\n      const fetchFavoritesURL = 'http://localhost:3000/favorites';\n      const reqObj = {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: this.props.user.id,\n          song_id: this.props.song.id\n        })\n      };\n      fetch(fetchFavoritesURL, reqObj).then(resp => resp.json()).then(data => {\n        console.log(data);\n\n        if (!data.errors) {\n          this.setState({\n            favorites: this.state.favorites + 1,\n            isFavorite: !this.state.isFavorite\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.state = {\n      isPlaying: false,\n      favorites: 0,\n      isFavorite: false,\n      pos: 0\n    };\n  }\n\n  componentDidMount() {\n    const _this$props = this.props,\n          waveHeight = _this$props.waveHeight,\n          responsive = _this$props.responsive,\n          splitChannels = _this$props.splitChannels,\n          mediaControls = _this$props.mediaControls,\n          maxCanvasWidth = _this$props.maxCanvasWidth,\n          song = _this$props.song;\n    let setIsFavorite = song.favorites.filter(fav => fav.user_id === this.props.user.id);\n    console.log(setIsFavorite);\n    this.$el = ReactDOM.findDOMNode(this);\n    this.$waveform = this.$el.querySelector(\".wave\");\n\n    if (this.$waveform) {\n      this.wavesurfer = WaveSurfer.create({\n        container: this.$waveform,\n        mediaType: \"audio\",\n        waveColor: \"red\",\n        progressColor: \"blue\",\n        partialRender: true,\n        // barWidth: 1,\n        height: waveHeight,\n        maxCanvasWidth: maxCanvasWidth,\n        splitChannels: splitChannels,\n        mediaControls: mediaControls,\n        responsive: responsive\n      }); // this.$waveform.style.backgroundColor = \"black\"\n\n      this.wavesurfer.load(this.props.song_link);\n      this.setState({\n        favorites: this.props.song.favorites.length\n      });\n    } else {\n      console.log('waveform loading...');\n    }\n  }\n\n  render() {\n    // return this.props.src ? (\n    const buttonStyle = {\n      width: '20%'\n    }; // console.log(this.state)\n\n    return React.createElement(\"div\", {\n      className: \"waveform\",\n      style: {\n        cursor: 'text'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), !this.state.isPlaying ? React.createElement(Button, {\n      name: \"play-pause\",\n      style: buttonStyle,\n      onClick: this.handleTogglePlay,\n      circular: true,\n      icon: \"play\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }) : React.createElement(Button, {\n      name: \"play-pause\",\n      style: buttonStyle,\n      onClick: this.handleTogglePlay,\n      circular: true,\n      icon: \"pause\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Button, {\n      name: \"stop\",\n      style: buttonStyle,\n      onClick: this.handleStop,\n      circular: true,\n      icon: \"stop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Button, {\n      as: \"div\",\n      toggle: true,\n      labelPosition: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Button, {\n      icon: true,\n      onClick: this.handleFavorite,\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"heart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Label, {\n      basic: true,\n      pointing: \"left\",\n      circular: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.favorites))); // : ( \n    //   <div className='waveform'>da feeed is loadin..................</div>\n    // )\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  };\n};\n\nexport default connect(mapStateToProps, null)(withRouter(Waveform));","map":{"version":3,"sources":["/home/phil/dev/projects/soundclone/mod-5-audiofiles-frontend/src/components/Waveform.js"],"names":["React","ReactDOM","WaveSurfer","connect","withRouter","Button","Icon","Label","Waveform","Component","constructor","props","handleTogglePlay","state","isPlaying","wavesurfer","pause","setState","play","handleStop","prevState","stop","pos","handleFavorite","e","fetchFavoritesURL","reqObj","method","headers","body","JSON","stringify","user_id","user","id","song_id","song","fetch","then","resp","json","data","console","log","errors","favorites","isFavorite","catch","err","componentDidMount","waveHeight","responsive","splitChannels","mediaControls","maxCanvasWidth","setIsFavorite","filter","fav","$el","findDOMNode","$waveform","querySelector","create","container","mediaType","waveColor","progressColor","partialRender","height","load","song_link","length","render","buttonStyle","width","cursor","mapStateToProps","allUsers"],"mappings":"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","sourcesContent":["/*eslint-disable */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport WaveSurfer from \"wavesurfer.js\"\nimport { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\nimport { Button, Icon, Label } from \"semantic-ui-react\"\n\nclass Waveform extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isPlaying: false,\n      favorites: 0,\n      isFavorite: false,\n      pos: 0\n    }\n  }\n  componentDidMount() {\n    const { waveHeight, responsive, splitChannels, mediaControls, maxCanvasWidth, song } = this.props\n    let setIsFavorite = song.favorites.filter(fav => fav.user_id === this.props.user.id)\n    console.log(setIsFavorite)\n    this.$el = ReactDOM.findDOMNode(this)\n    this.$waveform = this.$el.querySelector(\".wave\")\n    if (this.$waveform) {\n      this.wavesurfer = WaveSurfer.create({\n        container: this.$waveform,\n        mediaType: \"audio\",\n        waveColor: \"red\",\n        progressColor: \"blue\",\n        partialRender: true,\n        // barWidth: 1,\n        height: waveHeight,\n        maxCanvasWidth: maxCanvasWidth,\n        splitChannels: splitChannels,\n        mediaControls: mediaControls,\n        responsive: responsive\n      })\n      // this.$waveform.style.backgroundColor = \"black\"\n      this.wavesurfer.load(this.props.song_link)\n      this.setState({favorites: this.props.song.favorites.length})\n    } else {\n      console.log('waveform loading...')\n    }\n  }\n\n  handleTogglePlay = () => {\n    if (this.state.isPlaying) {\n      this.wavesurfer.pause()\n      this.setState({ isPlaying: !this.state.isPlaying })\n    } else {\n      this.wavesurfer.play()\n      this.setState({ isPlaying: !this.state.isPlaying })\n    }\n  }\n\n  handleStop = () => {\n    this.setState(prevState => {\n      this.wavesurfer.stop()\n      return { isPlaying: false, pos: 0 }\n    })\n  }\n\n  handleFavorite = (e) => {\n    // console.log(e.target)\n    const fetchFavoritesURL = 'http://localhost:3000/favorites'\n    const reqObj = {\n      method: 'POST',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n        user_id: this.props.user.id,\n        song_id: this.props.song.id\n      })\n    }\n    fetch(fetchFavoritesURL, reqObj)\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n      if (!data.errors) {\n        this.setState({\n          favorites: this.state.favorites + 1,\n          isFavorite: !this.state.isFavorite\n        })\n      }\n\n    })\n    .catch(err => console.log(err))\n    \n  }\n\n  render() {\n    // return this.props.src ? (\n    const buttonStyle = {width: '20%'}\n    // console.log(this.state)\n    return (\n      <div className=\"waveform\" style={{cursor: 'text'}}>\n        <div className=\"wave\"></div>\n        {!this.state.isPlaying ? \n        <Button name=\"play-pause\" style={buttonStyle} onClick={this.handleTogglePlay} circular icon='play' /> :\n        <Button name=\"play-pause\" style={buttonStyle} onClick={this.handleTogglePlay} circular icon='pause' />\n        }\n        <Button name=\"stop\" style={buttonStyle} onClick={this.handleStop} circular icon='stop' />\n        {/* <Button name=\"stop\" onClick={this.handleFavorite} icon='heart'> */}\n        <Button as='div' toggle labelPosition='right' >\n          <Button icon onClick={this.handleFavorite} circular >\n            <Icon name='heart' />\n          </Button>\n          <Label basic pointing='left' circular >\n            {this.state.favorites}\n          </Label>\n        </Button>\n\n        {/* </Button> */}\n      </div>\n    ) \n    // : ( \n    //   <div className='waveform'>da feeed is loadin..................</div>\n    // )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    allUsers: state.allUsers\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(withRouter(Waveform))"]},"metadata":{},"sourceType":"module"}